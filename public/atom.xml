<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>KYLE LIU</title>
  
  <subtitle>个人博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://kyle.github.io/"/>
  <updated>2019-05-03T15:26:35.477Z</updated>
  <id>https://kyle.github.io/</id>
  
  <author>
    <name>Kyle Liu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LAMP学习之Apache添加SSL证书</title>
    <link href="https://kyle.github.io/2019/04/07/linux/lamp-xue-xi-zhi-apache-tian-jia-ssl-zheng-shu/"/>
    <id>https://kyle.github.io/2019/04/07/linux/lamp-xue-xi-zhi-apache-tian-jia-ssl-zheng-shu/</id>
    <published>2019-04-07T01:25:00.000Z</published>
    <updated>2019-05-03T15:26:35.477Z</updated>
    
    <content type="html"><![CDATA[<h2 id="LAMP学习之Apache添加SSL证书"><a href="#LAMP学习之Apache添加SSL证书" class="headerlink" title="LAMP学习之Apache添加SSL证书"></a>LAMP学习之Apache添加SSL证书</h2><h2 id="环境装备"><a href="#环境装备" class="headerlink" title="环境装备"></a>环境装备</h2><ul><li>已经安装好了的一套Lamp环境，和</li><li>阅读过Httpd所有官方文档的的自信。</li></ul><h2 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h2><h3 id="1-下载证书"><a href="#1-下载证书" class="headerlink" title="1.下载证书"></a>1.下载证书</h3><blockquote><p>进入阿里云域名管理，再点击右边的SSL</p></blockquote><p><img src="http://oss.anonycurse.cn/article/images/20181016/mYcEkWLm1bhlJeFDGxXcsBsci3tMKWLhNFEvhBRs.png" alt="进入SSL" title="进入SSL"></p><blockquote><p>申请完证书后记得点击左上角返回列表下载证书<br><img src="http://oss.anonycurse.cn/article/images/20181016/LA9MaQ3IqD4QMrB5OhAhPxXPG1PUYssGOfOh5qcn.png" alt="申请SSL" title="申请SSL"></p></blockquote><p><img src="http://oss.anonycurse.cn/article/images/20181016/W9fdbI03VOMYjSJszyHRM0bGlwKA9jT4ukwV2jkZ.png" alt="下载证书" title="下载证书"></p><p><img src="http://oss.anonycurse.cn/article/images/20181016/muxi4oUZfjctSdoYw4CiLr9z2eRbBzv6uuksYZCR.png" alt="下载证书2" title="下载证书2"></p><h3 id="上传证书"><a href="#上传证书" class="headerlink" title="上传证书"></a>上传证书</h3><blockquote><p>我在网上看见有人把SSL证书直接放在项目里面，对于这种举动我感觉还是有点小怕，<br>最后我觉得证书放在在apache 的conf目录下</p></blockquote><p><img src="http://oss.anonycurse.cn/article/images/20181016/1njDCGjbCdHEEuBHLTpxbZHshGTQuuCNRuu1TNbQ.png" alt="证书路径" title="证书路径"></p><h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><ul><li>1.httpd.conf</li></ul><pre class=" language-apache"><code class="language-apache">#1. 开启必要的moduleLoadModule socache_shmcb_module modules/mod_socache_shmcb.soLoadModule ssl_module modules/mod_ssl.so#2.开启SSL配置文件Include conf/extra/httpd-ssl.conf#3.导入外部主机配置文件#注意，我安装Apache的时候是给每个网站添加一个配置文件，所以会有一个vhosts专门存放网站主机配置文件# Virtual hostsInclude conf/vhosts/*.conf</code></pre><ul><li>conf/extra/httpd-ssl.conf<blockquote><p>这个配置文件和httpd.conf有点类型，存放了一些关于HTTPS的配置，包括一些全局配置和一个默认的虚拟主机配置，这个我喜欢删掉默认想虚拟主机，只保留一些全局配置就好</p></blockquote></li></ul><pre class=" language-apache"><code class="language-apache">Listen 443SSLCipherSuite HIGH:!RC4:!MD5:!aNULL:!eNULL:!NULL:!DH:!EDH:!EXP:+MEDIUMSSLHonorCipherOrder onSSLProtocol all -SSLv2 -SSLv3SSLProxyProtocol all -SSLv3SSLPassPhraseDialog  builtinSSLSessionCache        "shmcb:/web/bin/apache/logs/ssl_scache(512000)"SSLSessionCacheTimeout  300</code></pre><ul><li>conf/vhosts/<a href="http://www.angexinjia.com.conf" target="_blank" rel="noopener">www.angexinjia.com.conf</a></li></ul><pre class=" language-apache"><code class="language-apache">#默认HTTP主机<VirtualHost *:80>    DocumentRoot "/web/www/www.anonycurse.com/public"    ServerName www.anonycurse.com    ServerAlias www.anonycurse.com www.anonycurse.com#    ErrorLog logs/www.anonycurse.com.error.log    CustomLog logs/www.anonycurse.com.access.log common# Laravel 项目配置【开启HTTPS后可以注释掉】#    <Directory "/web/www/www.anonycurse.com/public">#        AllowOverride All#        Require all granted#        DirectoryIndex index.php#    </Directory># 开启后HTTP跳转HTTPS配置    RewriteEngine on    RewriteCond   %{HTTPS} !=on    RewriteRule   ^(.*)  https://www.anonycurse.com$1 [R=permanent,L]</VirtualHost><VirtualHost *:443>    DocumentRoot "/web/www/www.anonycurse.com/public"#  因为是HTTPS单域名所以不需要太多Alias        ServerName www.anonycurse.com    ServerAlias www.anonycurse.com    ErrorLog logs/www.anonycurse.com.ssl.error.log    CustomLog logs/www.anonycurse.com.access.ssl.log common#    HTTPS Laravel 配置    <Directory "/web/www/www.anonycurse.com/public">        AllowOverride All        Require all granted        DirectoryIndex index.php        SSLOptions +StdEnvVars    </Directory>#    证书配置    SSLEngine on    SSLCertificateFile /web/bin/apache/conf/ssl-key/www.anonycurse.com/public.pem    SSLCertificateKeyFile /web/bin/apache/conf/ssl-key/www.anonycurse.com/1541114560394.key    SSLCertificateChainFile /web/bin/apache/conf/ssl-key/www.anonycurse.com/chain.pem    <FilesMatch "\.(cgi|shtml|phtml|php)$">        SSLOptions +StdEnvVars    </FilesMatch>    BrowserMatch "MSIE [2-5]" \         nokeepalive ssl-unclean-shutdown \         downgrade-1.0 force-response-1.0    CustomLog "/web/bin/apache/logs/ssl_request_log" \          "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"</VirtualHost></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;LAMP学习之Apache添加SSL证书&quot;&gt;&lt;a href=&quot;#LAMP学习之Apache添加SSL证书&quot; class=&quot;headerlink&quot; title=&quot;LAMP学习之Apache添加SSL证书&quot;&gt;&lt;/a&gt;LAMP学习之Apache添加SSL证书&lt;/h2&gt;&lt;
      
    
    </summary>
    
      <category term="Linux" scheme="https://kyle.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://kyle.github.io/tags/Linux/"/>
    
      <category term="Apache" scheme="https://kyle.github.io/tags/Apache/"/>
    
      <category term="SSL" scheme="https://kyle.github.io/tags/SSL/"/>
    
  </entry>
  
  <entry>
    <title>Nginx配置文件详解</title>
    <link href="https://kyle.github.io/2019/04/07/linux/nginx-pei-zhi-wen-jian-xiang-jie/"/>
    <id>https://kyle.github.io/2019/04/07/linux/nginx-pei-zhi-wen-jian-xiang-jie/</id>
    <published>2019-04-07T01:25:00.000Z</published>
    <updated>2019-05-03T16:10:48.559Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Nginx配置文件详解"><a href="#Nginx配置文件详解" class="headerlink" title="Nginx配置文件详解"></a>Nginx配置文件详解</h1><pre><code># 运行用户user    www;# 启动进程,通常设置成和cpu的数量相等,或设置为autoworker_processes    1;# 设置全局错误日志存储位置# error_log     /var/wwwlogs/error.log;# error_log     /var/wwwlogs/error.log  notice;# error_log     /var/wwwlogs/error.log  info;# 设置pid文件存储位置# pid   /var/wwwlogs/nginx.pid;# 工作模式及连接数上限events {    # epoll是多路复用IO(I/O Multiplexing)中的一种方式    use   epoll;     # 单个后台worker process进程的最大并发链接数        worker_connections  1024;    # 最大客户连接数，由于浏览器默认使用两个并发连接，注意：此值不是一个nginx参数！！！！！！！！！！！    # 作为普通HTTP服务器    # max_clients = worker_processes * worker_connections / 2    # 作为反向代理服务器    # max_clients = worker_processes * worker_connections / 4}http {    # 设定mime类型,类型由mime.type文件定义    include         mime.types;    default_type    application/octet-stream;    # 设定日志格式    log_format  main  &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39; &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39; &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;    # 日志存储路径与格式    access_log  /var/wwwlogs/access.log  main;    # sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，    # 对于普通应用，必须设为 on,    # 如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，    # 以平衡磁盘与网络I/O处理速度，降低系统的uptime.    sendfile        on;    # tcp_nopush    on;    # 连接超时时间    keepalive_timeout   60;    tcp_nodelay         on;    # 开启gzip压缩    gzip                on;    gzip_min_length     1k;    gzip_buffers        4 16k;    gzip_http_version   1.0;    gzip_comp_level     2;    gzip_types          text/plain application/x-javascript text/css application/xml;    gzip_vary           on;    # 设定请求缓冲    client_header_buffer_size    128k;    large_client_header_buffers  4 128k;    # 设定虚拟主机配置    server {        # 监听80端口        listen    80;        # 定义域名 www.test.com 多个使用空格隔开        server_name  www.test.com;        # 默认网站根目录位置        root html;        # 定义首页索引文件的名称        index index.php index.html index.htm;        # 设定本虚拟主机的访问日志        access_log /var/wwwlogs/nginx.access.log    main;        # 默认请求        location / {            # 定义首页索引文件的名称            index   index.php index.html index.htm;        }        # 定义错误提示页面        error_page  500 502 503 504 /50x.html;        location = /50x.html {        }        # 静态文件，nginx自己处理        location ~ ^/(images|javascript|js|css|flash|media|static)/ {            # 过期30天，静态文件不怎么更新，过期可以设大一点，如果频繁更新，则可以设置得小一点。            expires 30d;        }        # PHP 脚本请求全部转发到 FastCGI处理. 使用FastCGI默认配置.        location ~ .php$ {            fastcgi_pass    127.0.0.1:9000;            fastcgi_index   index.php;            fastcgi_param   SCRIPT_FILENAME  $document_root$fastcgi_script_name;            include         fastcgi_params;        }        # 禁止访问 .tpl 文件        location ~ /.tpl {            deny    all;        }    }}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Nginx配置文件详解&quot;&gt;&lt;a href=&quot;#Nginx配置文件详解&quot; class=&quot;headerlink&quot; title=&quot;Nginx配置文件详解&quot;&gt;&lt;/a&gt;Nginx配置文件详解&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;# 运行用户
user    www;

# 启动进
      
    
    </summary>
    
      <category term="Linux" scheme="https://kyle.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://kyle.github.io/tags/Linux/"/>
    
      <category term="Nginx" scheme="https://kyle.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Oracle11GR2 RAC DataGuard容灾实施与维护手册</title>
    <link href="https://kyle.github.io/2018/10/07/oracle/oracle11gr2-rac-dataguard-rong-zai-shi-shi-yu-wei-hu-shou-ce/"/>
    <id>https://kyle.github.io/2018/10/07/oracle/oracle11gr2-rac-dataguard-rong-zai-shi-shi-yu-wei-hu-shou-ce/</id>
    <published>2018-10-07T02:25:00.000Z</published>
    <updated>2019-05-03T15:40:04.341Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Oracle11gR2RAC-DataGuard容灾实施与维护"><a href="#Oracle11gR2RAC-DataGuard容灾实施与维护" class="headerlink" title="Oracle11gR2RAC DataGuard容灾实施与维护"></a>Oracle11gR2RAC DataGuard容灾实施与维护</h1><p><a href="https://docs.oracle.com/cd/E11882_01/index.htm" target="_blank" rel="noopener">Oracle 11G R2 官方文档</a> </p><h2 id="1-DataGuard的概述"><a href="#1-DataGuard的概述" class="headerlink" title="1.DataGuard的概述"></a>1.DataGuard的概述</h2><h2 id="2-应用规划"><a href="#2-应用规划" class="headerlink" title="2.应用规划"></a>2.应用规划</h2><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">参数</th><th style="text-align:center">主库</th><th>备库</th></tr></thead><tbody><tr><td style="text-align:center"></td><td style="text-align:center">系统架构</td><td style="text-align:center">RAC 双机+ASM</td><td>单实例+ASM</td><td></td></tr><tr><td style="text-align:center"></td><td style="text-align:center">数据库版本</td><td style="text-align:center">11.2.0.4</td><td>11.2.0.4</td><td></td></tr><tr><td style="text-align:center"></td><td style="text-align:center">内存</td><td style="text-align:center">16G</td><td>8G</td><td></td></tr><tr><td style="text-align:center"></td><td style="text-align:center">CPU</td><td style="text-align:center">4</td><td>4</td><td></td></tr><tr><td style="text-align:center"></td><td style="text-align:center">GoldenGate</td><td style="text-align:center">11.2.0.3</td><td>11.2.0.3</td><td></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td></td><td></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td></td><td></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td></td><td></td></tr></tbody></table><h2 id="3-案列一（文件系统到文件系统）"><a href="#3-案列一（文件系统到文件系统）" class="headerlink" title="3.案列一（文件系统到文件系统）"></a>3.案列一（文件系统到文件系统）</h2><h3 id="3-1-系统架构"><a href="#3-1-系统架构" class="headerlink" title="3.1 系统架构"></a>3.1 系统架构</h3><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">参数</th><th style="text-align:center">主库</th><th>备库</th></tr></thead><tbody><tr><td style="text-align:center"></td><td style="text-align:center">系统架构</td><td style="text-align:center">单实例文件系统</td><td>单实例文件系统</td><td></td></tr><tr><td style="text-align:center"></td><td style="text-align:center">数据库版本</td><td style="text-align:center">11.2.0.4</td><td>11.2.0.4</td><td></td></tr><tr><td style="text-align:center"></td><td style="text-align:center">内存</td><td style="text-align:center">16G</td><td>8G</td><td></td></tr><tr><td style="text-align:center"></td><td style="text-align:center">CPU</td><td style="text-align:center">4</td><td>4</td><td></td></tr><tr><td style="text-align:center"></td><td style="text-align:center">GoldenGate</td><td style="text-align:center">11.2.0.3</td><td>11.2.0.3</td><td></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td></td><td></td></tr></tbody></table><h3 id="3-2-安装步骤1（准备）"><a href="#3-2-安装步骤1（准备）" class="headerlink" title="3.2  安装步骤1（准备）"></a>3.2  安装步骤1（准备）</h3><ul><li>1.安装相关的软件包</li><li>2.准备OGG安装的环境变量</li><li>3.上传并安装OGG软件</li><li>4.准备测试数据</li></ul><h4 id="3-2-1-安装相关的软件包"><a href="#3-2-1-安装相关的软件包" class="headerlink" title="3.2.1 安装相关的软件包"></a>3.2.1 安装相关的软件包</h4><h4 id="3-2-1-准备OGG安装的环境变量"><a href="#3-2-1-准备OGG安装的环境变量" class="headerlink" title="3.2.1 准备OGG安装的环境变量"></a>3.2.1 准备OGG安装的环境变量</h4><h4 id="3-2-1-上传并安装OGG软件"><a href="#3-2-1-上传并安装OGG软件" class="headerlink" title="3.2.1 上传并安装OGG软件"></a>3.2.1 上传并安装OGG软件</h4><h4 id="3-2-1-准备测试数据"><a href="#3-2-1-准备测试数据" class="headerlink" title="3.2.1 准备测试数据"></a>3.2.1 准备测试数据</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">tablespace</span> itpux01 datafile <span class="token string">'/u01/app/oracle/oradata/orcl/itpux01.dbf'</span> size 100m autoextend <span class="token keyword">off</span><span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token keyword">user</span> itpux01 identified <span class="token keyword">by</span> itpux01 <span class="token keyword">default</span> <span class="token keyword">tablespace</span> itpux01 <span class="token keyword">temporary</span> <span class="token keyword">tablespace</span> <span class="token keyword">temp</span><span class="token punctuation">;</span><span class="token keyword">grant</span> <span class="token number">dba</span> <span class="token keyword">to</span> itpux01<span class="token punctuation">;</span>   <span class="token keyword">create</span> <span class="token keyword">tablespace</span> itpux02 datafile <span class="token string">'/u01/app/oracle/oradata/orcl/itpux02.dbf'</span> size 100m autoextend <span class="token keyword">off</span><span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token keyword">user</span> itpux02 identified <span class="token keyword">by</span> itpux02 <span class="token keyword">default</span> <span class="token keyword">tablespace</span> itpux02 <span class="token keyword">temporary</span> <span class="token keyword">tablespace</span> <span class="token keyword">temp</span><span class="token punctuation">;</span><span class="token keyword">grant</span> <span class="token number">dba</span> <span class="token keyword">to</span> itpux02<span class="token punctuation">;</span>   <span class="token keyword">create</span> <span class="token keyword">tablespace</span> itpux03 datafile <span class="token string">'/u01/app/oracle/oradata/orcl/itpux03.dbf'</span> size 100m autoextend <span class="token keyword">off</span><span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token keyword">user</span> itpux03 identified <span class="token keyword">by</span> itpux03 <span class="token keyword">default</span> <span class="token keyword">tablespace</span> itpux03 <span class="token keyword">temporary</span> <span class="token keyword">tablespace</span> <span class="token keyword">temp</span><span class="token punctuation">;</span><span class="token keyword">grant</span> <span class="token number">dba</span> <span class="token keyword">to</span> itpux03<span class="token punctuation">;</span>  【源库导出、导入数据结构】<span class="token keyword">create</span> directory itpuxbak <span class="token keyword">as</span> <span class="token string">'/home/oracle'</span><span class="token punctuation">;</span><span class="token keyword">grant</span> <span class="token keyword">read</span><span class="token punctuation">,</span><span class="token keyword">write</span> <span class="token keyword">on</span> directory itpuxbak <span class="token keyword">to</span> system<span class="token punctuation">;</span> <span class="token keyword">grant</span> <span class="token keyword">create</span> <span class="token keyword">any</span> directory <span class="token keyword">to</span> system<span class="token punctuation">;</span>expdp system<span class="token operator">/</span>jia directory<span class="token operator">=</span>itpuxbak <span class="token keyword">dumpfile</span><span class="token operator">=</span>expdp_full_db01<span class="token punctuation">.</span>dmp logfile<span class="token operator">=</span>expdp_full_db01<span class="token punctuation">.</span>log content<span class="token operator">=</span>metadata_only<span class="token comment" spellcheck="true">--expdp system/jia  directory=itpuxbak dumpfile=expdp_itpux010203.dmp logfile=expdp_itpux010203.log schemas=itpux01,itpux02,itpux03</span>impdp system<span class="token operator">/</span>oracle  directory<span class="token operator">=</span>itpuxbak <span class="token keyword">dumpfile</span><span class="token operator">=</span>expdp_itpux010203<span class="token punctuation">.</span>dmp logfile<span class="token operator">=</span>expdp_itpux010203<span class="token punctuation">.</span>log <span class="token keyword">full</span><span class="token operator">=</span>y<span class="token comment" spellcheck="true">--impdp system/oracle  directory=itpuxbak dumpfile=expdp_itpux010203.dmp expdp_itpux010203.dmp schemas=itpux01,itpux02,itpux03</span></code></pre><h3 id="3-3-安装步骤2（配置环境）"><a href="#3-3-安装步骤2（配置环境）" class="headerlink" title="3.3 安装步骤2（配置环境）"></a>3.3 安装步骤2（配置环境）</h3><ul><li>1.源端打开归档，目标端一般不需要</li><li>2.源端数据库打开补充日志</li><li>3.源端是数据库开启FORCE_LOGGING</li><li>4.关闭回收站功能</li><li>5.源和目标的网络通信正常</li><li>6.创建专用的GoldenGate用户来同步数据</li><li>7.修改数据库参数（源和目标端）</li></ul><h4 id="3-3-1-源端打开归档，目标端一般不需要"><a href="#3-3-1-源端打开归档，目标端一般不需要" class="headerlink" title="3.3.1 源端打开归档，目标端一般不需要"></a>3.3.1 源端打开归档，目标端一般不需要</h4><blockquote><p>&emsp;&emsp; 因为有OGG所以只要源端开启归档，目标端不用开启归档,下面将介绍文件系统单实例怎么开启关闭归档.</p></blockquote><ul><li>开启归档 </li></ul><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 1.确定当前没有开启归档</span>SQL<span class="token operator">></span> archive log list<span class="token punctuation">;</span><span class="token keyword">Database</span> log mode              <span class="token keyword">No</span> Archive ModeAutomatic archival             DisabledArchive destination            USE_DB_RECOVERY_FILE_DESTOldest online log sequence     <span class="token number">19</span><span class="token keyword">Current</span> log sequence           <span class="token number">21</span><span class="token comment" spellcheck="true">--2.创建归档目录</span><span class="token comment" spellcheck="true">--3.重启数据库到MOUNT</span><span class="token keyword">SHUTDOWN</span> IMMEDIATESTARTUP MOUNT<span class="token comment" spellcheck="true">--4.修改归档路径并开启归档</span><span class="token keyword">ALTER</span> SYSTEM <span class="token keyword">SET</span>  db_recovery_file_dest<span class="token operator">=</span><span class="token string">'/u01/backup'</span> scope<span class="token operator">=</span>spfile<span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">DATABASE</span> ARCHIVELOG<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--5.重启数据库</span><span class="token keyword">SHUTDOWN</span> IMMEDIATESTARTUP</code></pre><ul><li>关闭归档</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--1.确定当前为归档</span>SQL<span class="token operator">></span> archive log list<span class="token punctuation">;</span><span class="token keyword">Database</span> log mode              Archive ModeAutomatic archival             EnabledArchive destination            USE_DB_RECOVERY_FILE_DESTOldest online log sequence     <span class="token number">19</span><span class="token keyword">Next</span> log sequence <span class="token keyword">to</span> archive   <span class="token number">21</span><span class="token keyword">Current</span> log sequence           <span class="token number">21</span><span class="token comment" spellcheck="true">--2.重启数据库到MOUNT</span>SQL<span class="token operator">></span> <span class="token keyword">shutdown</span> immediate<span class="token punctuation">;</span><span class="token keyword">Database</span> closed<span class="token punctuation">.</span><span class="token keyword">Database</span> dismounted<span class="token punctuation">.</span>ORACLE instance shut down<span class="token punctuation">.</span>SQL<span class="token operator">></span> startup mount<span class="token punctuation">;</span>ORACLE instance started<span class="token punctuation">.</span>Total System <span class="token keyword">Global</span> Area <span class="token number">2137886720</span> bytes<span class="token keyword">Fixed</span> Size                  <span class="token number">2254952</span> bytesVariable Size             <span class="token number">570427288</span> bytes<span class="token keyword">Database</span> Buffers         <span class="token number">1560281088</span> bytesRedo Buffers                <span class="token number">4923392</span> bytes<span class="token keyword">Database</span> mounted<span class="token punctuation">.</span><span class="token comment" spellcheck="true">--3.关闭归档并打开数据库</span>SQL<span class="token operator">></span>  <span class="token keyword">alter</span> <span class="token keyword">database</span> noarchivelog<span class="token punctuation">;</span><span class="token keyword">Database</span> altered<span class="token punctuation">.</span>SQL<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">database</span> <span class="token keyword">open</span><span class="token punctuation">;</span><span class="token keyword">Database</span> altered<span class="token punctuation">.</span>SQL<span class="token operator">></span> archive log list<span class="token punctuation">;</span><span class="token keyword">Database</span> log mode              <span class="token keyword">No</span> Archive ModeAutomatic archival             DisabledArchive destination            USE_DB_RECOVERY_FILE_DESTOldest online log sequence     <span class="token number">19</span><span class="token keyword">Current</span> log sequence           <span class="token number">21</span></code></pre><h4 id="3-3-2-源端数据库打开补充日志"><a href="#3-3-2-源端数据库打开补充日志" class="headerlink" title="3.3.2 源端数据库打开补充日志"></a>3.3.2 源端数据库打开补充日志</h4><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--1.查看是否打开最小日志记录</span><span class="token keyword">SELECT</span> SUPPLEMENTAL_LOG_DATA_MIN <span class="token keyword">FROM</span> v$<span class="token keyword">database</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--2.开启最小日志记录</span><span class="token keyword">ALTER</span> <span class="token keyword">DATABASE</span> <span class="token keyword">ADD</span> SUPPLEMENTAL LOG <span class="token keyword">DATA</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--3.切换归档</span><span class="token keyword">ALTER</span> SYSTEM SWITCH LOGFILE<span class="token punctuation">;</span></code></pre><h4 id="3-3-3-源端是数据库开启FORCE-LOGGING"><a href="#3-3-3-源端是数据库开启FORCE-LOGGING" class="headerlink" title="3.3.3 源端是数据库开启FORCE_LOGGING"></a>3.3.3 源端是数据库开启FORCE_LOGGING</h4><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--1.查询是否开启强制日志模式</span>force_logging <span class="token keyword">from</span> v$<span class="token keyword">database</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--2.打开</span><span class="token keyword">alter</span> <span class="token keyword">database</span> <span class="token keyword">force</span> logging<span class="token punctuation">;</span><span class="token keyword">alter</span> system switch logfile<span class="token punctuation">;</span></code></pre><h4 id="3-3-4-关闭回收站功能"><a href="#3-3-4-关闭回收站功能" class="headerlink" title="3.3.4 关闭回收站功能"></a>3.3.4 关闭回收站功能</h4><blockquote><p>&emsp;&emsp;官方没有要求关闭回收站，但是我们一般都会关闭。关闭回收站必须重启生效。<br><code>`</code>sql<br>–1.查看回收是否关闭<br>show parameter recyclebin</p></blockquote><p>–2.关闭回收站<br>alter system set recyclebin=off scope=spfile;</p><p>–3.重启数据库</p><pre><code>#### 3.3.5 源和目标的网络通信正常```sql</code></pre><h4 id="3-3-6-创建专用的GoldenGate用户来同步数据"><a href="#3-3-6-创建专用的GoldenGate用户来同步数据" class="headerlink" title="3.3.6 创建专用的GoldenGate用户来同步数据"></a>3.3.6 创建专用的GoldenGate用户来同步数据</h4><h4 id="3-3-7-修改数据库参数（源和目标端）"><a href="#3-3-7-修改数据库参数（源和目标端）" class="headerlink" title="3.3.7 修改数据库参数（源和目标端）"></a>3.3.7 修改数据库参数（源和目标端）</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">alter</span> system <span class="token keyword">set</span> enable_goldengate_replication<span class="token operator">=</span><span class="token boolean">true</span> scope<span class="token operator">=</span>both<span class="token punctuation">;</span><span class="token keyword">show</span> paramteter enable_goldengate_replication<span class="token punctuation">;</span></code></pre><h3 id="3-4-安装步骤（配置OGG）"><a href="#3-4-安装步骤（配置OGG）" class="headerlink" title="3.4 安装步骤（配置OGG）"></a>3.4 安装步骤（配置OGG）</h3><pre class=" language-sql"><code class="language-sql"><span class="token number">1</span><span class="token punctuation">.</span>创建文件目录<span class="token keyword">create</span> subdirs<span class="token number">01</span><span class="token punctuation">.</span>配置配置管理进程mgrggsci<span class="token operator">></span> edit params mgrport <span class="token number">7809</span>autostart er <span class="token operator">*</span>autorestart er <span class="token operator">*</span><span class="token punctuation">,</span>waitminutes <span class="token number">3</span><span class="token punctuation">,</span>retries <span class="token number">15</span>purgeoldextracts <span class="token punctuation">.</span><span class="token operator">/</span>dirdat<span class="token comment" spellcheck="true">/*,usecheckpoints,minkeepdays 7*/</span><span class="token number">02</span><span class="token keyword">alter</span> system <span class="token keyword">set</span> enable_goldengate_replication<span class="token operator">=</span><span class="token boolean">true</span> scope<span class="token operator">=</span>both<span class="token punctuation">;</span></code></pre><h2 id="4-案列二（ASM到文件系统）"><a href="#4-案列二（ASM到文件系统）" class="headerlink" title="4.案列二（ASM到文件系统）"></a>4.案列二（ASM到文件系统）</h2><h2 id="5-案列三（RAC-ASM-到-单机ASN）"><a href="#5-案列三（RAC-ASM-到-单机ASN）" class="headerlink" title="5.案列三（RAC ASM 到 单机ASN）"></a>5.案列三（RAC ASM 到 单机ASN）</h2><h3 id="3-1-系统架构-1"><a href="#3-1-系统架构-1" class="headerlink" title="3.1 系统架构"></a>3.1 系统架构</h3><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">参数</th><th style="text-align:center">主库</th><th>备库</th></tr></thead><tbody><tr><td style="text-align:center"></td><td style="text-align:center">系统架构</td><td style="text-align:center">RAC</td><td>单实例ASM</td><td></td></tr><tr><td style="text-align:center"></td><td style="text-align:center">数据库版本</td><td style="text-align:center">11.2.0.4</td><td>11.2.0.4</td><td></td></tr><tr><td style="text-align:center"></td><td style="text-align:center">内存</td><td style="text-align:center">4G</td><td>4G</td><td></td></tr><tr><td style="text-align:center"></td><td style="text-align:center">CPU</td><td style="text-align:center">4</td><td>4</td><td></td></tr><tr><td style="text-align:center"></td><td style="text-align:center">GoldenGate</td><td style="text-align:center">12.1.0.3</td><td>12.1.0.3</td><td></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td></td><td></td></tr></tbody></table><h3 id="3-2-安装步骤（准备）"><a href="#3-2-安装步骤（准备）" class="headerlink" title="3.2  安装步骤（准备）"></a>3.2  安装步骤（准备）</h3><ul><li>1.安装相关的软件包</li><li>2.准备OGG安装的环境变量</li><li>3.上传并安装OGG软件</li><li>4.准备测试数据</li></ul><h4 id="3-2-1-安装相关的软件包-1"><a href="#3-2-1-安装相关的软件包-1" class="headerlink" title="3.2.1 安装相关的软件包"></a>3.2.1 安装相关的软件包</h4><h4 id="3-2-1-准备OGG安装的环境变量-1"><a href="#3-2-1-准备OGG安装的环境变量-1" class="headerlink" title="3.2.1 准备OGG安装的环境变量"></a>3.2.1 准备OGG安装的环境变量</h4><h4 id="3-2-1-上传并安装OGG软件-1"><a href="#3-2-1-上传并安装OGG软件-1" class="headerlink" title="3.2.1 上传并安装OGG软件"></a>3.2.1 上传并安装OGG软件</h4><h4 id="3-2-1-准备测试数据-1"><a href="#3-2-1-准备测试数据-1" class="headerlink" title="3.2.1 准备测试数据"></a>3.2.1 准备测试数据</h4><h3 id="3-3-安装步骤（配置环境）"><a href="#3-3-安装步骤（配置环境）" class="headerlink" title="3.3 安装步骤（配置环境）"></a>3.3 安装步骤（配置环境）</h3><ul><li>1.源端打开归档，目标端一般不需要</li><li>2.源端数据库打开补充日志</li><li>3.源端是数据库开启FORCE_LOGGING</li><li>4.关闭回收站功能</li><li>5.源和目标的网络通信正常</li><li>6.创建专用的GoldenGate用户来同步数据</li></ul><h4 id="3-3-1-源端打开归档，目标端一般不需要-1"><a href="#3-3-1-源端打开归档，目标端一般不需要-1" class="headerlink" title="3.3.1 源端打开归档，目标端一般不需要"></a>3.3.1 源端打开归档，目标端一般不需要</h4><blockquote><p>&emsp;&emsp; 因为有OGG所以只要源端开启归档，目标端不用开启归档,下面将介绍文件系统单实例怎么开启关闭归档.</p></blockquote><h4 id="3-3-2-源端数据库打开补充日志-1"><a href="#3-3-2-源端数据库打开补充日志-1" class="headerlink" title="3.3.2 源端数据库打开补充日志"></a>3.3.2 源端数据库打开补充日志</h4><h4 id="3-3-3-源端是数据库开启FORCE-LOGGING-1"><a href="#3-3-3-源端是数据库开启FORCE-LOGGING-1" class="headerlink" title="3.3.3 源端是数据库开启FORCE_LOGGING"></a>3.3.3 源端是数据库开启FORCE_LOGGING</h4><h4 id="3-3-4-关闭回收站功能-1"><a href="#3-3-4-关闭回收站功能-1" class="headerlink" title="3.3.4 关闭回收站功能"></a>3.3.4 关闭回收站功能</h4><h4 id="3-3-5-源和目标的网络通信正常"><a href="#3-3-5-源和目标的网络通信正常" class="headerlink" title="3.3.5 源和目标的网络通信正常"></a>3.3.5 源和目标的网络通信正常</h4><h4 id="3-3-6-创建专用的GoldenGate用户来同步数据-1"><a href="#3-3-6-创建专用的GoldenGate用户来同步数据-1" class="headerlink" title="3.3.6 创建专用的GoldenGate用户来同步数据"></a>3.3.6 创建专用的GoldenGate用户来同步数据</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Oracle11gR2RAC-DataGuard容灾实施与维护&quot;&gt;&lt;a href=&quot;#Oracle11gR2RAC-DataGuard容灾实施与维护&quot; class=&quot;headerlink&quot; title=&quot;Oracle11gR2RAC DataGuard容灾实施与维
      
    
    </summary>
    
      <category term="Oracle" scheme="https://kyle.github.io/categories/Oracle/"/>
    
    
      <category term="Oracle" scheme="https://kyle.github.io/tags/Oracle/"/>
    
      <category term="备份容灾" scheme="https://kyle.github.io/tags/%E5%A4%87%E4%BB%BD%E5%AE%B9%E7%81%BE/"/>
    
      <category term="RAC" scheme="https://kyle.github.io/tags/RAC/"/>
    
      <category term="DataGuard" scheme="https://kyle.github.io/tags/DataGuard/"/>
    
  </entry>
  
  <entry>
    <title>Oracle LogMiner日志挖掘技术部分日志</title>
    <link href="https://kyle.github.io/2018/10/04/oracle/oracle-logminer-ri-zhi-wa-jue-ji-zhu-bu-fen-ri-zhi/"/>
    <id>https://kyle.github.io/2018/10/04/oracle/oracle-logminer-ri-zhi-wa-jue-ji-zhu-bu-fen-ri-zhi/</id>
    <published>2018-10-04T02:25:00.000Z</published>
    <updated>2019-05-03T15:59:40.248Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Oracle-LogMiner日志挖掘技术部分日志"><a href="#Oracle-LogMiner日志挖掘技术部分日志" class="headerlink" title="Oracle LogMiner日志挖掘技术部分日志"></a>Oracle LogMiner日志挖掘技术部分日志</h1><p>[Oracle 11G R2 官方文档][1] </p><h2 id="1-Logminer相关概念"><a href="#1-Logminer相关概念" class="headerlink" title="1.Logminer相关概念"></a>1.Logminer相关概念</h2><h2 id="2-Logminer使用详解"><a href="#2-Logminer使用详解" class="headerlink" title="2.Logminer使用详解"></a>2.Logminer使用详解</h2><h3 id="2-1-安装logminer"><a href="#2-1-安装logminer" class="headerlink" title="2.1 安装logminer"></a>2.1 安装logminer</h3><pre class=" language-sql"><code class="language-sql">$ORACLE_HOME<span class="token operator">/</span>rdbms<span class="token operator">/</span>admin<span class="token operator">/</span>dbmslm<span class="token punctuation">.</span>sql : DBMS_LOGMNR$ORACLE_HOME<span class="token operator">/</span>rdbms<span class="token operator">/</span>admin<span class="token operator">/</span>dbmslmd<span class="token punctuation">.</span>sql :DBMS_LOGMNR_D$ORACLE_HOME<span class="token operator">/</span>rdbms<span class="token operator">/</span>admin<span class="token operator">/</span>dbmslms<span class="token punctuation">.</span>sql<span class="token comment" spellcheck="true">--过程</span>dbms_logmnr_d<span class="token punctuation">.</span>build<span class="token punctuation">(</span><span class="token string">'dict.ora'</span><span class="token punctuation">,</span><span class="token string">'/u01'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">--创建一个数据字典文件</span>dbms_logmnr<span class="token punctuation">.</span>add_logfiledbms_logmnr<span class="token punctuation">.</span>start_logmnrdbms_logmnr<span class="token punctuation">.</span>end_logmnr<span class="token comment" spellcheck="true">--视图</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> v$logmnr_dictionary<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> v$logmnr_logs<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> v$logmnr_contents<span class="token punctuation">;</span></code></pre><h3 id="2-2-使用源数据库的数据字典（Online-catalog-来分析DML操作"><a href="#2-2-使用源数据库的数据字典（Online-catalog-来分析DML操作" class="headerlink" title="2.2  使用源数据库的数据字典（Online catalog)来分析DML操作"></a>2.2  使用源数据库的数据字典（Online catalog)来分析DML操作</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--01.开启补充日志</span><span class="token keyword">select</span> SUPPLEMENTAL_LOG_DATA_MIN <span class="token keyword">from</span> v$<span class="token keyword">database</span><span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">database</span> <span class="token keyword">add</span> supplemental log <span class="token keyword">data</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--02.建立日志分析列表</span><span class="token keyword">execute</span> dbms_logmnr<span class="token punctuation">.</span>add_logfile<span class="token punctuation">(</span>logfilename<span class="token operator">=</span><span class="token operator">></span><span class="token string">'日志文件'</span>，options<span class="token operator">=</span><span class="token operator">></span>dbms_logmnr<span class="token punctuation">.</span>new<span class="token punctuation">)</span><span class="token comment" spellcheck="true">--继续添加</span><span class="token keyword">execute</span> dbms_logmnr<span class="token punctuation">.</span>add_logfile<span class="token punctuation">(</span>logfilename<span class="token operator">=</span><span class="token operator">></span><span class="token string">'日志文件'</span>，options<span class="token operator">=</span><span class="token operator">></span>dbms_logmnr<span class="token punctuation">.</span>addfile<span class="token punctuation">)</span><span class="token keyword">execute</span> dbms_logmnr<span class="token punctuation">.</span>add_logfile<span class="token punctuation">(</span>logfilename<span class="token operator">=</span><span class="token operator">></span><span class="token string">'日志文件'</span>，options<span class="token operator">=</span><span class="token operator">></span>dbms_logmnr<span class="token punctuation">.</span>addfile<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//execute dbms_logmnr.add_logfile('日志文件'，dbms_logmnr.addfile)</span><span class="token comment" spellcheck="true">--移除</span><span class="token keyword">execute</span> dbms_logmnr<span class="token punctuation">.</span>remove_logfile<span class="token punctuation">(</span>logfilename<span class="token operator">=</span><span class="token operator">></span><span class="token string">'日志文件'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">--03.启动分析</span><span class="token keyword">execute</span> dbms_logmnr<span class="token punctuation">.</span>start_logmnr<span class="token punctuation">(</span>Options <span class="token operator">=</span><span class="token operator">></span> dbms_logmnr<span class="token punctuation">.</span>dict_from_online_catalog<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//execute dbms_logmnr.start_logmnr(Options => dbms_logmnr.dict_from_online_catalog,startscn=>123,endScn => 124);</span><span class="token comment" spellcheck="true">//exec dbms_logmnr.start_logmnr(Options => dbms_logmnr.dict_from_online_catalog,</span>starttime <span class="token operator">=</span><span class="token operator">></span> to_date<span class="token punctuation">(</span><span class="token string">'2016-08-15 00:00:00'</span><span class="token punctuation">,</span><span class="token string">'YYYY-MM-DD HH24:MI:SS'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>endtime <span class="token operator">=</span><span class="token operator">></span> to_date<span class="token punctuation">(</span><span class="token string">'2016-08-15 01:00:00'</span><span class="token punctuation">,</span><span class="token string">'YYYY-MM-DD HH24:MI:SS'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--04.查看日志分析结果</span><span class="token keyword">select</span> username<span class="token punctuation">,</span>scn<span class="token punctuation">,</span><span class="token keyword">timestamp</span><span class="token punctuation">,</span>sql_redo<span class="token punctuation">,</span>sql_undo <span class="token keyword">from</span> v$logmnr_contents<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--05.结束分析</span>dbms_logmnr<span class="token punctuation">.</span>end_logmnr<span class="token punctuation">;</span></code></pre><h3 id="2-3-使用LogMiner字典到字典文件来分析DDL操作"><a href="#2-3-使用LogMiner字典到字典文件来分析DDL操作" class="headerlink" title="2.3 使用LogMiner字典到字典文件来分析DDL操作"></a>2.3 使用LogMiner字典到字典文件来分析DDL操作</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--01.提取logminer字典</span><span class="token comment" spellcheck="true">--设置一个字典文件路径：</span><span class="token keyword">show</span> parameter utl_file_dir <span class="token comment" spellcheck="true">--需要重启DB</span><span class="token keyword">alter</span> system <span class="token keyword">set</span> utl_file_dir<span class="token operator">=</span><span class="token string">'/oracle'</span> scope<span class="token operator">=</span>spfile<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--创建一个数据字典文件</span><span class="token keyword">exec</span> dbms_logmnr_d<span class="token punctuation">.</span>build<span class="token punctuation">(</span><span class="token string">'dict.ora'</span><span class="token punctuation">,</span><span class="token string">'/oracle'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--02.建立日志分析列表</span><span class="token keyword">execute</span> dbms_logmnr<span class="token punctuation">.</span>add_logfile<span class="token punctuation">(</span>logfilename<span class="token operator">=</span><span class="token operator">></span><span class="token string">'日志文件'</span>，options<span class="token operator">=</span><span class="token operator">></span>dbms_logmnr<span class="token punctuation">.</span>new<span class="token punctuation">)</span><span class="token comment" spellcheck="true">--继续添加</span><span class="token keyword">execute</span> dbms_logmnr<span class="token punctuation">.</span>add_logfile<span class="token punctuation">(</span>logfilename<span class="token operator">=</span><span class="token operator">></span><span class="token string">'日志文件'</span>，options<span class="token operator">=</span><span class="token operator">></span>dbms_logmnr<span class="token punctuation">.</span>addfile<span class="token punctuation">)</span><span class="token keyword">execute</span> dbms_logmnr<span class="token punctuation">.</span>add_logfile<span class="token punctuation">(</span>logfilename<span class="token operator">=</span><span class="token operator">></span><span class="token string">'日志文件'</span>，options<span class="token operator">=</span><span class="token operator">></span>dbms_logmnr<span class="token punctuation">.</span>addfile<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//execute dbms_logmnr.add_logfile('日志文件'，dbms_logmnr.addfile)</span><span class="token comment" spellcheck="true">--移除</span><span class="token keyword">execute</span> dbms_logmnr<span class="token punctuation">.</span>remove_logfile<span class="token punctuation">(</span>logfilename<span class="token operator">=</span><span class="token operator">></span><span class="token string">'日志文件'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">--03.启动分析</span><span class="token keyword">exec</span> dbms_logmnr<span class="token punctuation">.</span>start_logmnr<span class="token punctuation">(</span>DictFileName <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'/oracle/dict.ora'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">---无条件分析</span><span class="token comment" spellcheck="true">//exec dbms_logmnr.start_logmnr(DictFileName => '/oracle/dict.ora',startscn=>123,endScn => 124); --有条件分析</span><span class="token comment" spellcheck="true">//exec dbms_logmnr.start_logmnr(DictFileName => '/oracle/dict.ora',</span>starttime <span class="token operator">=</span><span class="token operator">></span> to_date<span class="token punctuation">(</span><span class="token string">'2016-08-15 00:00:00'</span><span class="token punctuation">,</span><span class="token string">'YYYY-MM-DD HH24:MI:SS'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>endtime <span class="token operator">=</span><span class="token operator">></span> to_date<span class="token punctuation">(</span><span class="token string">'2016-08-15 01:00:00'</span><span class="token punctuation">,</span><span class="token string">'YYYY-MM-DD HH24:MI:SS'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--有条件分析：</span>scn: startscn<span class="token punctuation">,</span>endScntime: starttime<span class="token punctuation">,</span>endtime<span class="token comment" spellcheck="true">--04.查看日志分析结果</span><span class="token keyword">select</span> username<span class="token punctuation">,</span>scn<span class="token punctuation">,</span><span class="token keyword">timestamp</span><span class="token punctuation">,</span>sql_redo<span class="token punctuation">,</span>sql_undo <span class="token keyword">from</span> v$logmnr_contents<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--05.结束分析</span>dbms_logmnr<span class="token punctuation">.</span>end_logmnr<span class="token punctuation">;</span></code></pre><h3 id="2-4使用LogMiner进行日志分析"><a href="#2-4使用LogMiner进行日志分析" class="headerlink" title="2.4使用LogMiner进行日志分析"></a>2.4使用LogMiner进行日志分析</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">exec</span> dbms_logmnr<span class="token punctuation">.</span>start_logmnr<span class="token punctuation">(</span>DictFileName <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'/oracle/dict.ora'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">---无条件分析</span><span class="token comment" spellcheck="true">//exec dbms_logmnr.start_logmnr(DictFileName => '/oracle/dict.ora',startscn=>123,endScn => 124); --有条件分析</span><span class="token comment" spellcheck="true">//exec dbms_logmnr.start_logmnr(DictFileName => '/oracle/dict.ora',</span>starttime <span class="token operator">=</span><span class="token operator">></span> to_date<span class="token punctuation">(</span><span class="token string">'2016-08-15 00:00:00'</span><span class="token punctuation">,</span><span class="token string">'YYYY-MM-DD HH24:MI:SS'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>endtime <span class="token operator">=</span><span class="token operator">></span> to_date<span class="token punctuation">(</span><span class="token string">'2016-08-15 01:00:00'</span><span class="token punctuation">,</span><span class="token string">'YYYY-MM-DD HH24:MI:SS'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--有条件分析：</span>scn: startscn<span class="token punctuation">,</span>endScntime: starttime<span class="token punctuation">,</span>endtime</code></pre><h3 id="2-5-查看logminer分析结果"><a href="#2-5-查看logminer分析结果" class="headerlink" title="2.5 查看logminer分析结果"></a>2.5 查看logminer分析结果</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> username<span class="token punctuation">,</span>scn<span class="token punctuation">,</span><span class="token keyword">timestamp</span><span class="token punctuation">,</span>sql_redo<span class="token punctuation">,</span>sql_undo <span class="token keyword">from</span> v$logmnr_contents<span class="token punctuation">;</span>SQL<span class="token operator">></span> <span class="token keyword">desc</span> v$logmnr_contents<span class="token punctuation">;</span>名称 类型<span class="token comment" spellcheck="true">----------------------------------------- ----------------------------</span><span class="token keyword">TIMESTAMP</span> <span class="token keyword">DATE</span> <span class="token comment" spellcheck="true">//SQL执行时间</span>COMMIT_TIMESTAMP <span class="token keyword">DATE</span> <span class="token comment" spellcheck="true">//事务提交时间</span>SEG_OWNER VARCHAR2<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//被修改对象创建者</span>SEG_NAME VARCHAR2<span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//被修改对象的名字，如表名</span>SEG_TYPE NUMBER <span class="token comment" spellcheck="true">//被修改对象类型</span>SEG_TYPE_NAME VARCHAR2<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//被修改对象类型名</span>TABLE_SPACE VARCHAR2<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//被修改对象所属表空间</span>ROW_ID VARCHAR2<span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//被修改行的ROWID，如果</span><span class="token keyword">SESSION</span><span class="token comment" spellcheck="true"># NUMBER //执行修改的SESSION号</span><span class="token keyword">SERIAL</span><span class="token comment" spellcheck="true"># NUMBER //执行修改的SESSION序号</span>USERNAME VARCHAR2<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//执行事务的用户名</span>SESSION_INFO VARCHAR2<span class="token punctuation">(</span><span class="token number">4000</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//执行修改的SESSION信息,例如：login_username= client_info= OS_username=SYSTEM Machine_name=ZFMISERVER OS_termi</span>nal<span class="token operator">=</span>ZFMISERVER OS_process_id<span class="token operator">=</span><span class="token number">1812</span> OS_program name<span class="token operator">=</span>ORACLE<span class="token punctuation">.</span>EXETX_NAME VARCHAR2<span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//执行的事务名，当该事务被命名时</span><span class="token keyword">ROLLBACK</span> NUMBER <span class="token comment" spellcheck="true">//回滚标记</span>OPERATION VARCHAR2<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//操作类型</span><span class="token keyword">INSERT</span><span class="token keyword">UPDATE</span><span class="token keyword">DELETE</span>DDL<span class="token keyword">START</span><span class="token keyword">COMMIT</span><span class="token keyword">ROLLBACK</span>LOB_WRITELOB_TRIMLOB_ERASESELECT_FOR_UPDATESEL_LOB_LOCATORMISSING_SCNINTERNALUNSUPPORTEDOPERATION_CODE NUMBER <span class="token comment" spellcheck="true">//操作类型代码</span>    <span class="token number">0</span> <span class="token operator">=</span> INTERNAL    <span class="token number">1</span> <span class="token operator">=</span> <span class="token keyword">INSERT</span>    <span class="token number">2</span> <span class="token operator">=</span> <span class="token keyword">DELETE</span>    <span class="token number">3</span> <span class="token operator">=</span> <span class="token keyword">UPDATE</span>    <span class="token number">5</span> <span class="token operator">=</span> DDL    <span class="token number">6</span> <span class="token operator">=</span> <span class="token keyword">START</span>    <span class="token number">7</span> <span class="token operator">=</span> <span class="token keyword">COMMIT</span>    <span class="token number">9</span> <span class="token operator">=</span> SELECT_LOB_LOCATOR    <span class="token number">10</span> <span class="token operator">=</span> LOB_WRITE    <span class="token number">11</span> <span class="token operator">=</span> LOB_TRIM    <span class="token number">25</span> <span class="token operator">=</span> SELECT_FOR_UPDATE    <span class="token number">28</span> <span class="token operator">=</span> LOB_ERASE    <span class="token number">34</span> <span class="token operator">=</span> MISSING_SCN    <span class="token number">36</span> <span class="token operator">=</span> <span class="token keyword">ROLLBACK</span>    <span class="token number">255</span> <span class="token operator">=</span> UNSUPPORTEDSQL_REDO VARCHAR2<span class="token punctuation">(</span><span class="token number">4000</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//重做日志SQL</span>SQL_UNDO VARCHAR2<span class="token punctuation">(</span><span class="token number">4000</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//相反操作SQL</span>SEQUENCE<span class="token comment" spellcheck="true"># NUMBER //重做日志的序号</span></code></pre><h2 id="3-logminer日志挖掘案例1-分析生产系统表数据丢失的原因"><a href="#3-logminer日志挖掘案例1-分析生产系统表数据丢失的原因" class="headerlink" title="3.logminer日志挖掘案例1-分析生产系统表数据丢失的原因"></a>3.logminer日志挖掘案例1-分析生产系统表数据丢失的原因</h2><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--3.1 安装logminer</span><span class="token variable">@$ORACLE_HOME</span><span class="token operator">/</span>rdbms<span class="token operator">/</span>admin<span class="token operator">/</span>dbmslm<span class="token punctuation">.</span>sql<span class="token variable">@$ORACLE_HOME</span><span class="token operator">/</span>rdbms<span class="token operator">/</span>admin<span class="token operator">/</span>dbmslmd<span class="token punctuation">.</span>sql<span class="token variable">@$ORACLE_HOME</span><span class="token operator">/</span>rdbms<span class="token operator">/</span>admin<span class="token operator">/</span>dbmslms<span class="token punctuation">.</span>sql<span class="token comment" spellcheck="true">--3.2、使用LogMiner字典到字典文件来分析DDL操作</span><span class="token comment" spellcheck="true">--01.提取logminer字典</span><span class="token comment" spellcheck="true">--设置一个字典文件路径：</span><span class="token keyword">show</span> parameter utl_file_dir <span class="token comment" spellcheck="true">--需要重启DB</span><span class="token keyword">alter</span> system <span class="token keyword">set</span> utl_file_dir<span class="token operator">=</span><span class="token string">'/u01'</span> scope<span class="token operator">=</span>spfile<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--创建一个数据字典文件</span><span class="token keyword">exec</span> dbms_logmnr_d<span class="token punctuation">.</span>build<span class="token punctuation">(</span><span class="token string">'dict.ora'</span><span class="token punctuation">,</span><span class="token string">'/u01'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--02.建立日志分析列表</span><span class="token keyword">execute</span> dbms_logmnr<span class="token punctuation">.</span>add_logfile<span class="token punctuation">(</span>logfilename<span class="token operator">=</span><span class="token operator">></span><span class="token string">'/u01/fast_recovery_area/ORCL/archivelog/2018_01_30/o1_mf_1_42_f7043xy4_.arc'</span><span class="token punctuation">,</span>options<span class="token operator">=</span><span class="token operator">></span>dbms_logmnr<span class="token punctuation">.</span>new<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">execute</span> dbms_logmnr<span class="token punctuation">.</span>add_logfile<span class="token punctuation">(</span>logfilename<span class="token operator">=</span><span class="token operator">></span><span class="token string">'/u01/fast_recovery_area/ORCL/archivelog/2018_01_30/o1_mf_1_41_f7043xtq_.arc'</span><span class="token punctuation">,</span>options<span class="token operator">=</span><span class="token operator">></span>dbms_logmnr<span class="token punctuation">.</span>addfile<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--03.启动分析</span><span class="token keyword">exec</span> dbms_logmnr<span class="token punctuation">.</span>start_logmnr<span class="token punctuation">(</span>DictFileName <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'/u01/dict.ora'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--04.查看日志分析结果</span><span class="token keyword">select</span> username<span class="token punctuation">,</span>scn<span class="token punctuation">,</span><span class="token keyword">timestamp</span><span class="token punctuation">,</span>sql_redo<span class="token punctuation">,</span>sql_undo <span class="token keyword">from</span> v$logmnr_contents<span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token keyword">table</span> test01<span class="token punctuation">.</span>logmnr_temp nologging <span class="token keyword">as</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> v$logmnr_contents<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> itpux01<span class="token punctuation">.</span>logmnr_temp <span class="token keyword">where</span> seg_owner<span class="token operator">=</span><span class="token string">'test01'</span> <span class="token operator">and</span> seg_name<span class="token operator">=</span><span class="token string">'TEST01'</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> itpux01<span class="token punctuation">.</span>logmnr_temp <span class="token keyword">where</span> seg_owner<span class="token operator">=</span><span class="token string">'test01'</span> <span class="token operator">and</span> seg_name<span class="token operator">=</span><span class="token string">'TEST01'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--05.结束分析</span><span class="token keyword">exec</span> dbms_logmnr<span class="token punctuation">.</span>end_logmnr<span class="token punctuation">;</span></code></pre><h2 id="4-logminer日志挖掘案例2-恢复DML误操作导致的表数据丢失"><a href="#4-logminer日志挖掘案例2-恢复DML误操作导致的表数据丢失" class="headerlink" title="4.logminer日志挖掘案例2-恢复DML误操作导致的表数据丢失"></a>4.logminer日志挖掘案例2-恢复DML误操作导致的表数据丢失</h2><h2 id="5-logminer日志挖掘案例3-RMAN表空间基于时间点的自动恢复"><a href="#5-logminer日志挖掘案例3-RMAN表空间基于时间点的自动恢复" class="headerlink" title="5.logminer日志挖掘案例3-RMAN表空间基于时间点的自动恢复"></a>5.logminer日志挖掘案例3-RMAN表空间基于时间点的自动恢复</h2><h2 id="6-logminer使用总结"><a href="#6-logminer使用总结" class="headerlink" title="6.logminer使用总结"></a>6.logminer使用总结</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Oracle-LogMiner日志挖掘技术部分日志&quot;&gt;&lt;a href=&quot;#Oracle-LogMiner日志挖掘技术部分日志&quot; class=&quot;headerlink&quot; title=&quot;Oracle LogMiner日志挖掘技术部分日志&quot;&gt;&lt;/a&gt;Oracle LogM
      
    
    </summary>
    
      <category term="Oracle" scheme="https://kyle.github.io/categories/Oracle/"/>
    
    
      <category term="Oracle" scheme="https://kyle.github.io/tags/Oracle/"/>
    
      <category term="LogMiner" scheme="https://kyle.github.io/tags/LogMiner/"/>
    
      <category term="日志分析" scheme="https://kyle.github.io/tags/%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Oracle Rman 备份2</title>
    <link href="https://kyle.github.io/2018/10/04/oracle/oracle-rman-bei-fen-2/"/>
    <id>https://kyle.github.io/2018/10/04/oracle/oracle-rman-bei-fen-2/</id>
    <published>2018-10-04T02:25:00.000Z</published>
    <updated>2019-05-03T16:05:09.166Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Oracle-Rman-的备份-（案列）"><a href="#Oracle-Rman-的备份-（案列）" class="headerlink" title="Oracle Rman 的备份 （案列）"></a>Oracle Rman 的备份 （案列）</h1><p><a href="https://docs.oracle.com/cd/E11882_01/index.htm" target="_blank" rel="noopener">Oracle 11G R2 官方文档</a></p><h2 id="1-如何设计一个TB级数据库的RMAN备份策略"><a href="#1-如何设计一个TB级数据库的RMAN备份策略" class="headerlink" title="1.如何设计一个TB级数据库的RMAN备份策略"></a>1.如何设计一个TB级数据库的RMAN备份策略</h2><h3 id="1-1-TB以下"><a href="#1-1-TB以下" class="headerlink" title="1.1 TB以下"></a>1.1 TB以下</h3><ul><li>用ORACLE即可实现（保存在磁盘上，5TB），也可以选择第三方备份软件 集中管理：</li></ul><blockquote><p>1）RMAN全备：每周，每天；开归档模式<br>2）逻辑全导出：每周<br>3）归档备份（第三方管理）</p></blockquote><h3 id="1-2-TB以下"><a href="#1-2-TB以下" class="headerlink" title="1.2 TB以下"></a>1.2 TB以下</h3><ul><li>用ORACLE+结合第三方软件（集中管理，带库，虚拟带库，大的备份存储，10TB）：</li></ul><blockquote><p>1）RMAN全备：每周，开归档模式<br>2）归档备份：每天<br>3）逻辑导出：一个月只导一次结构就行了，或每天导一些重要的表。</p></blockquote><h3 id="1-3-2TB以上（集中管理，虚拟带库，第三方备份介质，几十TB，压缩功能，重复删除）："><a href="#1-3-2TB以上（集中管理，虚拟带库，第三方备份介质，几十TB，压缩功能，重复删除）：" class="headerlink" title="1.3 2TB以上（集中管理，虚拟带库，第三方备份介质，几十TB，压缩功能，重复删除）："></a>1.3 2TB以上（集中管理，虚拟带库，第三方备份介质，几十TB，压缩功能，重复删除）：</h3><blockquote><p>1）RMAN全备：每周，开归档模式；每个月一次加每周增量。<br>2）归档备份：每天<br>3）逻辑导出：一个月只导一次结构就行了，或每天导一些重要的表。</p></blockquote><h3 id="1-4-备份案列"><a href="#1-4-备份案列" class="headerlink" title="1.4 备份案列"></a>1.4 备份案列</h3><ul><li>环境</li></ul><blockquote><p>ORACLE RMAN+存储备份（1TB）<br>数据库1TB，每天的归档量50GB</p></blockquote><ul><li>备份策略</li></ul><blockquote><p>每周5,20:00全备，保留2份。5TB<br>归档保留10天。 1TB<br>恢复，全备+归档。<br>逻辑全导出：每周 2TB</p></blockquote><ul><li>备份脚本 rman_full_orcl.sh</li></ul><pre class=" language-sql"><code class="language-sql">rman target <span class="token operator">/</span> catalog rman<span class="token operator">/</span>rman<span class="token variable">@rman</span> msglog <span class="token string">'/u01/backup/logs/rman_full_itpux.log'</span> <span class="token operator">&lt;&lt;</span> EOFrun {    CONFIGURE RETENTION POLICY <span class="token keyword">TO</span> REDUNDANCY <span class="token number">2</span><span class="token punctuation">;</span>    allocate channel <span class="token number">d1</span> <span class="token keyword">type</span> <span class="token keyword">disk</span><span class="token punctuation">;</span>    allocate channel <span class="token number">d2</span> <span class="token keyword">type</span> <span class="token keyword">disk</span><span class="token punctuation">;</span>    setlimit channel <span class="token number">d1</span> kbytes <span class="token number">102428750</span> maxopenfiles <span class="token number">32</span> readrate <span class="token number">200</span><span class="token punctuation">;</span>    setlimit channel <span class="token number">d2</span> kbytes <span class="token number">102428750</span> maxopenfiles <span class="token number">32</span> readrate <span class="token number">200</span><span class="token punctuation">;</span>    sql <span class="token string">'alter system archive log current'</span><span class="token punctuation">;</span>    <span class="token keyword">backup</span>        incremental level <span class="token number">0</span>        skip inaccessible        tag itpux_level0        filesperset <span class="token number">3</span>        format '<span class="token operator">/</span>u01<span class="token comment" spellcheck="true">//backup/datafile/orcl_rman_full_%s_%p_%t'</span>        <span class="token punctuation">(</span><span class="token keyword">database</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">release</span> channel <span class="token number">d1</span><span class="token punctuation">;</span>    <span class="token keyword">release</span> channel <span class="token number">d2</span><span class="token punctuation">;</span>    ALLOCATE CHANNEL <span class="token number">d3</span> <span class="token keyword">TYPE</span> <span class="token keyword">disk</span><span class="token punctuation">;</span>        <span class="token keyword">BACKUP</span>            <span class="token comment" spellcheck="true"># recommended format</span>            FORMAT '<span class="token operator">/</span>u01<span class="token comment" spellcheck="true">//backup/orcl_rman_cntrl_%s_%p_%t'</span>            <span class="token keyword">CURRENT</span> CONTROLFILE<span class="token punctuation">;</span>    <span class="token keyword">RELEASE</span> CHANNEL <span class="token number">d3</span><span class="token punctuation">;</span>    ALLOCATE CHANNEL <span class="token number">d4</span> <span class="token keyword">TYPE</span> <span class="token keyword">DISK</span><span class="token punctuation">;</span>        copy <span class="token keyword">current</span> controlfile <span class="token keyword">to</span> '<span class="token operator">/</span>u01<span class="token comment" spellcheck="true">//backup/datafile/control_itpux.bak';</span>    <span class="token keyword">RELEASE</span> CHANNEL <span class="token number">d4</span><span class="token punctuation">;</span>}ALLOCATE CHANNEL <span class="token keyword">FOR</span> MAINTENANCE DEVICE <span class="token keyword">TYPE</span> <span class="token keyword">DISK</span><span class="token punctuation">;</span>run{    report obsolete<span class="token punctuation">;</span>    <span class="token keyword">DELETE</span> noprompt EXPIRED <span class="token keyword">BACKUP</span><span class="token punctuation">;</span>    <span class="token keyword">DELETE</span> noprompt EXPIRED COPY<span class="token punctuation">;</span>    <span class="token keyword">delete</span> noprompt obsolete device <span class="token keyword">type</span> <span class="token keyword">disk</span><span class="token punctuation">;</span>}<span class="token keyword">exit</span>EOF</code></pre><ul><li>删除归档 rman_delarch_orcl.sh</li></ul><pre class=" language-sql"><code class="language-sql">rman target <span class="token operator">/</span> catalog rman<span class="token operator">/</span>rman<span class="token variable">@rman</span> msglog <span class="token string">'/u01/backup/logs/rman_delarch_itpux.log'</span> <span class="token operator">&lt;&lt;</span>EOFrun{    crosscheck archivelog <span class="token keyword">all</span><span class="token punctuation">;</span>    <span class="token keyword">delete</span> noprompt archivelog until time <span class="token string">"sysdate-7"</span><span class="token punctuation">;</span>    <span class="token keyword">delete</span> noprompt expired archivelog <span class="token keyword">all</span><span class="token punctuation">;</span>}<span class="token keyword">exit</span></code></pre><ul><li>设置crontab</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token number">00</span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token operator">*</span> <span class="token operator">*</span> su <span class="token operator">-</span> oracle <span class="token operator">-</span><span class="token number">c</span> <span class="token operator">/</span>u01<span class="token operator">/</span><span class="token keyword">backup</span><span class="token operator">/</span>scripts<span class="token operator">/</span>rman_delarch_orcl<span class="token punctuation">.</span>sh<span class="token number">00</span> <span class="token number">18</span> <span class="token operator">*</span> <span class="token operator">*</span> <span class="token number">5</span> su <span class="token operator">-</span> oracle <span class="token operator">-</span><span class="token number">c</span> <span class="token operator">/</span>u01<span class="token operator">/</span><span class="token keyword">backup</span><span class="token operator">/</span>scripts<span class="token operator">/</span>rman_full_orcl<span class="token punctuation">.</span>sh</code></pre><h2 id="2-在非归档模式的RMAN备份案例"><a href="#2-在非归档模式的RMAN备份案例" class="headerlink" title="2.在非归档模式的RMAN备份案例"></a>2.在非归档模式的RMAN备份案例</h2><blockquote><p>&emsp;&emsp;备份分为一致性备份和不完全性备份，也就是我们所说的归档模式与非归档模式的备份.创建非归档备份可以是在非归档模式下创建，并且数据库必须处于mount状态下，而且恢复的时候值能恢复到最后一次备份的状态。也就说从备份到发生故障的这段时间都将丢失</p></blockquote><ul><li>1.1. 检查归档状态</li></ul><pre class=" language-sql"><code class="language-sql">archive log list<span class="token punctuation">;</span></code></pre><ul><li>1.2 将数据库启动到mount状态</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">shutdown</span> immediatestartup mount<span class="token punctuation">;</span></code></pre><ul><li>1.3 执行备份</li></ul><pre class=" language-sql"><code class="language-sql">rman target <span class="token operator">/</span><span class="token keyword">backup</span> <span class="token keyword">database</span><span class="token punctuation">;</span></code></pre><ul><li>2.1 非归档模式备份</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">shutdown</span> immediate<span class="token punctuation">;</span>startup mount<span class="token punctuation">;</span>rman target <span class="token operator">/</span><span class="token keyword">backup</span> <span class="token keyword">database</span><span class="token punctuation">;</span></code></pre><ul><li>3.1 归档模式</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">database</span> <span class="token keyword">open</span></code></pre><h2 id="3-在归档模式的RMAN备份与恢复案例-丢失所有文件"><a href="#3-在归档模式的RMAN备份与恢复案例-丢失所有文件" class="headerlink" title="3.在归档模式的RMAN备份与恢复案例-丢失所有文件"></a>3.在归档模式的RMAN备份与恢复案例-丢失所有文件</h2><blockquote><p> &emsp;&emsp;如果要创建正式库的备份，一般不建议用非归档模式备份，也不建议用很简单的命令来完成。而是更多的采用脚本实现归档模式备份，这样将可通过backup+archive log+redo有效的将数据恢复到最近一次改变的状态，可以达到数据的丢失最小化。</p></blockquote><ul><li><p>创建归档模式备份</p><blockquote><p>&emsp;&emsp; 创建归档模式备份数据库必须处于归档(archivelog)模式，因为归档模式备份的数据库文件和控制文件的SCN号可能会不一致。<br>并且可以在数据库打开并不影响业务的情况下完成数据的备份工作；那么这样的备份将是归档模式的备份，那么如果要恢复可以通过backup+archive log+redo来恢复到最近一次日志切换时候的数据，而不是最后一次备份时候的数据。</p></blockquote></li><li><p>寻找dbid</p></li></ul><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--1.可以在查看数据库警告日志</span>vim <span class="token operator">/</span>u01<span class="token operator">/</span>app<span class="token operator">/</span>oracle<span class="token operator">/</span>diag<span class="token operator">/</span>rdbms<span class="token operator">/</span>orcl<span class="token operator">/</span>orcl<span class="token operator">/</span>trace<span class="token operator">/</span>alert_orcl<span class="token punctuation">.</span>log<span class="token comment" spellcheck="true">--2.在备份的控制文件中查找</span><span class="token comment" spellcheck="true">--3.用BBED在备份的文件中查找</span><span class="token comment" spellcheck="true">--4.在备份日志中查找 </span><span class="token comment" spellcheck="true">--5.配置控制文件强制启动数据库</span><span class="token comment" spellcheck="true">--5.1 添加一个参数文件</span></code></pre><h2 id="4-RMAN恢复案例-丢失单个数据文件如何恢复"><a href="#4-RMAN恢复案例-丢失单个数据文件如何恢复" class="headerlink" title="4.RMAN恢复案例-丢失单个数据文件如何恢复"></a>4.RMAN恢复案例-丢失单个数据文件如何恢复</h2><h2 id="5-RMAN恢复案例-丢失整个数据表空间如何恢复"><a href="#5-RMAN恢复案例-丢失整个数据表空间如何恢复" class="headerlink" title="5.RMAN恢复案例-丢失整个数据表空间如何恢复"></a>5.RMAN恢复案例-丢失整个数据表空间如何恢复</h2><h2 id="6-RMAN恢复案例-丢失SYSTEM表空间如何恢复"><a href="#6-RMAN恢复案例-丢失SYSTEM表空间如何恢复" class="headerlink" title="6.RMAN恢复案例-丢失SYSTEM表空间如何恢复"></a>6.RMAN恢复案例-丢失SYSTEM表空间如何恢复</h2><h2 id="7-RMAN恢复案例-丢失控制文件如何恢复"><a href="#7-RMAN恢复案例-丢失控制文件如何恢复" class="headerlink" title="7.RMAN恢复案例-丢失控制文件如何恢复"></a>7.RMAN恢复案例-丢失控制文件如何恢复</h2><h2 id="8-RMAN恢复案例-丢失参数文件如何恢复"><a href="#8-RMAN恢复案例-丢失参数文件如何恢复" class="headerlink" title="8.RMAN恢复案例-丢失参数文件如何恢复"></a>8.RMAN恢复案例-丢失参数文件如何恢复</h2><h2 id="9-RMAN恢复案例-丢失重做日志文件如何恢复"><a href="#9-RMAN恢复案例-丢失重做日志文件如何恢复" class="headerlink" title="9.RMAN恢复案例-丢失重做日志文件如何恢复"></a>9.RMAN恢复案例-丢失重做日志文件如何恢复</h2><h2 id="10-RMAN恢复案例-存储损坏数据丢失如何恢复"><a href="#10-RMAN恢复案例-存储损坏数据丢失如何恢复" class="headerlink" title="10.RMAN恢复案例-存储损坏数据丢失如何恢复"></a>10.RMAN恢复案例-存储损坏数据丢失如何恢复</h2><h2 id="11-RMAN恢复案例-不完全恢复"><a href="#11-RMAN恢复案例-不完全恢复" class="headerlink" title="11.RMAN恢复案例-不完全恢复"></a>11.RMAN恢复案例-不完全恢复</h2><h2 id="12-RMAN基于时间点-time-的不完全恢复"><a href="#12-RMAN基于时间点-time-的不完全恢复" class="headerlink" title="12.RMAN基于时间点(time)的不完全恢复"></a>12.RMAN基于时间点(time)的不完全恢复</h2><h2 id="13-RMAN基于系统改变号-scn-的不完全恢复"><a href="#13-RMAN基于系统改变号-scn-的不完全恢复" class="headerlink" title="13.RMAN基于系统改变号(scn)的不完全恢复"></a>13.RMAN基于系统改变号(scn)的不完全恢复</h2><h2 id="14-RMAN基于部分数据文件与部分归档丢失的cancel不完全恢复"><a href="#14-RMAN基于部分数据文件与部分归档丢失的cancel不完全恢复" class="headerlink" title="14.RMAN基于部分数据文件与部分归档丢失的cancel不完全恢复"></a>14.RMAN基于部分数据文件与部分归档丢失的cancel不完全恢复</h2><h2 id="15-RMAN基于当前重做日志丢失的cancel不完全恢复"><a href="#15-RMAN基于当前重做日志丢失的cancel不完全恢复" class="headerlink" title="15.RMAN基于当前重做日志丢失的cancel不完全恢复"></a>15.RMAN基于当前重做日志丢失的cancel不完全恢复</h2><h2 id="16-RMAN基于备份控制文件不完全恢复"><a href="#16-RMAN基于备份控制文件不完全恢复" class="headerlink" title="16.RMAN基于备份控制文件不完全恢复"></a>16.RMAN基于备份控制文件不完全恢复</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Oracle-Rman-的备份-（案列）&quot;&gt;&lt;a href=&quot;#Oracle-Rman-的备份-（案列）&quot; class=&quot;headerlink&quot; title=&quot;Oracle Rman 的备份 （案列）&quot;&gt;&lt;/a&gt;Oracle Rman 的备份 （案列）&lt;/h1&gt;&lt;
      
    
    </summary>
    
      <category term="Oracle" scheme="https://kyle.github.io/categories/Oracle/"/>
    
    
      <category term="Oracle" scheme="https://kyle.github.io/tags/Oracle/"/>
    
      <category term="RMAN" scheme="https://kyle.github.io/tags/RMAN/"/>
    
  </entry>
  
  <entry>
    <title>Oracle SQL之常用函数</title>
    <link href="https://kyle.github.io/2018/10/04/oracle/oracle-sql-zhi-chang-yong-han-shu/"/>
    <id>https://kyle.github.io/2018/10/04/oracle/oracle-sql-zhi-chang-yong-han-shu/</id>
    <published>2018-10-04T02:25:00.000Z</published>
    <updated>2019-05-03T15:43:29.368Z</updated>
    
    <content type="html"><![CDATA[<h1 id="OracleSQL语言之常用函数"><a href="#OracleSQL语言之常用函数" class="headerlink" title="OracleSQL语言之常用函数"></a>OracleSQL语言之常用函数</h1><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p><a href="https://docs.oracle.com/cd/E11882_01/index.htm" target="_blank" rel="noopener">Oracle 11G R2 官方文档</a> </p><h2 id="1-聚合函数-数据统计"><a href="#1-聚合函数-数据统计" class="headerlink" title="1. 聚合函数-数据统计"></a>1. 聚合函数-数据统计</h2><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--01.max 取列和表达式的最大值</span><span class="token keyword">SELECT</span> <span class="token function">MAX</span> <span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">MAX</span> <span class="token punctuation">(</span><span class="token keyword">DISTINCT</span> salary<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--02.min 取列和表达式的最小值</span><span class="token keyword">SELECT</span> <span class="token function">MIN</span> <span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">MIN</span> <span class="token punctuation">(</span><span class="token keyword">DISTINCT</span> salary<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--03.avg 取列和表达式的平均值</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span> <span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span> <span class="token punctuation">(</span><span class="token keyword">DISTINCT</span> salary<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--04.sum 求列和表达式的总和</span><span class="token keyword">SELECT</span> <span class="token function">SUM</span> <span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">SUM</span> <span class="token punctuation">(</span>salary <span class="token operator">+</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">SUM</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>salary <span class="token operator">+</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token operator">-</span> salary<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> department_id<span class="token punctuation">,</span> <span class="token function">SUM</span> <span class="token punctuation">(</span>salary<span class="token punctuation">)</span>    <span class="token keyword">FROM</span> employees<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> department_id<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token number">2</span> <span class="token keyword">DESC</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--05.count 求行数总和</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>  <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> manager_id <span class="token operator">=</span> <span class="token number">120</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span> <span class="token punctuation">(</span>email<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span> <span class="token punctuation">(</span><span class="token keyword">DISTINCT</span> manager_id<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--06.other</span><span class="token comment" spellcheck="true">--stddev 标准差,variance 协方差，median 求中位数</span><span class="token keyword">SELECT</span> STDDEV <span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> VARIANCE <span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> MEDIAN <span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span></code></pre><h2 id="2-分组函数-使用group-by-与having"><a href="#2-分组函数-使用group-by-与having" class="headerlink" title="2. 分组函数-使用group by 与having"></a>2. 分组函数-使用group by 与having</h2><pre class=" language-sql"><code class="language-sql"><span class="token operator">-</span><span class="token number">01</span><span class="token punctuation">.</span>简单的分组函数应用<span class="token comment" spellcheck="true">--统计各个国家名字的长度</span><span class="token comment" spellcheck="true">--length,avg,round</span>  <span class="token keyword">SELECT</span> country_name<span class="token punctuation">,</span> LENGTH <span class="token punctuation">(</span>country_name<span class="token punctuation">)</span>    <span class="token keyword">FROM</span> countries<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> country_name<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">ROUND</span> <span class="token punctuation">(</span><span class="token function">AVG</span> <span class="token punctuation">(</span>LENGTH <span class="token punctuation">(</span>country_name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> countries<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--工资</span>  <span class="token keyword">SELECT</span> manager_id<span class="token punctuation">,</span> <span class="token function">MIN</span> <span class="token punctuation">(</span>salary<span class="token punctuation">)</span> min_sal<span class="token punctuation">,</span> <span class="token function">MAX</span> <span class="token punctuation">(</span>salary<span class="token punctuation">)</span> max_sal    <span class="token keyword">FROM</span> employees<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> manager_id<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--02.多列分组数据</span><span class="token comment" spellcheck="true">--统计简历表中每年辞职的员工数</span><span class="token comment" spellcheck="true">--to_char,count</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> jl<span class="token punctuation">;</span>  <span class="token keyword">SELECT</span> TO_CHAR <span class="token punctuation">(</span>end_date<span class="token punctuation">,</span> <span class="token string">'yyyy'</span><span class="token punctuation">)</span> year<span class="token punctuation">,</span> <span class="token function">COUNT</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>    <span class="token keyword">FROM</span> job_history<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> TO_CHAR <span class="token punctuation">(</span>end_date<span class="token punctuation">,</span> <span class="token string">'yyyy'</span><span class="token punctuation">)</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token keyword">SELECT</span> TO_CHAR <span class="token punctuation">(</span>end_date<span class="token punctuation">,</span> <span class="token string">'yyyy'</span><span class="token punctuation">)</span> year<span class="token punctuation">,</span> job_id<span class="token punctuation">,</span> <span class="token function">COUNT</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>    <span class="token keyword">FROM</span> job_history<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> TO_CHAR <span class="token punctuation">(</span>end_date<span class="token punctuation">,</span> <span class="token string">'yyyy'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> job_id<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--03.使用having 子句</span><span class="token comment" spellcheck="true">--限制：1.对行进行分组，2.应用组函数，3.显示符合having 子句条件的组</span><span class="token comment" spellcheck="true">--查招聘多于等于15 个员工在星期几。</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--to_char,count</span>  <span class="token keyword">SELECT</span> TO_CHAR <span class="token punctuation">(</span>hire_date<span class="token punctuation">,</span> <span class="token string">'Day'</span><span class="token punctuation">)</span> 星期几<span class="token punctuation">,</span> <span class="token function">COUNT</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>    <span class="token keyword">FROM</span> employees<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> TO_CHAR <span class="token punctuation">(</span>hire_date<span class="token punctuation">,</span> <span class="token string">'Day'</span><span class="token punctuation">)</span>  <span class="token keyword">HAVING</span> <span class="token function">COUNT</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">15</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--统计部门里最大工资大于10000 的</span><span class="token comment" spellcheck="true">--max</span><span class="token keyword">SELECT</span> department_id<span class="token punctuation">,</span> <span class="token function">MAX</span> <span class="token punctuation">(</span>salary<span class="token punctuation">)</span>    <span class="token keyword">FROM</span> employees<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> department_id  <span class="token keyword">HAVING</span> <span class="token function">MAX</span> <span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">10000</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token number">2</span><span class="token punctuation">;</span></code></pre><h2 id="3-字符函数-运算与截取"><a href="#3-字符函数-运算与截取" class="headerlink" title="3. 字符函数-运算与截取"></a>3. 字符函数-运算与截取</h2><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--01.round（n,[m]） 四舍五入</span><span class="token comment" spellcheck="true">--m=0 整数，m&lt;0 小数点的前m 位,m>0 小数点的后m 位</span><span class="token comment" spellcheck="true">--四舍</span><span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span> salary <span class="token operator">+</span> <span class="token number">0.2</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span> <span class="token function">ROUND</span> <span class="token punctuation">(</span>salary <span class="token operator">+</span> <span class="token number">0.2</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span> <span class="token function">ROUND</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>salary <span class="token operator">+</span> <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--五入</span><span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span> salary <span class="token operator">+</span> <span class="token number">0.8</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span> <span class="token function">ROUND</span> <span class="token punctuation">(</span>salary <span class="token operator">+</span> <span class="token number">0.8</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--小数位</span><span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span> salary <span class="token operator">+</span> <span class="token number">0.842</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span> <span class="token function">ROUND</span> <span class="token punctuation">(</span>salary <span class="token operator">+</span> <span class="token number">0.842</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span> <span class="token function">ROUND</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>salary <span class="token operator">+</span> <span class="token number">0.842</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span> <span class="token function">ROUND</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>salary <span class="token operator">+</span> <span class="token number">0.867</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span> <span class="token function">ROUND</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>salary <span class="token operator">+</span> <span class="token number">0.867</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span> <span class="token function">ROUND</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>salary <span class="token operator">+</span> <span class="token number">0.867</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--02.trunc(n,[m]) 截取数字.</span><span class="token comment" spellcheck="true">--m=0 去掉小数位，m&lt;0 小数点的前m 位,m>0 小数点的后m 位</span><span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span> salary <span class="token operator">+</span> <span class="token number">0.2</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span> TRUNC <span class="token punctuation">(</span>salary <span class="token operator">+</span> <span class="token number">0.2</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span> TRUNC <span class="token punctuation">(</span><span class="token punctuation">(</span>salary <span class="token operator">+</span> <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span> TRUNC <span class="token punctuation">(</span>salary <span class="token operator">+</span> <span class="token number">0.842</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span> TRUNC <span class="token punctuation">(</span><span class="token punctuation">(</span>salary <span class="token operator">+</span> <span class="token number">0.867</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span> TRUNC <span class="token punctuation">(</span><span class="token punctuation">(</span>salary <span class="token operator">+</span> <span class="token number">0.867</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span> TRUNC <span class="token punctuation">(</span><span class="token punctuation">(</span>salary <span class="token operator">+</span> <span class="token number">0.867</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--03.ceil(n) 返回>=数字n 的最小整数</span><span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span> salary <span class="token operator">+</span> <span class="token number">0.8567</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span> CEIL <span class="token punctuation">(</span>salary <span class="token operator">+</span> <span class="token number">0.8567</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span> CEIL <span class="token punctuation">(</span>salary <span class="token operator">+</span> <span class="token number">0.2567</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--04.floor(n) 返回&lt;=数字n 的最小整数</span><span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span> salary <span class="token operator">+</span> <span class="token number">0.8567</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span> FLOOR <span class="token punctuation">(</span>salary <span class="token operator">+</span> <span class="token number">0.8567</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span> FLOOR <span class="token punctuation">(</span>salary <span class="token operator">+</span> <span class="token number">0.2567</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--05.length(n) 返回字符串的长度</span><span class="token keyword">SELECT</span> country_name<span class="token punctuation">,</span> LENGTH <span class="token punctuation">(</span>country_name<span class="token punctuation">)</span> <span class="token keyword">FROM</span> countries<span class="token punctuation">;</span></code></pre><h2 id="4-转换函数-大小写转换"><a href="#4-转换函数-大小写转换" class="headerlink" title="4. 转换函数-大小写转换"></a>4. 转换函数-大小写转换</h2><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--01.lower 转换为小写</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> first_name<span class="token punctuation">,</span> last_name  <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> first_name <span class="token operator">LIKE</span> <span class="token string">'%li%'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--Li,lI,LI,li</span><span class="token keyword">SELECT</span> first_name<span class="token punctuation">,</span> last_name  <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> LOWER <span class="token punctuation">(</span>first_name<span class="token punctuation">)</span> <span class="token operator">LIKE</span> <span class="token string">'%li%'</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> first_name<span class="token punctuation">,</span> last_name  <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> first_name <span class="token operator">=</span> LOWER <span class="token punctuation">(</span><span class="token string">'ITPUX01'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> LOWER <span class="token punctuation">(</span>first_name<span class="token punctuation">)</span><span class="token punctuation">,</span> last_name <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--02.upper 转换为大写</span><span class="token keyword">SELECT</span> UPPER <span class="token punctuation">(</span>first_name<span class="token punctuation">)</span><span class="token punctuation">,</span> last_name <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--03.initcap 将第一个字母大写，其余的小写。</span><span class="token keyword">SELECT</span> first_name<span class="token punctuation">,</span> last_name <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> INITCAP <span class="token punctuation">(</span>first_name<span class="token punctuation">)</span><span class="token punctuation">,</span> last_name <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--04.综合运用</span><span class="token keyword">SELECT</span> UPPER <span class="token punctuation">(</span>first_name<span class="token punctuation">)</span><span class="token punctuation">,</span> LOWER <span class="token punctuation">(</span>last_name<span class="token punctuation">)</span><span class="token punctuation">,</span> INITCAP <span class="token punctuation">(</span>job_id<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span></code></pre><h2 id="5-转换函数-日期字符数字转换"><a href="#5-转换函数-日期字符数字转换" class="headerlink" title="5. 转换函数-日期字符数字转换"></a>5. 转换函数-日期字符数字转换</h2><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--01.to_date 字符串>日期类型</span><span class="token comment" spellcheck="true">--Year: yy 16,yyy 016, yyyy 2016</span><span class="token comment" spellcheck="true">--Month: mm 11,mon 11 月/nov,month 11 月/november</span><span class="token comment" spellcheck="true">--Day: dd 当月第几天02, ddd 当年第几天02, dy 当周第几天星期五/fri,day 当周第几天星期五/friday</span><span class="token comment" spellcheck="true">--Hour: hh 12 小时进制01，hh24 24 小时进制13</span><span class="token comment" spellcheck="true">--24 小时的时间范围： 0:00:00 - 23:59:59,12 小时时间范围:1:00:00-12:59:59</span><span class="token comment" spellcheck="true">--Minute: mi 60 进制45</span><span class="token comment" spellcheck="true">--Second: ss 60 进制25</span><span class="token comment" spellcheck="true">--其它: Q 季度4， WW 当年第几周44，W 当月第几周1</span><span class="token keyword">SELECT</span> TO_DATE <span class="token punctuation">(</span><span class="token string">'2016-12-18 19:02:02'</span><span class="token punctuation">,</span> <span class="token string">'YYYY-MM-DD HH24:MI:SS'</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token keyword">SELECT</span> TO_DATE <span class="token punctuation">(</span><span class="token string">'2016-12-18 19:02'</span><span class="token punctuation">,</span> <span class="token string">'YYYY-MM-DD HH24:MI'</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token keyword">SELECT</span> TO_DATE <span class="token punctuation">(</span><span class="token string">'2016-12-18 19'</span><span class="token punctuation">,</span> <span class="token string">'YYYY-MM-DD HH24'</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token keyword">SELECT</span> TO_DATE <span class="token punctuation">(</span><span class="token string">'2016-12-18'</span><span class="token punctuation">,</span> <span class="token string">'YYYY-MM-DD'</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token keyword">SELECT</span> TO_DATE <span class="token punctuation">(</span><span class="token string">'2016-12'</span><span class="token punctuation">,</span> <span class="token string">'YYYY-MM'</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token keyword">SELECT</span> TO_DATE <span class="token punctuation">(</span><span class="token string">'2016'</span><span class="token punctuation">,</span> <span class="token string">'YYYY'</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token keyword">SELECT</span> TO_DATE <span class="token punctuation">(</span><span class="token string">'20161218'</span><span class="token punctuation">,</span> <span class="token string">'YYYY-MM-DD'</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--02.to_char 日期/数字>字符串</span><span class="token keyword">SELECT</span> TO_CHAR <span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token string">'yyyy-mm-dd hh24:mi:ss'</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token keyword">SELECT</span> TO_CHAR <span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token string">'yyyy'</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token keyword">SELECT</span> TO_CHAR <span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token string">'dd'</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token keyword">SELECT</span> TO_CHAR <span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token string">'hh24'</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token keyword">SELECT</span> TO_CHAR <span class="token punctuation">(</span><span class="token string">'23432.4'</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token keyword">SELECT</span> TO_CHAR <span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token string">'yyyymmdd'</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token keyword">SELECT</span> TO_CHAR <span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token string">'mmdd'</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token keyword">SELECT</span> TO_CHAR <span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token string">'yyyymm'</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--03.to_number 字符>数字</span><span class="token keyword">SELECT</span> SYSDATE <span class="token operator">-</span> <span class="token punctuation">(</span>TO_DATE <span class="token punctuation">(</span><span class="token string">'2006-11-02 15:55:55'</span><span class="token punctuation">,</span> <span class="token string">'yyyy-mm-dd hh24:mi:ss'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token keyword">SELECT</span> TO_NUMBER <span class="token punctuation">(</span>SYSDATE <span class="token operator">-</span> TO_DATE <span class="token punctuation">(</span><span class="token string">'2006-11-02 15:55:55'</span><span class="token punctuation">,</span> <span class="token string">'yyyy-mm-dd hh24:mi:ss'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token keyword">SELECT</span> TO_NUMBER <span class="token punctuation">(</span>SYSDATE <span class="token operator">-</span> TO_DATE <span class="token punctuation">(</span><span class="token string">'2006-11-02 15:55:55'</span><span class="token punctuation">,</span> <span class="token string">'yyyy-mm-dd hh24:mi:ss'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">365</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token keyword">SELECT</span> TRUNC <span class="token punctuation">(</span>TO_NUMBER <span class="token punctuation">(</span>SYSDATE <span class="token operator">-</span> TO_DATE <span class="token punctuation">(</span><span class="token string">'2006-11-02 15:55:55'</span><span class="token punctuation">,</span> <span class="token string">'yyyy-mm-dd hh24:mi:ss'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">365</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token keyword">SELECT</span> TO_NUMBER <span class="token punctuation">(</span>SYSDATE <span class="token operator">-</span> TO_DATE <span class="token punctuation">(</span><span class="token string">'2006-11-02 15:55:55'</span><span class="token punctuation">,</span> <span class="token string">'yyyy-mm-dd hh24:mi:ss'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">24</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token keyword">SELECT</span> TO_NUMBER <span class="token punctuation">(</span>SYSDATE <span class="token operator">-</span> TO_DATE <span class="token punctuation">(</span><span class="token string">'2006-11-02 15:55:55'</span><span class="token punctuation">,</span> <span class="token string">'yyyy-mm-dd hh24:mi:ss'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token keyword">SELECT</span> TO_NUMBER <span class="token punctuation">(</span>SYSDATE <span class="token operator">-</span> TO_DATE <span class="token punctuation">(</span><span class="token string">'2006-11-02 15:55:55'</span><span class="token punctuation">,</span> <span class="token string">'yyyy-mm-dd hh24:mi:ss'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span></code></pre><h2 id="6-日期函数-使用日期函数使用"><a href="#6-日期函数-使用日期函数使用" class="headerlink" title="6. 日期函数-使用日期函数使用"></a>6. 日期函数-使用日期函数使用</h2><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--01.sysdate</span><span class="token keyword">SELECT</span> SYSDATE <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--02.add_months 增加/减去月份</span><span class="token keyword">SELECT</span> ADD_MONTHS <span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token keyword">SELECT</span> ADD_MONTHS <span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--03.last_day 返回日期的最后一天</span><span class="token keyword">SELECT</span> LAST_DAY <span class="token punctuation">(</span>SYSDATE<span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token keyword">SELECT</span> LAST_DAY <span class="token punctuation">(</span>ADD_MONTHS <span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--04.months_between 时间2-时间1 的月份</span><span class="token keyword">SELECT</span> MONTHS_BETWEEN <span class="token punctuation">(</span>TO_DATE <span class="token punctuation">(</span><span class="token string">'2016/11/30'</span><span class="token punctuation">,</span> <span class="token string">'YYYY-MM-DD'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                       TO_DATE <span class="token punctuation">(</span><span class="token string">'2016/05/30'</span><span class="token punctuation">,</span> <span class="token string">'YYYY-MM-DD'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--05.next_day</span><span class="token comment" spellcheck="true">--星期日=1，一=2 二=3，三=4，四=5，五=6，六=7</span><span class="token keyword">SELECT</span> NEXT_DAY <span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token keyword">SELECT</span> NEXT_DAY <span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--06.current_date 当前日期</span><span class="token keyword">SELECT</span> <span class="token keyword">CURRENT_DATE</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--07.current_timestamp 当前日期</span><span class="token keyword">SELECT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--08.sessiontimezone 时区</span><span class="token keyword">SELECT</span> SESSIONTIMEZONE <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--09.trunc( for date)</span><span class="token keyword">SELECT</span> TRUNC <span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token string">'YYYY'</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token keyword">SELECT</span> TRUNC <span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token string">'MM'</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token keyword">SELECT</span> TRUNC <span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token string">'D'</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span><span class="token keyword">SELECT</span> TRUNC <span class="token punctuation">(</span>SYSDATE<span class="token punctuation">,</span> <span class="token string">'DD'</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span></code></pre><ul><li>字符串与日期转换</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> to_char<span class="token punctuation">(</span>sysdate<span class="token punctuation">,</span><span class="token string">'yyyy-MM-dd HH24:mi:ss'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token punctuation">;</span><span class="token keyword">select</span> to_date<span class="token punctuation">(</span><span class="token string">'2018-02-12 16:35:36'</span><span class="token punctuation">,</span><span class="token string">'yyyy-MM-dd HH24:mi:ss'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token punctuation">;</span></code></pre><h2 id="7-集合函数-合并两张表的数据"><a href="#7-集合函数-合并两张表的数据" class="headerlink" title="7. 集合函数-合并两张表的数据"></a>7. 集合函数-合并两张表的数据</h2><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--01.union (无重并集，去重排序)</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> scott<span class="token punctuation">.</span>salgrade<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">SUM</span> <span class="token punctuation">(</span>salary<span class="token punctuation">)</span>  <span class="token keyword">FROM</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> y<span class="token punctuation">.</span>salary          <span class="token keyword">FROM</span> employees y        <span class="token keyword">UNION</span>        <span class="token keyword">SELECT</span> s<span class="token punctuation">.</span>hisal          <span class="token keyword">FROM</span> scott<span class="token punctuation">.</span>salgrade s<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> sql01<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> sql06<span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> sql06<span class="token keyword">AS</span>    <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> sql01<span class="token punctuation">;</span><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> sql06      <span class="token keyword">WHERE</span> sql01_id <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token keyword">COMMIT</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> sql01<span class="token keyword">UNION</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> sql06<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--02.union all（有重并集，不去重排序）</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">SUM</span> <span class="token punctuation">(</span>salary<span class="token punctuation">)</span>  <span class="token keyword">FROM</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> y<span class="token punctuation">.</span>salary          <span class="token keyword">FROM</span> employees y        <span class="token keyword">UNION</span> <span class="token keyword">ALL</span>        <span class="token keyword">SELECT</span> s<span class="token punctuation">.</span>hisal          <span class="token keyword">FROM</span> scott<span class="token punctuation">.</span>salgrade s<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> sql01<span class="token keyword">UNION</span> <span class="token keyword">ALL</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> sql06<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--03.intersect （交集,显示相同的）</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> sql01<span class="token keyword">INTERSECT</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> sql06<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--04.minus （差集，显示不同的）</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> sql01MINUS<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> sql06<span class="token punctuation">;</span></code></pre><h2 id="8-分析函数-使用DECODE-函数"><a href="#8-分析函数-使用DECODE-函数" class="headerlink" title="8. 分析函数-使用DECODE 函数"></a>8. 分析函数-使用DECODE 函数</h2><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--decode (条件,值1，返回值1，值2，返回值2,...，缺省值）</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span>  <span class="token keyword">SELECT</span> DECODE <span class="token punctuation">(</span>job_id<span class="token punctuation">,</span>  <span class="token string">'AD_PRES'</span><span class="token punctuation">,</span> <span class="token string">'CEO'</span><span class="token punctuation">,</span>  <span class="token string">'HR_PEP'</span><span class="token punctuation">,</span> <span class="token string">'HR'</span><span class="token punctuation">,</span>  <span class="token string">'SA'</span><span class="token punctuation">)</span> JOB<span class="token punctuation">,</span>         <span class="token function">COUNT</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>                                                JOB_COUNT    <span class="token keyword">FROM</span> employees<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> DECODE <span class="token punctuation">(</span>job_id<span class="token punctuation">,</span>  <span class="token string">'AD_PRES'</span><span class="token punctuation">,</span> <span class="token string">'CEO'</span><span class="token punctuation">,</span>  <span class="token string">'HR_PEP'</span><span class="token punctuation">,</span> <span class="token string">'HR'</span><span class="token punctuation">,</span>  <span class="token string">'SA'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--判断输出</span><span class="token keyword">SELECT</span> <span class="token operator">*</span>  <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> salary <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">3100</span><span class="token punctuation">,</span> <span class="token number">2800</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> DECODE <span class="token punctuation">(</span>salary<span class="token punctuation">,</span> <span class="token number">3100</span><span class="token punctuation">,</span> <span class="token string">'yes'</span><span class="token punctuation">,</span> <span class="token string">'no'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> DECODE <span class="token punctuation">(</span>salary<span class="token punctuation">,</span> <span class="token number">2800</span><span class="token punctuation">,</span> <span class="token string">'yes'</span><span class="token punctuation">,</span> <span class="token string">'no'</span><span class="token punctuation">)</span>  <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> salary <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">3100</span><span class="token punctuation">,</span> <span class="token number">2800</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;OracleSQL语言之常用函数&quot;&gt;&lt;a href=&quot;#OracleSQL语言之常用函数&quot; class=&quot;headerlink&quot; title=&quot;OracleSQL语言之常用函数&quot;&gt;&lt;/a&gt;OracleSQL语言之常用函数&lt;/h1&gt;&lt;h2 id=&quot;注意&quot;&gt;&lt;a hr
      
    
    </summary>
    
      <category term="Oracle" scheme="https://kyle.github.io/categories/Oracle/"/>
    
    
      <category term="Oracle" scheme="https://kyle.github.io/tags/Oracle/"/>
    
      <category term="SQL" scheme="https://kyle.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>Oracle Rman 备份3</title>
    <link href="https://kyle.github.io/2018/10/04/oracle/oracle-rman-bei-fen-3/"/>
    <id>https://kyle.github.io/2018/10/04/oracle/oracle-rman-bei-fen-3/</id>
    <published>2018-10-04T02:25:00.000Z</published>
    <updated>2019-05-03T16:04:06.081Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Oracle-Rman-的备份-（高级）"><a href="#Oracle-Rman-的备份-（高级）" class="headerlink" title="Oracle Rman 的备份 （高级）"></a>Oracle Rman 的备份 （高级）</h1><p>[Oracle 11G R2 官方文档][1] </p><h2 id="1-关于RMAN内存缓冲与块跟踪"><a href="#1-关于RMAN内存缓冲与块跟踪" class="headerlink" title="1.关于RMAN内存缓冲与块跟踪"></a>1.关于RMAN内存缓冲与块跟踪</h2><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">## 6.使用RMAN的dbms_backup_restore包</span></code></pre><ul><li>查看RMAN 备份进程</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> sid<span class="token punctuation">,</span><span class="token keyword">serial</span><span class="token comment" spellcheck="true">#,context,sofar,totalwork,round(sofar/totalwork*100,2) "%_COMPLETE"</span>     <span class="token keyword">from</span> v$session_longops    <span class="token keyword">where</span> opname <span class="token operator">like</span> <span class="token string">'RMAN%'</span>     <span class="token operator">AND</span> OPNAME <span class="token operator">NOT</span> <span class="token operator">LIKE</span> <span class="token string">'%aggregate%'</span>     <span class="token operator">and</span> totalwork <span class="token operator">!=</span> <span class="token number">0</span>     <span class="token operator">and</span> sofar <span class="token operator">&lt;></span>totalwork<span class="token punctuation">;</span></code></pre><h2 id="2-使用RMAN的dbms-backup-restore包"><a href="#2-使用RMAN的dbms-backup-restore包" class="headerlink" title="2.使用RMAN的dbms_backup_restore包"></a>2.使用RMAN的dbms_backup_restore包</h2><ul><li>1.恢复controlfile</li></ul><blockquote><p>dbms_backup_restore包是一个非常强大的package，可以在数据库nomount下使用，用于从RMAN备份集中读取各类文件。</p></blockquote><pre class=" language-sql"><code class="language-sql"><span class="token keyword">DECLARE</span>    devtype varchar2<span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    done <span class="token keyword">boolean</span><span class="token punctuation">;</span>    <span class="token keyword">BEGIN</span>    devtype:<span class="token operator">=</span>sys<span class="token punctuation">.</span>dbms_backup_restore<span class="token punctuation">.</span>deviceAllocate <span class="token punctuation">(</span><span class="token keyword">type</span><span class="token operator">=</span><span class="token operator">></span><span class="token string">''</span><span class="token punctuation">,</span>ident<span class="token operator">=</span><span class="token operator">></span><span class="token string">'t1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    sys<span class="token punctuation">.</span>dbms_backup_restore<span class="token punctuation">.</span>restoreSetDatafile<span class="token punctuation">;</span>    sys<span class="token punctuation">.</span>dbms_backup_restore<span class="token punctuation">.</span>restoreControlfileTo<span class="token punctuation">(</span>cfname<span class="token operator">=</span><span class="token operator">></span><span class="token string">'/backup/test/control01.ctl'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    sys<span class="token punctuation">.</span>dbms_backup_restore<span class="token punctuation">.</span>restoreBackupPiece<span class="token punctuation">(</span>done<span class="token operator">=</span><span class="token operator">></span>done<span class="token punctuation">,</span>handle<span class="token operator">=</span><span class="token operator">></span><span class="token string">'/backup/full/itpux19_ctl_db01_3_1_919281645'</span><span class="token punctuation">,</span>params<span class="token operator">=</span><span class="token operator">></span><span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    sys<span class="token punctuation">.</span>dbms_backup_restore<span class="token punctuation">.</span>deviceDeallocate<span class="token punctuation">;</span>   <span class="token keyword">END</span><span class="token punctuation">;</span><span class="token operator">/</span> </code></pre><ul><li>2.恢复数据文件</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token string">'sys.dbms_backup_restore.restoreDatafileTo(dfnumber=>'</span> <span class="token operator">||</span> <span class="token keyword">file</span><span class="token comment" spellcheck="true"># ||</span>       <span class="token string">',toname=>'</span> <span class="token operator">||</span>chr<span class="token punctuation">(</span><span class="token number">39</span><span class="token punctuation">)</span><span class="token operator">||</span> name <span class="token operator">||</span>chr<span class="token punctuation">(</span><span class="token number">39</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">');'</span><span class="token punctuation">,</span>       <span class="token string">'sys.dbms_backup_restore.applySetDatafile(dfnumber=>'</span> <span class="token operator">||</span> <span class="token keyword">file</span><span class="token comment" spellcheck="true"># ||</span>       <span class="token string">',toname=>'</span> <span class="token operator">||</span>chr<span class="token punctuation">(</span><span class="token number">39</span><span class="token punctuation">)</span><span class="token operator">||</span> name <span class="token operator">||</span>chr<span class="token punctuation">(</span><span class="token number">39</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">');'</span>  <span class="token keyword">from</span> v$datafile<span class="token punctuation">;</span>  <span class="token keyword">DECLARE</span>    devtype varchar2<span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    done <span class="token keyword">boolean</span><span class="token punctuation">;</span>    <span class="token keyword">BEGIN</span>    devtype:<span class="token operator">=</span>sys<span class="token punctuation">.</span>dbms_backup_restore<span class="token punctuation">.</span>deviceAllocate <span class="token punctuation">(</span><span class="token keyword">type</span><span class="token operator">=</span><span class="token operator">></span><span class="token string">''</span><span class="token punctuation">,</span>ident<span class="token operator">=</span><span class="token operator">></span><span class="token string">'t1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      sys<span class="token punctuation">.</span>dbms_backup_restore<span class="token punctuation">.</span>restoreSetDatafile<span class="token punctuation">;</span>      sys<span class="token punctuation">.</span>dbms_backup_restore<span class="token punctuation">.</span>restoreDatafileTo<span class="token punctuation">(</span>dfnumber<span class="token operator">=</span><span class="token operator">></span><span class="token number">1</span><span class="token punctuation">,</span>toname<span class="token operator">=</span><span class="token operator">></span><span class="token string">'/backup/test/system01.dbf'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    sys<span class="token punctuation">.</span>dbms_backup_restore<span class="token punctuation">.</span>restoreDatafileTo<span class="token punctuation">(</span>dfnumber<span class="token operator">=</span><span class="token operator">></span><span class="token number">2</span><span class="token punctuation">,</span>toname<span class="token operator">=</span><span class="token operator">></span><span class="token string">'/backup/test/sysaux01.dbf'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    sys<span class="token punctuation">.</span>dbms_backup_restore<span class="token punctuation">.</span>restoreDatafileTo<span class="token punctuation">(</span>dfnumber<span class="token operator">=</span><span class="token operator">></span><span class="token number">3</span><span class="token punctuation">,</span>toname<span class="token operator">=</span><span class="token operator">></span><span class="token string">'/backup/test/undotbs01.dbf'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    sys<span class="token punctuation">.</span>dbms_backup_restore<span class="token punctuation">.</span>restoreDatafileTo<span class="token punctuation">(</span>dfnumber<span class="token operator">=</span><span class="token operator">></span><span class="token number">4</span><span class="token punctuation">,</span>toname<span class="token operator">=</span><span class="token operator">></span><span class="token string">'/backup/test/users01.dbf'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    sys<span class="token punctuation">.</span>dbms_backup_restore<span class="token punctuation">.</span>restoreDatafileTo<span class="token punctuation">(</span>dfnumber<span class="token operator">=</span><span class="token operator">></span><span class="token number">5</span><span class="token punctuation">,</span>toname<span class="token operator">=</span><span class="token operator">></span><span class="token string">'/backup/test/example01.dbf'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    sys<span class="token punctuation">.</span>dbms_backup_restore<span class="token punctuation">.</span>restoreDatafileTo<span class="token punctuation">(</span>dfnumber<span class="token operator">=</span><span class="token operator">></span><span class="token number">6</span><span class="token punctuation">,</span>toname<span class="token operator">=</span><span class="token operator">></span><span class="token string">'/backup/test/scdata01.ora'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    sys<span class="token punctuation">.</span>dbms_backup_restore<span class="token punctuation">.</span>restoreDatafileTo<span class="token punctuation">(</span>dfnumber<span class="token operator">=</span><span class="token operator">></span><span class="token number">7</span><span class="token punctuation">,</span>toname<span class="token operator">=</span><span class="token operator">></span><span class="token string">'/backup/test/rman.dbf'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    sys<span class="token punctuation">.</span>dbms_backup_restore<span class="token punctuation">.</span>restoreBackupPiece<span class="token punctuation">(</span>done<span class="token operator">=</span><span class="token operator">></span>done<span class="token punctuation">,</span>handle<span class="token operator">=</span><span class="token operator">></span><span class="token string">'/backup/full/itpux19_full_db01_1_1_919278149'</span><span class="token punctuation">,</span> params<span class="token operator">=</span><span class="token operator">></span><span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    sys<span class="token punctuation">.</span>dbms_backup_restore<span class="token punctuation">.</span>deviceDeallocate<span class="token punctuation">;</span> <span class="token keyword">END</span><span class="token punctuation">;</span> <span class="token operator">/</span></code></pre><ul><li>3.恢复归档日志文件</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">---从备份集中还原归档日志</span><span class="token keyword">declare</span>devtype varchar2<span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>done <span class="token keyword">boolean</span><span class="token punctuation">;</span><span class="token keyword">begin</span>devtype :<span class="token operator">=</span> dbms_backup_restore<span class="token punctuation">.</span>DeviceAllocate <span class="token punctuation">(</span><span class="token keyword">type</span> <span class="token operator">=</span><span class="token operator">></span><span class="token string">''</span><span class="token punctuation">,</span>ident <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'t1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>dbms_backup_restore<span class="token punctuation">.</span>RestoreSetArchivedLog<span class="token punctuation">(</span>destination<span class="token operator">=</span><span class="token operator">></span><span class="token string">'/backu/test/archive'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">--设置恢复对话</span>dbms_backup_restore<span class="token punctuation">.</span>RestoreArchivedLog<span class="token punctuation">(</span>thread <span class="token operator">=</span><span class="token operator">></span><span class="token number">1</span> <span class="token punctuation">,</span>sequence <span class="token operator">=</span><span class="token operator">></span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">--日志的线程号和日志号</span>dbms_backup_restore<span class="token punctuation">.</span>RestoreBackupPiece<span class="token punctuation">(</span>done <span class="token operator">=</span><span class="token operator">></span> done<span class="token punctuation">,</span>handle <span class="token operator">=</span><span class="token operator">></span><span class="token string">'/oracle/full/itpux19_pfile_db01_4_1_919281649'</span><span class="token punctuation">,</span> params <span class="token operator">=</span><span class="token operator">></span> <span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">--指定使用的备份集</span>dbms_backup_restore<span class="token punctuation">.</span>DeviceDeallocate<span class="token punctuation">;</span><span class="token keyword">end</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">---从备份集中按scn范围还原归档日志</span><span class="token keyword">declare</span>devtype varchar2<span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>done <span class="token keyword">boolean</span><span class="token punctuation">;</span><span class="token keyword">begin</span>devtype :<span class="token operator">=</span> dbms_backup_restore<span class="token punctuation">.</span>DeviceAllocate <span class="token punctuation">(</span><span class="token keyword">type</span> <span class="token operator">=</span><span class="token operator">></span><span class="token string">''</span><span class="token punctuation">,</span>ident <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'t1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>dbms_backup_restore<span class="token punctuation">.</span>RestoreSetArchivedLog<span class="token punctuation">(</span>destination<span class="token operator">=</span><span class="token operator">></span><span class="token string">'/backu/test/archive'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">--设置恢复对话</span>dbms_backup_restore<span class="token punctuation">.</span>RestoreArchivedLogRange<span class="token punctuation">(</span>log_change <span class="token operator">=</span><span class="token operator">></span><span class="token number">1125933</span> <span class="token punctuation">,</span>high_change <span class="token operator">=</span><span class="token operator">></span><span class="token number">1126275</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">--日志的线程号和日志号</span>dbms_backup_restore<span class="token punctuation">.</span>RestoreBackupPiece<span class="token punctuation">(</span>done <span class="token operator">=</span><span class="token operator">></span> done<span class="token punctuation">,</span>handle <span class="token operator">=</span><span class="token operator">></span><span class="token string">'/oracle/full/itpux19_pfile_db01_4_1_919281649'</span><span class="token punctuation">,</span> params <span class="token operator">=</span><span class="token operator">></span> <span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">--指定使用的备份集</span>dbms_backup_restore<span class="token punctuation">.</span>DeviceDeallocate<span class="token punctuation">;</span><span class="token keyword">end</span><span class="token punctuation">;</span></code></pre><h2 id="3-使用RMAN的BlockRecovery恢复坏块"><a href="#3-使用RMAN的BlockRecovery恢复坏块" class="headerlink" title="3.使用RMAN的BlockRecovery恢复坏块"></a>3.使用RMAN的BlockRecovery恢复坏块</h2><h2 id="4-Oracle-RMAN-Recovery-Advisor案列"><a href="#4-Oracle-RMAN-Recovery-Advisor案列" class="headerlink" title="4. Oracle RMAN Recovery Advisor案列"></a>4. Oracle RMAN Recovery Advisor案列</h2><h2 id="5-RMAN-备份压缩案列"><a href="#5-RMAN-备份压缩案列" class="headerlink" title="5.RMAN 备份压缩案列"></a>5.RMAN 备份压缩案列</h2><h3 id="5-1修改参数开启-关闭备份压缩"><a href="#5-1修改参数开启-关闭备份压缩" class="headerlink" title="5.1修改参数开启/关闭备份压缩"></a>5.1修改参数开启/关闭备份压缩</h3><ul><li>1.开启备份压缩</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--使用COMPRESSED启用RMAN备份压缩</span>CONFIGURE DEVICE <span class="token keyword">TYPE</span> <span class="token keyword">DISK</span> <span class="token keyword">BACKUP</span> <span class="token keyword">TYPE</span> <span class="token keyword">TO</span> COMPRESSED BACKUPSET<span class="token punctuation">;</span></code></pre><ul><li>2.关闭备份压缩</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--取消COMPRESSED取消RMAN备份压缩</span>CONFIGURE DEVICE <span class="token keyword">TYPE</span> <span class="token keyword">DISK</span> <span class="token keyword">BACKUP</span> <span class="token keyword">TYPE</span> <span class="token keyword">TO</span> BACKUPSET<span class="token punctuation">;</span></code></pre><h3 id="5-2直接使用命令开启-取消备份压缩"><a href="#5-2直接使用命令开启-取消备份压缩" class="headerlink" title="5.2直接使用命令开启/取消备份压缩"></a>5.2直接使用命令开启/取消备份压缩</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--对整个数据库压缩备份</span><span class="token keyword">BACKUP</span> <span class="token keyword">AS</span> COMPRESSED BACKUPSET <span class="token keyword">DATABASE</span> PLUS ARCHIVELOG<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--对指定数据文件压缩备份</span><span class="token keyword">BACKUP</span> <span class="token keyword">AS</span> COMPRESSED BACKUPSET DATAFILE <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">;</span></code></pre><h2 id="6-RMAN-增量备份与恢复"><a href="#6-RMAN-增量备份与恢复" class="headerlink" title="6.RMAN 增量备份与恢复"></a>6.RMAN 增量备份与恢复</h2><h2 id="7-RMAN-备份的加密"><a href="#7-RMAN-备份的加密" class="headerlink" title="7.RMAN 备份的加密"></a>7.RMAN 备份的加密</h2><h2 id="8-RMAN-克隆数据库测试"><a href="#8-RMAN-克隆数据库测试" class="headerlink" title="8. RMAN 克隆数据库测试"></a>8. RMAN 克隆数据库测试</h2><h2 id="9-生产环境-RMAN-异机恢复场景"><a href="#9-生产环境-RMAN-异机恢复场景" class="headerlink" title="9.生产环境 RMAN 异机恢复场景"></a>9.生产环境 RMAN 异机恢复场景</h2><h2 id="10-FlashBack"><a href="#10-FlashBack" class="headerlink" title="10.FlashBack"></a>10.FlashBack</h2><ul><li>要求</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token number">1</span><span class="token punctuation">.</span>版本大于等于<span class="token number">10.2</span><span class="token number">2</span><span class="token punctuation">.</span>数据必须开启归档<span class="token number">3</span><span class="token punctuation">.</span>数据必须配置Flash recovery<span class="token number">4</span><span class="token punctuation">.</span><span class="token number">5</span><span class="token punctuation">.</span>没有特殊要求就正常闪回</code></pre><ul><li>基本步骤</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token number">1</span><span class="token punctuation">.</span>关闭数据库<span class="token number">2</span><span class="token punctuation">.</span>startup mount<span class="token punctuation">[</span>exclusive模式<span class="token punctuation">]</span><span class="token number">3</span><span class="token punctuation">.</span>闪回  时间<span class="token operator">/</span>SCN<span class="token operator">/</span>还原点<span class="token number">4</span><span class="token punctuation">.</span><span class="token keyword">open</span> resetlogs<span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token number">4.1</span> 打开有<span class="token number">2</span>种方法    <span class="token number">1</span><span class="token punctuation">.</span><span class="token keyword">open</span> resetlog 方法，整个数据库都都恢复到丢表之前的状态（假如丢表之后对其他表进行了某些操作也将丢失）    <span class="token number">2</span><span class="token punctuation">.</span><span class="token keyword">open</span> <span class="token keyword">read</span> only 只读打开，导标，完全恢复，在导入丢失的表。    也可以先把备份放到其他的数据库恢复后把丢失的表导入的目标数据库</code></pre><ul><li>具体操作</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--SQLPLUS</span>flashback <span class="token keyword">database</span> <span class="token operator">&lt;</span>db_name<span class="token operator">></span> <span class="token keyword">to</span> scn <span class="token operator">&lt;</span>scn<span class="token operator">></span>   <span class="token comment" spellcheck="true">--scn </span>flashback <span class="token keyword">database</span> <span class="token operator">&lt;</span>db_name<span class="token operator">></span> <span class="token keyword">to</span> <span class="token keyword">timestamp</span> <span class="token operator">&lt;</span><span class="token keyword">timestamp</span><span class="token operator">></span> <span class="token comment" spellcheck="true">--time</span>flashback <span class="token keyword">database</span> <span class="token keyword">to</span> <span class="token keyword">restore</span> <span class="token keyword">point</span> <span class="token operator">&lt;</span>point_name<span class="token operator">></span> <span class="token comment" spellcheck="true">--restore point</span><span class="token comment" spellcheck="true">--RMAN</span>flashback <span class="token keyword">database</span> <span class="token keyword">to</span> scn<span class="token operator">=</span><span class="token operator">&lt;</span>scn<span class="token operator">></span> <span class="token comment" spellcheck="true">--scn</span>flashback <span class="token keyword">database</span> <span class="token keyword">to</span> time<span class="token operator">=</span><span class="token string">"to_date('2018-01-30 15:00:41','YYYY-MM-DD HH24:MI:SS')"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">--time</span>flashback <span class="token keyword">database</span> <span class="token keyword">to</span> sequence<span class="token operator">=</span><span class="token number">88</span> thread<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">--sequence</span></code></pre><h3 id="10-1-基于SCN的闪回"><a href="#10-1-基于SCN的闪回" class="headerlink" title="10.1.基于SCN的闪回"></a>10.1.基于SCN的闪回</h3><pre class=" language-sql"><code class="language-sql">SQL<span class="token operator">></span> <span class="token keyword">select</span> current_scn <span class="token keyword">from</span> v$<span class="token keyword">database</span><span class="token punctuation">;</span>CURRENT_SCN<span class="token comment" spellcheck="true">-----------</span>    <span class="token number">1349018</span>SQL<span class="token operator">></span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> v$flashback_database_log<span class="token punctuation">;</span>OLDEST_FLASHBACK_SCN OLDEST_FLASHBACK_TI RETENTION_TARGET FLASHBACK_SIZE<span class="token comment" spellcheck="true">-------------------- ------------------- ---------------- --------------</span>ESTIMATED_FLASHBACK_SIZE<span class="token comment" spellcheck="true">------------------------</span>             <span class="token number">1345507</span> <span class="token number">2018</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">30</span> <span class="token number">13</span>:<span class="token number">18</span>:<span class="token number">09</span>             <span class="token number">1440</span>      <span class="token number">104857600</span>               <span class="token number">327008256</span><span class="token number">14</span>:<span class="token number">13</span>:<span class="token number">37</span> SQL<span class="token operator">></span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test<span class="token punctuation">;</span>        ID NAME<span class="token comment" spellcheck="true">---------- --------------------</span>         <span class="token number">1</span> Anonycurse01         <span class="token number">2</span> Anonycurse02         <span class="token number">3</span> Anonycurse03         <span class="token number">4</span> Anonycurse04         <span class="token number">5</span> Anonycurse05         <span class="token number">6</span> Anonycurse06         <span class="token number">7</span> Anonycurse07<span class="token number">7</span> <span class="token keyword">rows</span> selected<span class="token punctuation">.</span><span class="token number">14</span>:<span class="token number">13</span>:<span class="token number">47</span> SQL<span class="token operator">></span> <span class="token keyword">delete</span> <span class="token keyword">from</span> test <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">;</span><span class="token number">1</span> <span class="token keyword">row</span> deleted<span class="token punctuation">.</span><span class="token number">14</span>:<span class="token number">14</span>:<span class="token number">06</span> SQL<span class="token operator">></span> <span class="token keyword">commit</span><span class="token punctuation">;</span><span class="token keyword">Commit</span> complete<span class="token punctuation">.</span>SQL<span class="token operator">></span> startup mount<span class="token punctuation">;</span>ORACLE instance started<span class="token punctuation">.</span>Total System <span class="token keyword">Global</span> Area  <span class="token number">835104768</span> bytes<span class="token keyword">Fixed</span> Size                  <span class="token number">2257840</span> bytesVariable Size             <span class="token number">281021520</span> bytes<span class="token keyword">Database</span> Buffers          <span class="token number">549453824</span> bytesRedo Buffers                <span class="token number">2371584</span> bytes<span class="token keyword">Database</span> mounted<span class="token punctuation">.</span>SQL<span class="token operator">></span> flashback <span class="token keyword">database</span> orcl <span class="token keyword">to</span> scn   <span class="token number">1349018</span><span class="token punctuation">;</span></code></pre><h3 id="10-2-基于时间的闪回"><a href="#10-2-基于时间的闪回" class="headerlink" title="10.2.基于时间的闪回"></a>10.2.基于时间的闪回</h3><ul><li>步骤</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token number">1</span><span class="token punctuation">.</span>数据库启动到MOUNT，恢复到制定时间点<span class="token number">2</span><span class="token punctuation">.</span>把数据的打开导只读模式<span class="token number">3</span><span class="token punctuation">.</span>把表导出<span class="token number">4</span><span class="token punctuation">.</span>重启数据库到MOUNT后恢复数据库到最新<span class="token number">4</span><span class="token punctuation">.</span>正常打开后导入表</code></pre><ul><li>操作</li></ul><pre class=" language-sql"><code class="language-sql">SQL<span class="token operator">></span> <span class="token keyword">set</span> time <span class="token keyword">on</span><span class="token number">15</span>:<span class="token number">00</span>:<span class="token number">12</span> SQL<span class="token operator">></span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test<span class="token punctuation">;</span>        ID NAME<span class="token comment" spellcheck="true">---------- --------------------</span>         <span class="token number">1</span> Anonycurse01         <span class="token number">2</span> Anonycurse02         <span class="token number">3</span> Anonycurse03         <span class="token number">4</span> Anonycurse04         <span class="token number">5</span> Anonycurse05         <span class="token number">6</span> Anonycurse06         <span class="token number">7</span> Anonycurse07<span class="token number">7</span> <span class="token keyword">rows</span> selected<span class="token punctuation">.</span><span class="token number">15</span>:<span class="token number">00</span>:<span class="token number">17</span> SQL<span class="token operator">></span> <span class="token keyword">create</span> <span class="token keyword">table</span> test01 <span class="token keyword">as</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test<span class="token punctuation">;</span><span class="token keyword">Table</span> created<span class="token punctuation">.</span><span class="token number">15</span>:<span class="token number">00</span>:<span class="token number">41</span> SQL<span class="token operator">></span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test01<span class="token punctuation">;</span>        ID NAME<span class="token comment" spellcheck="true">---------- --------------------</span>         <span class="token number">1</span> Anonycurse01         <span class="token number">2</span> Anonycurse02         <span class="token number">3</span> Anonycurse03         <span class="token number">4</span> Anonycurse04         <span class="token number">5</span> Anonycurse05         <span class="token number">6</span> Anonycurse06         <span class="token number">7</span> Anonycurse07<span class="token number">7</span> <span class="token keyword">rows</span> selected<span class="token punctuation">.</span><span class="token number">15</span>:<span class="token number">00</span>:<span class="token number">48</span> SQL<span class="token operator">></span> <span class="token keyword">commit</span><span class="token punctuation">;</span><span class="token keyword">Commit</span> complete<span class="token punctuation">.</span><span class="token number">15</span>:<span class="token number">00</span>:<span class="token number">57</span> SQL<span class="token operator">></span> <span class="token keyword">drop</span> <span class="token keyword">table</span> test01<span class="token punctuation">;</span><span class="token keyword">Table</span> dropped<span class="token punctuation">.</span><span class="token number">15</span>:<span class="token number">01</span>:<span class="token number">10</span> SQL<span class="token operator">></span> <span class="token keyword">drop</span> <span class="token keyword">table</span> test<span class="token punctuation">;</span><span class="token keyword">Table</span> dropped<span class="token punctuation">.</span>SQL<span class="token operator">></span> <span class="token keyword">shutdown</span> immediate<span class="token punctuation">;</span><span class="token keyword">Database</span> closed<span class="token punctuation">.</span><span class="token keyword">Database</span> dismounted<span class="token punctuation">.</span>ORACLE instance shut down<span class="token punctuation">.</span>SQL<span class="token operator">></span> startup mount<span class="token punctuation">;</span>ORACLE instance started<span class="token punctuation">.</span>Total System <span class="token keyword">Global</span> Area  <span class="token number">835104768</span> bytes<span class="token keyword">Fixed</span> Size                  <span class="token number">2257840</span> bytesVariable Size             <span class="token number">281021520</span> bytes<span class="token keyword">Database</span> Buffers          <span class="token number">549453824</span> bytesRedo Buffers                <span class="token number">2371584</span> bytes<span class="token keyword">Database</span> mounted<span class="token punctuation">.</span>RMAN<span class="token operator">></span> flashback <span class="token keyword">database</span> <span class="token keyword">to</span> time<span class="token operator">=</span><span class="token string">"to_date('2018-01-30 15:00:41','YYYY-MM-DD HH24:MI:SS')"</span><span class="token punctuation">;</span>Starting flashback at <span class="token number">2018</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">30</span> <span class="token number">15</span>:<span class="token number">04</span>:<span class="token number">25</span><span class="token keyword">using</span> channel ORA_DISK_1starting media recoverymedia recovery complete<span class="token punctuation">,</span> elapsed time: <span class="token number">00</span>:<span class="token number">00</span>:<span class="token number">07</span>Finished flashback at <span class="token number">2018</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">30</span> <span class="token number">15</span>:<span class="token number">04</span>:<span class="token number">32</span>SQL<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">database</span> <span class="token keyword">open</span> <span class="token keyword">read</span> only<span class="token punctuation">;</span><span class="token keyword">Database</span> altered<span class="token punctuation">.</span><span class="token punctuation">[</span>oracle<span class="token variable">@orcl</span>:<span class="token operator">/</span>u01<span class="token punctuation">]</span>$exp anonycurse<span class="token operator">/</span>jia <span class="token keyword">tables</span><span class="token operator">=</span>test01 <span class="token keyword">file</span><span class="token operator">=</span><span class="token operator">/</span>u01<span class="token operator">/</span>test01<span class="token punctuation">.</span>dmp log<span class="token operator">=</span><span class="token operator">/</span>u01<span class="token operator">/</span>test01<span class="token punctuation">.</span>log Export: <span class="token keyword">Release</span> <span class="token number">11.2</span><span class="token punctuation">.</span><span class="token number">0.4</span><span class="token punctuation">.</span><span class="token number">0</span> <span class="token operator">-</span> Production <span class="token keyword">on</span> Tue Jan <span class="token number">30</span> <span class="token number">15</span>:<span class="token number">22</span>:<span class="token number">07</span> <span class="token number">2018</span>Copyright <span class="token punctuation">(</span><span class="token number">c</span><span class="token punctuation">)</span> <span class="token number">1982</span><span class="token punctuation">,</span> <span class="token number">2011</span><span class="token punctuation">,</span> Oracle <span class="token operator">and</span><span class="token operator">/</span><span class="token operator">or</span> its affiliates<span class="token punctuation">.</span>  <span class="token keyword">All</span> rights reserved<span class="token punctuation">.</span>Connected <span class="token keyword">to</span>: Oracle <span class="token keyword">Database</span> 11g Enterprise Edition <span class="token keyword">Release</span> <span class="token number">11.2</span><span class="token punctuation">.</span><span class="token number">0.4</span><span class="token punctuation">.</span><span class="token number">0</span> <span class="token operator">-</span> 64bit Production<span class="token keyword">With</span> the Partitioning<span class="token punctuation">,</span> OLAP<span class="token punctuation">,</span> <span class="token keyword">Data</span> Mining <span class="token operator">and</span> <span class="token keyword">Real</span> Application Testing optionsExport done <span class="token operator">in</span> ZHS16GBK <span class="token keyword">character set</span> <span class="token operator">and</span> UTF8 <span class="token keyword">NCHAR</span> <span class="token keyword">character set</span>About <span class="token keyword">to</span> export specified <span class="token keyword">tables</span> via Conventional Path <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">.</span> exporting <span class="token keyword">table</span>                         TEST01          <span class="token number">7</span> <span class="token keyword">rows</span> exportedExport terminated successfully without <span class="token keyword">warnings</span><span class="token punctuation">.</span>SQL<span class="token operator">></span> <span class="token keyword">shutdown</span> immediate<span class="token punctuation">;</span><span class="token keyword">Database</span> closed<span class="token punctuation">.</span><span class="token keyword">Database</span> dismounted<span class="token punctuation">.</span>ORACLE instance shut down<span class="token punctuation">.</span>SQL<span class="token operator">></span> startup mount<span class="token punctuation">;</span>ORACLE instance started<span class="token punctuation">.</span>Total System <span class="token keyword">Global</span> Area  <span class="token number">835104768</span> bytes<span class="token keyword">Fixed</span> Size                  <span class="token number">2257840</span> bytesVariable Size             <span class="token number">281021520</span> bytes<span class="token keyword">Database</span> Buffers          <span class="token number">549453824</span> bytesRedo Buffers                <span class="token number">2371584</span> bytes<span class="token keyword">Database</span> mounted<span class="token punctuation">.</span>SQL<span class="token operator">></span> recovery <span class="token keyword">database</span><span class="token punctuation">;</span>SP2<span class="token number">-0734</span>: unknown command beginning <span class="token string">"recovery d..."</span> <span class="token operator">-</span> rest <span class="token keyword">of</span> line ignored<span class="token punctuation">.</span>SQL<span class="token operator">></span> recover <span class="token keyword">database</span><span class="token punctuation">;</span>Media recovery complete<span class="token punctuation">.</span></code></pre><h3 id="10-4-Restore-point-in-Oracle（Normal）"><a href="#10-4-Restore-point-in-Oracle（Normal）" class="headerlink" title="10.4 Restore point in Oracle（Normal）"></a>10.4 Restore point in Oracle（Normal）</h3><ul><li>基本使用</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--1.创建还原点</span><span class="token keyword">create</span> <span class="token keyword">restore</span> <span class="token keyword">point</span> test_normal<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--2.查看还原点</span><span class="token keyword">select</span> name<span class="token punctuation">,</span>time<span class="token punctuation">,</span>storage_size <span class="token keyword">from</span> v$restore_point<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--3.删除还原点</span><span class="token keyword">drop</span> <span class="token keyword">restore</span> <span class="token keyword">point</span> test_normal<span class="token punctuation">;</span></code></pre><ul><li>步骤</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token number">1</span><span class="token punctuation">.</span>创建还原点<span class="token number">2</span><span class="token punctuation">.</span>执行某操作后需要还原<span class="token number">3</span><span class="token punctuation">.</span>执行还原<span class="token number">4</span><span class="token punctuation">.</span><span class="token keyword">OPEN</span> RESETLOGS打开数据库<span class="token number">5</span><span class="token punctuation">.</span>删除还原点</code></pre><ul><li>操作</li></ul><pre class=" language-sql"><code class="language-sql">SQL<span class="token operator">></span> <span class="token keyword">create</span> <span class="token keyword">restore</span> <span class="token keyword">point</span> test_normal<span class="token punctuation">;</span><span class="token keyword">Restore</span> <span class="token keyword">point</span> created<span class="token punctuation">.</span>SQL<span class="token operator">></span> <span class="token keyword">select</span> name<span class="token punctuation">,</span>time<span class="token punctuation">,</span>storage_size <span class="token keyword">from</span> v$restore_point<span class="token punctuation">;</span>NAME<span class="token comment" spellcheck="true">--------------------------------------------------------------------------------</span>TIME<span class="token comment" spellcheck="true">---------------------------------------------------------------------------</span>STORAGE_SIZE<span class="token comment" spellcheck="true">------------</span>TEST_NORMAL<span class="token number">30</span><span class="token operator">-</span>JAN<span class="token number">-18</span> <span class="token number">03.46</span><span class="token punctuation">.</span><span class="token number">27.000000000</span> PM           <span class="token number">0</span>SQL<span class="token operator">></span> <span class="token keyword">select</span> table_name <span class="token keyword">from</span> user_tables<span class="token punctuation">;</span>TABLE_NAME<span class="token comment" spellcheck="true">------------------------------</span>TEST01TEST02SQL<span class="token operator">></span> <span class="token keyword">drop</span> <span class="token keyword">table</span> test01 <span class="token keyword">purge</span><span class="token punctuation">;</span><span class="token keyword">Table</span> dropped<span class="token punctuation">.</span>SQL<span class="token operator">></span> <span class="token keyword">shutdown</span> immediate<span class="token keyword">Database</span> closed<span class="token punctuation">.</span><span class="token keyword">Database</span> dismounted<span class="token punctuation">.</span>ORACLE instance shut down<span class="token punctuation">.</span>SQL<span class="token operator">></span> startup mount<span class="token punctuation">;</span>ORACLE instance started<span class="token punctuation">.</span>Total System <span class="token keyword">Global</span> Area  <span class="token number">835104768</span> bytes<span class="token keyword">Fixed</span> Size                  <span class="token number">2257840</span> bytesVariable Size             <span class="token number">281021520</span> bytes<span class="token keyword">Database</span> Buffers          <span class="token number">549453824</span> bytesRedo Buffers                <span class="token number">2371584</span> bytes<span class="token keyword">Database</span> mounted<span class="token punctuation">.</span>SQL<span class="token operator">></span> flashback <span class="token keyword">database</span> <span class="token keyword">to</span> <span class="token keyword">restore</span> <span class="token keyword">point</span> test_normal<span class="token punctuation">;</span>Flashback complete<span class="token punctuation">.</span>SQL<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">database</span> <span class="token keyword">open</span>  resetlogs<span class="token punctuation">;</span><span class="token keyword">Database</span> altered<span class="token punctuation">.</span>SQL<span class="token operator">></span> <span class="token keyword">select</span> table_name <span class="token keyword">from</span> user_tables<span class="token punctuation">;</span>TABLE_NAME<span class="token comment" spellcheck="true">------------------------------</span>TEST01TEST02</code></pre><h3 id="10-5-Restore-point-in-Oracle（Guaranteed）"><a href="#10-5-Restore-point-in-Oracle（Guaranteed）" class="headerlink" title="10.5 Restore point in Oracle（Guaranteed）"></a>10.5 Restore point in Oracle（Guaranteed）</h3><ul><li>基本使用</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--1.创建还原点</span><span class="token keyword">create</span> <span class="token keyword">restore</span> <span class="token keyword">point</span> test_guaranteed Guarantee flashback <span class="token keyword">database</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--2.</span><span class="token comment" spellcheck="true">--3.</span></code></pre><ul><li>步骤</li></ul><pre class=" language-sql"><code class="language-sql">和Normal基本一致</code></pre><ul><li>操作</li></ul><pre class=" language-sql"><code class="language-sql">flashback <span class="token keyword">database</span> <span class="token keyword">to</span> <span class="token keyword">restore</span> <span class="token keyword">point</span> test_guaranteed<span class="token punctuation">;</span></code></pre><h2 id="10-3-日常监控"><a href="#10-3-日常监控" class="headerlink" title="10.3 日常监控"></a>10.3 日常监控</h2><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--1.监控flashback</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> V$FLASH_RECOVERY_AREA_USAGE<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> V$RECOVERY_FILE_DEST<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--2.清理空间</span>rm datafile<span class="token number">.dbf</span>RMAN<span class="token operator">></span>crosscheck <span class="token keyword">backup</span><span class="token punctuation">;</span>crosscheck archivelog <span class="token keyword">all</span><span class="token punctuation">;</span><span class="token keyword">delete</span> expired <span class="token keyword">backup</span><span class="token punctuation">;</span><span class="token keyword">delete</span> expired archivelog <span class="token keyword">all</span><span class="token punctuation">;</span><span class="token keyword">delete</span> <span class="token keyword">force</span> obsolete<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--3.闪回点清理</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> v$resore_point<span class="token punctuation">;</span><span class="token keyword">drop</span> <span class="token keyword">restore</span> <span class="token keyword">point</span> <span class="token operator">&lt;</span>point_name<span class="token operator">></span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--4.相关视图</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> DICTIONARY <span class="token keyword">WHERE</span> table_name <span class="token operator">like</span> <span class="token string">'%FLASH%'</span><span class="token punctuation">;</span>v$<span class="token keyword">database</span>      <span class="token keyword">SELECT</span> FLASHBACK_ON <span class="token keyword">FROM</span> v$<span class="token keyword">database</span><span class="token punctuation">;</span>v$flashback_database_log    <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> v$flashback_database_log<span class="token punctuation">;</span>v$flashback_database_stat    <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> v$flashback_database_stat<span class="token punctuation">;</span>V$FLASH_RECOVERY_AREA_USAGE    <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> V$FLASH_RECOVERY_AREA_USAGE<span class="token punctuation">;</span>V$RECOVERY_FILE_DEST    <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> V$RECOVERY_FILE_DEST<span class="token punctuation">;</span></code></pre><h2 id="11-回收站管理"><a href="#11-回收站管理" class="headerlink" title="11.回收站管理"></a>11.回收站管理</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> dba_recyclebin<span class="token punctuation">;</span><span class="token keyword">drop</span> <span class="token keyword">table</span> test <span class="token keyword">purge</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">--清空回收站</span><span class="token keyword">purge</span> dba_recyclebin<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">--All User</span><span class="token keyword">purge</span> recyclebin<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">--Current User</span><span class="token keyword">drop</span> <span class="token keyword">table</span> test <span class="token keyword">purge</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">--Skip</span><span class="token keyword">purge</span> <span class="token keyword">tablespace</span> tbs_name<span class="token punctuation">;</span><span class="token keyword">purge</span> <span class="token keyword">tablespace</span> tbs_name <span class="token keyword">user</span> user_name<span class="token punctuation">;</span><span class="token keyword">purge</span> <span class="token keyword">index</span> BIN$Y<span class="token operator">/</span>nEtmKPVY3gUwEAAH92GA<span class="token operator">=</span><span class="token operator">=</span>$<span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--回收站还原表</span><span class="token comment" spellcheck="true">--FlashBack</span>flash <span class="token keyword">table</span> <span class="token string">"BIN$Y/nEtmKPVY3gUwEAAH92GA==$0"</span> <span class="token keyword">to</span> before <span class="token keyword">drop</span><span class="token punctuation">;</span>flashback <span class="token keyword">table</span> test <span class="token keyword">to</span> before <span class="token keyword">drop</span><span class="token punctuation">;</span>flashback <span class="token keyword">table</span> test before <span class="token keyword">drop</span> <span class="token keyword">rename</span> <span class="token keyword">to</span> test<span class="token operator">-</span>new<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--Change Name</span><span class="token keyword">SELECT</span> table_name<span class="token punctuation">,</span>table_owner<span class="token punctuation">,</span>indedx_name <span class="token keyword">from</span> dba_indexes <span class="token keyword">WHERE</span> table_owner<span class="token operator">=</span><span class="token string">'anonycurse'</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> table_name<span class="token punctuation">,</span>constraint_name <span class="token keyword">from</span> dba_constraints <span class="token keyword">WHERE</span> table_name<span class="token operator">=</span><span class="token string">'test01'</span><span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">table</span> test01 <span class="token keyword">rename</span> <span class="token keyword">constraint</span> <span class="token string">"BIN$Y5intw3VMY3gUwEAAH+aYw==$0"</span>  <span class="token keyword">rename</span> <span class="token keyword">to</span> test_id_pk<span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">index</span> <span class="token string">"BIN$Y5intw3VMY3gUwEAAH+aYw==$0"</span> <span class="token keyword">rename</span> <span class="token keyword">to</span> test_pk<span class="token punctuation">;</span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Oracle-Rman-的备份-（高级）&quot;&gt;&lt;a href=&quot;#Oracle-Rman-的备份-（高级）&quot; class=&quot;headerlink&quot; title=&quot;Oracle Rman 的备份 （高级）&quot;&gt;&lt;/a&gt;Oracle Rman 的备份 （高级）&lt;/h1&gt;&lt;
      
    
    </summary>
    
      <category term="Oracle" scheme="https://kyle.github.io/categories/Oracle/"/>
    
    
      <category term="Oracle" scheme="https://kyle.github.io/tags/Oracle/"/>
    
      <category term="RMAN" scheme="https://kyle.github.io/tags/RMAN/"/>
    
  </entry>
  
  <entry>
    <title>Oracle Rman 备份1</title>
    <link href="https://kyle.github.io/2018/10/04/oracle/oracle-rman-bei-fen-1/"/>
    <id>https://kyle.github.io/2018/10/04/oracle/oracle-rman-bei-fen-1/</id>
    <published>2018-10-04T02:25:00.000Z</published>
    <updated>2019-05-03T16:08:56.581Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Oracle-Rman-的备份-（基础）"><a href="#Oracle-Rman-的备份-（基础）" class="headerlink" title="Oracle Rman 的备份 （基础）"></a>Oracle Rman 的备份 （基础）</h1><p> <a href="https://docs.oracle.com/cd/E11882_01/backup.112/e10643/preface.htm#RCMRF89959" target="_blank" rel="noopener">Oracle 11G R2 官方文档</a> </p><h2 id="1-RMAN作用与体系架构"><a href="#1-RMAN作用与体系架构" class="headerlink" title="1. RMAN作用与体系架构"></a>1. RMAN作用与体系架构</h2><h2 id="2-nocatalog-余catalog-的介绍与catalog的配置"><a href="#2-nocatalog-余catalog-的介绍与catalog的配置" class="headerlink" title="2. nocatalog 余catalog 的介绍与catalog的配置"></a>2. nocatalog 余catalog 的介绍与catalog的配置</h2><h3 id="2-1-nocatalog介绍"><a href="#2-1-nocatalog介绍" class="headerlink" title="2.1 nocatalog介绍"></a>2.1 nocatalog介绍</h3><blockquote><p>&emsp;&emsp;nocatalog方式 就是用control file作为catalog，每一次备份都要往控制文件里面写好多备份信息，控制文件里面会有越来越多的备份信息。因此，当使用rman nocatalog方式备份时，备份controlfile是非常重要的。</p></blockquote><blockquote><p>&emsp;&emsp;由于nocatalog时利用controlfile存放备份信息，建议将oracle参数文件中的control_file_record_keep_time值加大（缺省为7天）, 参数在$oracle_home/dbs/initsid.ora中，该参数control_file__record_keep_time设置备份信息保存时间，到规定时间就自动清除以前的备份信息。</p></blockquote><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--查看参数</span><span class="token keyword">show</span> parameter control<span class="token comment" spellcheck="true">--修改时间为半个月</span><span class="token keyword">alter</span> system <span class="token keyword">set</span> control_file_record_keep_time<span class="token operator">=</span><span class="token number">14</span> scope<span class="token operator">=</span>both<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--查看参数</span><span class="token keyword">select</span> name<span class="token punctuation">,</span><span class="token keyword">value</span><span class="token punctuation">,</span>issys_modifiable <span class="token keyword">from</span> v$parameter <span class="token keyword">where</span> name<span class="token operator">=</span><span class="token string">'control_file_record_keep_time'</span><span class="token punctuation">;</span></code></pre><h3 id="2-2-catalog介绍"><a href="#2-2-catalog介绍" class="headerlink" title="2.2 catalog介绍"></a>2.2 catalog介绍</h3><blockquote><p>&emsp;&emsp;恢复目录存储的是与rman 备份有关的元数据。在某种意义上，恢复目录可以看做是保存rman备份和恢复所需的相关信息的副本。<br>&emsp;&emsp;我们可以在oracle 数据库中在用户模式下创建恢复目录，这个恢复目录仅仅是一些数据包，表，索引和视图。<br>&emsp;&emsp;rman中的再同步命令会使得目标数据库控制文件中的内容刷新这些表中的数据。当然，区别在于恢复目录可以包含企业中所有数据库的信息，而控制文件只包含关于它自己的数据库的信息。</p></blockquote><h3 id="2-3-catalog恢复目录的配置过程"><a href="#2-3-catalog恢复目录的配置过程" class="headerlink" title="2.3 catalog恢复目录的配置过程"></a>2.3 catalog恢复目录的配置过程</h3><ul><li><p>创建时需要的表空间</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">tablespace</span> rman_tbs   datafile <span class="token string">'/u01/app/oracle/oradata/orcl/rman_tbs.dbf'</span>  size 1G   autoextend <span class="token keyword">off</span><span class="token punctuation">;</span></code></pre></li><li><p>创建用户并授权<br><code>`</code>sql<br>create user rman<br>  identified by rman<br>  default tablespace rman_tbs;</p></li></ul><p>grant connect,resource,recovery_catalog_owner to rman;</p><pre><code>* 创建恢复目录```sqlrman catalog rman/rmancreate catalog tablespace rman_tbs;--注意这里tablespace不能为rman</code></pre><ul><li>配置rman 专用的监听<pre class=" language-sql"><code class="language-sql">rman <span class="token operator">=</span>  <span class="token punctuation">(</span>description <span class="token operator">=</span>      <span class="token punctuation">(</span>address_list <span class="token operator">=</span>          <span class="token punctuation">(</span>address <span class="token operator">=</span> <span class="token punctuation">(</span>protocol <span class="token operator">=</span> tcp<span class="token punctuation">)</span><span class="token punctuation">(</span>host <span class="token operator">=</span> orcl<span class="token punctuation">)</span><span class="token punctuation">(</span>port <span class="token operator">=</span> <span class="token number">1521</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token punctuation">)</span>      <span class="token punctuation">(</span>connect_data <span class="token operator">=</span>          <span class="token punctuation">(</span>sid <span class="token operator">=</span> orcl<span class="token punctuation">)</span>      <span class="token punctuation">)</span>  <span class="token punctuation">)</span></code></pre></li></ul><h2 id="3-详解-RMAN-的使用"><a href="#3-详解-RMAN-的使用" class="headerlink" title="3. 详解 RMAN 的使用"></a>3. 详解 RMAN 的使用</h2><h3 id="3-1-设置环境变量"><a href="#3-1-设置环境变量" class="headerlink" title="3.1 设置环境变量"></a>3.1 设置环境变量</h3><blockquote><p>&emsp;&emsp;  修改oracle用户环境变量为如下，在linux系统中还有一个rman命令不是oracle的，如果在win环境下，可以直接使用cmd。<br>path=$oracle_home/bin:/sbin:$path<br>才可以使用rman命令</p></blockquote><h3 id="3-2-rman命令的帮助"><a href="#3-2-rman命令的帮助" class="headerlink" title="3.2 rman命令的帮助"></a>3.2 rman命令的帮助</h3><pre class=" language-sql"><code class="language-sql">Argument     <span class="token keyword">Value</span>          Description<span class="token comment" spellcheck="true">-----------------------------------------------------------------------------</span>target       quoted<span class="token operator">-</span>string  <span class="token keyword">connect</span><span class="token operator">-</span>string <span class="token keyword">for</span> target <span class="token keyword">database</span>catalog      quoted<span class="token operator">-</span>string  <span class="token keyword">connect</span><span class="token operator">-</span>string <span class="token keyword">for</span> recovery catalognocatalog    none           <span class="token keyword">if</span> specified<span class="token punctuation">,</span> <span class="token keyword">then</span> <span class="token keyword">no</span> recovery catalogcmdfile      quoted<span class="token operator">-</span>string  name <span class="token keyword">of</span> input command <span class="token keyword">file</span>log          quoted<span class="token operator">-</span>string  name <span class="token keyword">of</span> output message log <span class="token keyword">file</span>trace        quoted<span class="token operator">-</span>string  name <span class="token keyword">of</span> output debugging message log <span class="token keyword">file</span>append       none           <span class="token keyword">if</span> specified<span class="token punctuation">,</span> log <span class="token operator">is</span> opened <span class="token operator">in</span> append modedebug        optional<span class="token operator">-</span>args  activate debuggingmsgno        none           <span class="token keyword">show</span> RMAN<span class="token operator">-</span>nnnn prefix <span class="token keyword">for</span> <span class="token keyword">all</span> messagessend         quoted<span class="token operator">-</span>string  send <span class="token number">a</span> command <span class="token keyword">to</span> the media managerpipe         string         building block <span class="token keyword">for</span> pipe namestimeout      <span class="token keyword">integer</span>        number <span class="token keyword">of</span> seconds <span class="token keyword">to</span> wait <span class="token keyword">for</span> pipe inputchecksyntax  none           <span class="token keyword">check</span> the command <span class="token keyword">file</span> <span class="token keyword">for</span> syntax <span class="token keyword">errors</span><span class="token comment" spellcheck="true">-----------------------------------------------------------------------------</span>Both single <span class="token operator">and</span> <span class="token keyword">double</span> quotes <span class="token punctuation">(</span>' <span class="token operator">or</span> "<span class="token punctuation">)</span> are accepted <span class="token keyword">for</span> <span class="token number">a</span> quoted<span class="token operator">-</span>string<span class="token punctuation">.</span>Quotes are <span class="token operator">not</span> required unless the string <span class="token keyword">contains</span> embedded white<span class="token operator">-</span>space<span class="token punctuation">.</span></code></pre><h3 id="3-3-rman连接信息介绍"><a href="#3-3-rman连接信息介绍" class="headerlink" title="3.3 rman连接信息介绍"></a>3.3 rman连接信息介绍</h3><ul><li>连接到目标数据库<pre class=" language-sql"><code class="language-sql">rman<span class="token operator">></span><span class="token keyword">connect</span> target <span class="token keyword">user</span><span class="token operator">/</span>pwd<span class="token variable">@db_name</span></code></pre></li><li>注意<blockquote><p>1、connect不能简写为conn<br>2、连接user必须具备sysdba权限<br>3、连接的db_name必须在tnsnames.ora中有配置，且有效(即通过sqlplus可以连接）<br>4、target database必须为archivelog 模式<br>5、如果是本地可以采用os认证，如果是远程需要使用密码文件认证。<br>6、rman工具版本与目标数据库必须是同一版本。</p></blockquote></li></ul><h3 id="3-4-在rman里执行操作系统命令"><a href="#3-4-在rman里执行操作系统命令" class="headerlink" title="3.4 在rman里执行操作系统命令"></a>3.4 在rman里执行操作系统命令</h3><pre class=" language-sql"><code class="language-sql">rman<span class="token operator">></span> run{host <span class="token string">"ls -artl"</span><span class="token punctuation">;</span>}rman<span class="token operator">></span> run{host <span class="token string">"ifconfig"</span><span class="token punctuation">;</span>}rman<span class="token operator">></span> run{host <span class="token string">"pwd"</span><span class="token punctuation">;</span>}<span class="token operator">/</span>home<span class="token operator">/</span>oraclehost commandcompleterman<span class="token operator">></span> run{host <span class="token string">"ls"</span><span class="token punctuation">;</span>}rman<span class="token operator">></span> <span class="token keyword">exit</span></code></pre><h3 id="3-5-在rman里执行数据库命令及sql语句"><a href="#3-5-在rman里执行数据库命令及sql语句" class="headerlink" title="3.5 在rman里执行数据库命令及sql语句"></a>3.5 在rman里执行数据库命令及sql语句</h3><pre class=" language-sql"><code class="language-sql">rman<span class="token operator">></span> <span class="token keyword">shutdown</span> immediaterman<span class="token operator">></span> startuprman<span class="token operator">></span> sql <span class="token string">'select * fromuser_tablespaces'</span><span class="token punctuation">;</span></code></pre><h3 id="3-6-在rman中保存脚本或执行脚本"><a href="#3-6-在rman中保存脚本或执行脚本" class="headerlink" title="3.6 在rman中保存脚本或执行脚本"></a>3.6 在rman中保存脚本或执行脚本</h3><blockquote><p>在RMAN中，我们可以创建一个命令文件，里面包含rman命令，然后在RMAN的中调用这个文件。如：<br>Rman target usr/pwd cmdfile=backup.cmd<br>或者，也可以直接在RMAN 中直接运行</p></blockquote><ul><li>创建存储的脚本<blockquote><p>使用create script RMAN 命令可以在恢复目录中存储脚本。 创建每个存储的脚本时，都要为脚本指定一个名称。 可以创建执行数据库备份，恢复和维护操作的脚本。在脚本中，RMAN 允许使用comment 参数存储与存储脚本相关的注释。 注意： 必须连接到恢复目录。 如：</p><pre class=" language-sql"><code class="language-sql">RMAN<span class="token operator">></span> <span class="token keyword">create</span> script my_backup_script<span class="token keyword">comment</span> <span class="token string">'itpux'</span>{  <span class="token keyword">backup</span> <span class="token keyword">database</span> plus archivelog<span class="token punctuation">;</span>}</code></pre></blockquote></li><li>修改存储脚本<blockquote><p>使用replace script 命令可以替换恢复目录中的存储脚本。</p><pre class=" language-sql"><code class="language-sql">RMAN<span class="token operator">></span> replace script my_backup_script<span class="token keyword">comment</span> <span class="token string">'bl'</span>{  <span class="token keyword">backup</span> <span class="token keyword">database</span> plus archivelog <span class="token keyword">delete</span> input<span class="token punctuation">;</span>}</code></pre></blockquote></li><li>删除存储脚本<blockquote><p>使用delete script命令可以删除一个存储脚本。</p><pre class=" language-sql"><code class="language-sql">RMAN<span class="token operator">></span> <span class="token keyword">Delete</span> script my_backup_script<span class="token punctuation">;</span></code></pre></blockquote></li><li><p>使用存储脚本</p><blockquote><p>创建一些存储过程脚本后，可以执行execute script命令来使用这些脚本。如：</p><pre class=" language-sql"><code class="language-sql">run { <span class="token keyword">execute</span> script my_backup_script<span class="token punctuation">;</span> }</code></pre></blockquote></li><li><p>打印存储的脚本</p><pre class=" language-sql"><code class="language-sql">RMAN<span class="token operator">></span> <span class="token keyword">Print</span> script my_backup_script<span class="token punctuation">;</span>正在打印存储的脚本: my_backup_script{<span class="token keyword">backup</span> <span class="token keyword">database</span> plus archivelog<span class="token punctuation">;</span>}</code></pre></li></ul><blockquote><p>还可以使用RC_STORED_SCRIPT_LINE恢复目录视图来显示存储的脚本的内容，如：<br><code>`</code>sql<br>SQL&gt; select script_name,text from rc_stored_script_line order by script_name,line;<br>SCRIPT_NAME TEXT</p></blockquote><hr><p>my_backup_script {<br>    my_backup_script backup database plus archivelog delete input;<br>my_backup_script }</p><pre><code>### 3.7 查看并修改单个参数```sqlrman&gt; show all;using target database control file instead of recoverycatalogrman configuration parameters are:</code></pre><h3 id="3-8-查看并修改单个参数"><a href="#3-8-查看并修改单个参数" class="headerlink" title="3.8 查看并修改单个参数"></a>3.8 查看并修改单个参数</h3><pre class=" language-sql"><code class="language-sql">rman<span class="token operator">></span><span class="token keyword">show</span> retention policy<span class="token punctuation">;</span>rman<span class="token operator">></span><span class="token keyword">show</span> <span class="token keyword">backup</span> optimization<span class="token punctuation">;</span>rman<span class="token operator">></span><span class="token keyword">show</span> controlfile autobackup<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">-----查看当前参数的值，是off。</span>rman<span class="token operator">></span>configure controlfile autobackup <span class="token keyword">on</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">--修改为on，自动备份控制文件</span>rman<span class="token operator">></span> <span class="token keyword">show</span> controlfile autobackup<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">---查看修改后的，已经修改成功。</span>rman<span class="token operator">></span> configurechannel <span class="token number">1</span> device <span class="token keyword">type</span> <span class="token keyword">disk</span> format <span class="token string">'/dbbak/bak_%d_%m_%d_%u'</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">--注释：配置数据文件的备份路径.</span>rman<span class="token operator">></span> configurecontrolfile autobackup format <span class="token keyword">for</span> device <span class="token keyword">type</span> <span class="token keyword">disk</span> <span class="token keyword">to</span> <span class="token string">'%f'</span><span class="token punctuation">;</span> 注释：配置控制文件的备份路径rman<span class="token operator">></span> <span class="token keyword">show</span> <span class="token keyword">all</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">------查看所有信息，看到已经更改了默认备份路径</span></code></pre><h3 id="3-8-备份文件的格式"><a href="#3-8-备份文件的格式" class="headerlink" title="3.8 备份文件的格式"></a>3.8 备份文件的格式</h3><pre class=" language-sql"><code class="language-sql">备份文件可定义的格式符号如下使用format参数时可使用的各种替换变量，如下（注意大小写）所示：<span class="token operator">%</span><span class="token number">a</span>：Oracle数据库的activation ID即RESETLOG_ID。<span class="token operator">%</span><span class="token number">c</span>：备份片段的复制数（从<span class="token number">1</span>开始编号，最大不超过<span class="token number">256</span>）。<span class="token operator">%</span><span class="token number">d</span>：Oracle数据库名称。<span class="token operator">%</span>D：当前时间中的日，格式为DD。<span class="token operator">%</span><span class="token number">e</span>：归档序号。<span class="token operator">%</span><span class="token number">f</span>：绝对文件编号。<span class="token operator">%</span>F：基于<span class="token string">"DBID+时间"</span>确定的唯一名称，格式的形式为<span class="token number">c</span><span class="token operator">-</span>IIIIIIIIII<span class="token operator">-</span>YYYYMMDD<span class="token operator">-</span>QQ<span class="token punctuation">,</span>其中IIIIIIIIII 为该数据库的DBID，YYYYMMDD为日期，QQ是一个<span class="token number">1</span>～<span class="token number">256</span>的序列。<span class="token operator">%</span>h：归档日志线程号。<span class="token operator">%</span>I：Oracle数据库的DBID。<span class="token operator">%</span>M：当前时间中的月，格式为MM。<span class="token operator">%</span>N：表空间名称。<span class="token operator">%</span>n：数据库名称，并且会在右侧用x字符进行填充，使其保持长度为<span class="token number">8</span>。比如数据库名JSSBOOK，则生成的名称则是JSSBOOKx。<span class="token operator">%</span>p：备份集中备份片段的编号，从<span class="token number">1</span>开始。<span class="token operator">%</span>s：备份集号。<span class="token operator">%</span>t：备份集时间戳。<span class="token operator">%</span>T：当前时间的年月日格式（YYYYMMDD）。<span class="token operator">%</span>u：是一个由备份集编号和建立时间压缩后组成的<span class="token number">8</span>字符名称。利用<span class="token operator">%</span>u可以为每个备份集生成一个唯一的名称。<span class="token operator">%</span>U：默认是<span class="token operator">%</span>u_<span class="token operator">%</span>p_<span class="token operator">%</span><span class="token number">c</span>的简写形式，利用它可以为每一个备份片段（即磁盘文件）</code></pre><h3 id="3-9-详解整个rman全备案例"><a href="#3-9-详解整个rman全备案例" class="headerlink" title="3.9 详解整个rman全备案例"></a>3.9 详解整个rman全备案例</h3><blockquote><p>执行rman备份必须开启数据的归档功能：</p><pre class=" language-sql"><code class="language-sql">sql<span class="token operator">></span> <span class="token keyword">shutdown</span> immediate <span class="token comment" spellcheck="true">---关闭数据库</span>sql<span class="token operator">></span> startup mount<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">----启动数据库到mount状态</span>sql<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">database</span> archivelog<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">---开启归档功能</span><span class="token keyword">database</span> altered<span class="token punctuation">.</span>sql<span class="token operator">></span> archivelog list<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">---查看归档状态</span><span class="token keyword">database</span> logmode archive mode <span class="token comment" spellcheck="true">---归档已经打开</span>automatic archival enabledarchive destination use_db_recovery_file_destoldest online logsequence <span class="token number">8</span><span class="token keyword">next</span> log sequence toarchive <span class="token number">10</span><span class="token keyword">current</span> log sequence <span class="token number">10</span>sql<span class="token operator">></span></code></pre></blockquote><h2 id="4-详解-RMAN的常用命令及日常维护"><a href="#4-详解-RMAN的常用命令及日常维护" class="headerlink" title="4. 详解 RMAN的常用命令及日常维护"></a>4. 详解 RMAN的常用命令及日常维护</h2><h3 id="4-1-rman所备份的数据库信息查看"><a href="#4-1-rman所备份的数据库信息查看" class="headerlink" title="4.1 rman所备份的数据库信息查看"></a>4.1 rman所备份的数据库信息查看</h3><ul><li><ol><li>list incarnation<blockquote><p>概述可用的备份<br>b 表示backup<br>a 表示archivelog、 f 表示full backup、 0,1,2 表示incremental level备份<br>a 表示可用avaliable、 x 表示expired</p></blockquote></li></ol></li></ul><blockquote><p>这个命令可以派生出很多类似命令，例如<br>list backup of database summary<br>list backup of archivelog all summary<br>list backup of tablespace users summary;<br>list backup of datafile n,n,n summary</p><ul><li><ol start="2"><li>list backup summary;<br>列出过期的备份文件</li></ol></li></ul></blockquote><ul><li><ol start="3"><li>list backup by file;<blockquote><p>按照文件类型分别列出<br>分别为：数据文件列表、归档日志列表、控制文件列表、spfile列表</p></blockquote></li></ol></li><li><ol start="4"><li>list backup<blockquote><p>这个命令列出已有备份集的详细信息。</p></blockquote></li></ol></li><li><ol start="5"><li>list expired backup;<blockquote><p>列出过期的备份文件</p></blockquote></li></ol></li><li><ol start="6"><li>list copy;<blockquote><p>列出copy文件</p><pre class=" language-sql"><code class="language-sql">list copy <span class="token keyword">of</span> <span class="token keyword">database</span><span class="token punctuation">;</span>list copy <span class="token keyword">of</span> controlfile<span class="token punctuation">;</span>list copy <span class="token keyword">of</span> <span class="token keyword">tablespace</span> users<span class="token punctuation">;</span>list copy <span class="token keyword">of</span> datafile n<span class="token punctuation">,</span>n<span class="token punctuation">,</span>n<span class="token punctuation">;</span>list copy <span class="token keyword">of</span> archivelog <span class="token keyword">all</span><span class="token punctuation">;</span>list copy <span class="token keyword">of</span> archivelog <span class="token keyword">from</span> scn <span class="token number">10000</span><span class="token punctuation">;</span>list copy <span class="token keyword">of</span> archivelog until sequence <span class="token number">12</span><span class="token punctuation">;</span></code></pre></blockquote></li></ol></li><li><ol start="7"><li>list backup of spfile;<blockquote><p>服务器参数文件</p></blockquote></li></ol></li><li><ol start="8"><li>list backup of controlfile;<blockquote><p>控制文件</p></blockquote></li></ol></li><li><ol start="9"><li>list backup of datafle n,n,n,n;<blockquote><p>数据文件</p></blockquote></li></ol></li><li><ol start="10"><li>list backup of tablespace tablespace_name;<blockquote><p>表空间对应的backup</p></blockquote></li></ol></li><li><ol start="11"><li>归档日志<pre class=" language-sql"><code class="language-sql">list <span class="token keyword">backup</span> <span class="token keyword">of</span> archivelog {<span class="token keyword">all</span><span class="token punctuation">,</span> <span class="token keyword">from</span><span class="token punctuation">,</span> high<span class="token punctuation">,</span> <span class="token operator">like</span><span class="token punctuation">,</span> logseq<span class="token punctuation">,</span> low<span class="token punctuation">,</span> scn<span class="token punctuation">,</span> sequence<span class="token punctuation">,</span> time<span class="token punctuation">,</span> until}<span class="token punctuation">;</span>list <span class="token keyword">backup</span> <span class="token keyword">of</span> archivelog <span class="token keyword">all</span><span class="token punctuation">;</span>list <span class="token keyword">backup</span> <span class="token keyword">of</span> archivelog until time <span class="token string">'sysdate-1'</span><span class="token punctuation">;</span>list <span class="token keyword">backup</span> <span class="token keyword">of</span> archivelog <span class="token keyword">from</span> sequence <span class="token number">10</span><span class="token punctuation">;</span>list <span class="token keyword">backup</span> <span class="token keyword">of</span> archivelog until sequence <span class="token number">10</span><span class="token punctuation">;</span>list <span class="token keyword">backup</span> <span class="token keyword">of</span> archivelog <span class="token keyword">from</span> scn <span class="token number">10000</span><span class="token punctuation">;</span>list <span class="token keyword">backup</span> <span class="token keyword">of</span> archivelog until scn <span class="token number">200000</span><span class="token punctuation">;</span>list archivelog <span class="token keyword">from</span> scn <span class="token number">1000</span><span class="token punctuation">;</span>list archivelog until scn <span class="token number">2000</span><span class="token punctuation">;</span>list archivelog <span class="token keyword">from</span> sequence <span class="token number">10</span><span class="token punctuation">;</span>list archivelog until sequence <span class="token number">12</span><span class="token punctuation">;</span></code></pre></li></ol></li></ul><h3 id="4-2-report常用命令"><a href="#4-2-report常用命令" class="headerlink" title="4.2 report常用命令"></a>4.2 report常用命令</h3><blockquote><p>report用于判断数据库当前可恢复状态、以及数据库已有备份的信息。</p></blockquote><ul><li><p>01.report schema</p><blockquote><p>报告数据库模式</p></blockquote></li><li><p>02.report obsolete;</p><blockquote><p>报告已丢弃的备份集(配置了保留策略)。</p></blockquote></li><li><p>03.report unrecoverable;</p><blockquote><p>报告当前数据库中不可恢复的数据文件(即没有这个数据文件的备份、或者该数据文件的备份已经过期)</p></blockquote></li><li><p>04.report need backup;</p><blockquote><p>报告需要备份的数据文件(根据条件不同)</p><pre class=" language-sql"><code class="language-sql">report need <span class="token keyword">backup</span> days<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--最近三天没有备份的数据文件(如果出问题的话，这些数据文件将需要最近3天的归档日志才能恢复)</span>report need <span class="token keyword">backup</span> incremental<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--需要多少个增量备份文件才能恢复的数据文件。(如果出问题，这些数据文件将需要3个增量备份才能恢复)</span>report need <span class="token keyword">backup</span> redundancy<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--报告出冗余次数小于3的数据文件</span><span class="token comment" spellcheck="true">--例如数据文件中包含2个数据文件system01.dbf和users01.dbf.</span><span class="token comment" spellcheck="true">--在3次或都3次以上备份中都包含system01.dbf这个数据文件，而users01.dbf则小于3次</span><span class="token comment" spellcheck="true">--那么，报告出来的数据文件就是users01.dbf</span><span class="token comment" spellcheck="true">--即，报告出数据库中冗余次数小于 n 的数据文件</span>report need <span class="token keyword">backup</span> recovery window <span class="token keyword">of</span> <span class="token number">2</span> days<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--报告出恢复需要2天归档日志的数据文件</span></code></pre></blockquote></li></ul><h3 id="4-3-backup常用命令"><a href="#4-3-backup常用命令" class="headerlink" title="4.3 backup常用命令"></a>4.3 backup常用命令</h3><h4 id="4-3-1-基本使用"><a href="#4-3-1-基本使用" class="headerlink" title="4.3.1 基本使用"></a>4.3.1 基本使用</h4><ul><li><p>01.设置备份标记</p></li><li><p>01.设置备份集大小(一次备份的所有结果为一个备份集，要注意备份集大小)</p></li><li><p>01.设置备份片大小(磁带或文件系统限制)</p></li><li><p>01.备份集的保存策略</p></li><li><p>01.重写configure exclude命令</p></li><li><p>01.检查数据库错误</p></li><li><p>01.跳过脱机，不可存取或只读文件</p></li></ul><ul><li><p>01.强制备份</p></li><li><p>01.基于上次备份时间备份数据文件</p></li><li><p>01.备份操作期间检查逻辑错误</p></li><li><p>01.生成备份副本</p></li><li><p>01.备份控制文件和参数文件</p></li><li><p>01.跳过脱机的，不可读取的或者只读的数据文件</p></li><li><p>01.数据库备份</p></li><li><p>01.表空间备份</p></li><li><p>01.数据文件备份</p></li><li><p>01.归档的重做日志备份</p></li><li><p>01.数据库，表空间和数据文件的映像副本</p></li><li><p>01.控制文件副本</p></li><li><p>01.Archivelog 映像副本</p></li><li><p>01.差异备份与增量备份</p></li></ul><h4 id="4-3-1-差异备份与增量备份"><a href="#4-3-1-差异备份与增量备份" class="headerlink" title="4.3.1 差异备份与增量备份"></a>4.3.1 差异备份与增量备份</h4><ul><li>块更改跟踪文件<blockquote><p>&emsp;&emsp;默认情况下，当执行增量备份时，发生任何更改的所有数据文件都将备份。 这可能使增量备份花费更长的时间，并且会增加增量备份的大小。 10g中RMAN 提供了只备份更改过的数据块的功能。 这就可以加快增量数据库备份的速度并减少其大小。 执行alter database enable block change tracking 命令可以启用块更改跟踪。<br>&emsp;&emsp;如果使用Oracle管理文件（OMF），Oracle 将会创建块更改跟踪文件。 如果没有使用OMF，则必须定义块更改跟踪文件的位置和名称。 如：<br>Alter database enable block change tracking using file ‘/oracle/backup/block.fil’;<br>&emsp;&emsp;如果跟踪文件已经存在，可以使用reuse参数：<br>Alter database enable block change tracking using file ‘/oracle/backup/block.fil’ reuse;<br>&emsp;&emsp;使用alter database block change tracking 命令可以禁用块更改跟踪。 块更改跟踪文件的大小通常预先分片且与数据库大小和重做日志线程的数量有关。 块更改跟踪文件的大小一般是数据库大小的1/30000。 块更改跟踪文件可能会以10MB为增量增长。 块更改跟踪文件的最小尺寸是每个数据文件320k，如果有许多数据文件，则块更改跟踪文件就会较大。 Oracle 会在块更改跟踪文件中存储足够的信息，从而允许最多8天的增量备份。 显而易见，如果增量备份超过8天，则将不使用块跟踪更改跟踪文件，并且无法利用块跟踪文件的有点。<br>&emsp;&emsp;可以通过检查v$block_change_tracking 视图来确定是否启用了块更改跟踪。 Status 指示了是否启用了块更改跟踪，filename 包含块更改跟踪文件的文件名。可以通过alter database rename file 命令来转移块更改跟踪文件。<br><code>`</code>sql<br>SQL&gt; select status,filename from v$block_change_tracking;<br>STATUS FILENAME</p></blockquote></li></ul><hr><p>ENABLED /oracle/BACKUP/BLOCK.FIL</p><pre><code>* 基本备份&gt;&amp;emsp;&amp;emsp;执行增量备份操作时，首先需要的是增量基本备份（incremental base backup）,以后所有的增量备份都基于这个基本备份。 每次执行数据库备份操作时，都可以通过backup 命令的incremental 参数来为备份指定一个增量级别标识符。 基本备份的增量级别为0，并且必须有基本备份才能够执行其他类型的增量备份操作。 如果没有生成基本备份就尝试执行增量备份操作，RMAN会自动执行基本备份操作。 示例：```sqlBackup incremental level=0 database;</code></pre><ul><li>差异备份<blockquote><p>&emsp;&emsp;差异备份是RMAN生成的增量备份的默认类型，对于差异备份来说，RMAN会备份自上次同级或者低级差异增量备份以来所发生变化的数据块</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">backup</span> incremental level<span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">database</span><span class="token punctuation">;</span></code></pre></blockquote></li><li>累积备份<blockquote><p>&emsp;&emsp;累积备份可以使备份集备份前面所有级别的备份以及此次要备份的所有发生变化的数据块。 累积备份是一个可选的备份方法，并要求在backup 命令中使用cumulative 关键字。</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">backup</span> incremental level <span class="token operator">=</span><span class="token number">2</span> cumulative <span class="token keyword">database</span><span class="token punctuation">;</span></code></pre></blockquote></li><li>增量备份选项<blockquote><p>&emsp;&emsp;Oracle 不仅允许执行数据库的增量备份，还允许执行表空间，数据文件以及数据库文件副本的增量备份操作。 控制文件，归档重做日志以及备份集都不能生成增量备份。 此外，还可以在执行增量备份操作时同时备份归档的重做日志。</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">Backup</span> incremental level<span class="token operator">=</span><span class="token number">0</span> <span class="token keyword">tablespace</span> users<span class="token punctuation">;</span><span class="token keyword">Backup</span> incremental level<span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">tablespace</span> users<span class="token punctuation">;</span><span class="token keyword">Backup</span> incremental level<span class="token operator">=</span><span class="token number">0</span> datafile <span class="token number">4</span><span class="token punctuation">;</span><span class="token keyword">Backup</span> incremental level<span class="token operator">=</span><span class="token number">1</span> datafile <span class="token number">4</span><span class="token punctuation">;</span><span class="token keyword">Backup</span> incremental level<span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">database</span> plus archivelog<span class="token punctuation">;</span></code></pre></blockquote></li><li>增量备份更新备份<blockquote><p>RMAN 提供了增量备份更新备份。 这种备份避免了采用数据文件的完整映像副本进行备份的开销，并且具有与映像副本相同的恢复特性。 从某种意义上来说，这种备份类似与使用映像副本的增量备份。</p><pre class=" language-sql"><code class="language-sql">Run{Recover copy <span class="token keyword">of</span> <span class="token keyword">database</span> <span class="token keyword">with</span> tag <span class="token string">'Orcl'</span><span class="token punctuation">;</span><span class="token keyword">Backup</span> incremental level <span class="token number">1</span> <span class="token keyword">for</span> recover <span class="token keyword">of</span> copy <span class="token keyword">with</span> tag <span class="token string">'Orcl'</span> <span class="token keyword">database</span><span class="token punctuation">;</span>}</code></pre><p>&emsp;&emsp;示例中的recover of copy database 命令并没有真正的恢复数据库，但它使RMAN将任何增量备份应用于与列出标记（Orcl）关联的数据文件副本。 第一次运行该命令时，它将没有任何效果，因为它没有任何可用的增量备份或数据文件副本。 这并不是很严重的问题，并且RMAN 将只显示一条警告消息。 第二次运行该命令时也没有任何效果，因为没有任何增量备份可用。<br>&emsp;&emsp;执行recover 命令后，就会产生一个增量备份，这个备份第一次运行时，它会创建一个基本备份（如果没有的话）。这实际上增量为1的备份。 第二次执行这个run代码块时，将通过backup 命令执行第一个增量备份。<br>&emsp;&emsp;一旦该命令运行了2次，第三次执行和后面的执行就能够将前面的增量备份应用与数据文件副本。 注意，recover 和backup命令中将标记赋予相同的名称非常重要。</p></blockquote></li></ul><h3 id="4-4-configure常用命令"><a href="#4-4-configure常用命令" class="headerlink" title="4.4 configure常用命令"></a>4.4 configure常用命令</h3><ul><li><ol><li>显示当前的配置信息<pre class=" language-sql"><code class="language-sql">rman<span class="token operator">></span> <span class="token keyword">show</span> <span class="token keyword">all</span><span class="token punctuation">;</span>rman 配置参数为:configure retention policy <span class="token keyword">to</span> redundancy <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># default</span>configure <span class="token keyword">backup</span> optimization <span class="token keyword">off</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># default</span>configure <span class="token keyword">default</span> device <span class="token keyword">type</span> <span class="token keyword">to</span> <span class="token keyword">disk</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># default</span>configure controlfile autobackup <span class="token keyword">off</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># default</span>configure controlfile autobackup format <span class="token keyword">for</span> device <span class="token keyword">type</span> <span class="token keyword">disk</span> <span class="token keyword">to</span> <span class="token string">'%f'</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># default</span>configure device <span class="token keyword">type</span> <span class="token keyword">disk</span> parallelism <span class="token number">1</span> <span class="token keyword">backup</span> <span class="token keyword">type</span> <span class="token keyword">to</span> backupset<span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># default</span>configure datafile <span class="token keyword">backup</span> copies <span class="token keyword">for</span> device <span class="token keyword">type</span> <span class="token keyword">disk</span> <span class="token keyword">to</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># default</span>configure archivelog <span class="token keyword">backup</span> copies <span class="token keyword">for</span> device <span class="token keyword">type</span> <span class="token keyword">disk</span> <span class="token keyword">to</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># default</span>configure maxsetsize <span class="token keyword">to</span> unlimited<span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># default</span>configure encryption <span class="token keyword">for</span> <span class="token keyword">database</span> <span class="token keyword">off</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># default</span>configure encryption <span class="token keyword">algorithm</span> <span class="token string">'aes128'</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># default</span>configure archivelog deletion policy <span class="token keyword">to</span> none<span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># default</span>configure <span class="token keyword">snapshot</span> controlfile name <span class="token keyword">to</span> <span class="token string">'/oracle/product/11.2.0/db_1/database/sncfitpuxdb.ora'</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># default</span>configure retention policy <span class="token keyword">to</span> redundancy <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># default</span>注释：配置redundancy配置需要保留几份备份文件，默认是<span class="token number">1</span>。也可以改变为其它非零的正整数值。configure <span class="token keyword">backup</span> optimization <span class="token keyword">off</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># default</span>注释：设备备份优化打开，如果表空间是只读状态，那么在做备份的时候只是第一次会备份，以后不备份。有两个选项<span class="token keyword">off</span>关闭和<span class="token keyword">on</span>打开configure <span class="token keyword">default</span> device <span class="token keyword">type</span> <span class="token keyword">to</span> <span class="token keyword">disk</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># default</span>注释：配置默认备份设备可以是sbt（磁带），<span class="token keyword">disk</span>（硬盘）；默认是硬盘configure controlfile autobackup <span class="token keyword">off</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"># default</span>注释：配置在备份的时候是否将控制文件一并备份，两个选项<span class="token punctuation">,</span>默认是<span class="token keyword">off</span>不备份，也可以是<span class="token keyword">on</span>备份、。configure controlfile autobackupformat <span class="token keyword">for</span> device <span class="token keyword">type</span> <span class="token keyword">disk</span> <span class="token keyword">to</span> <span class="token string">'%f'</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># default</span>注释：配置control <span class="token keyword">file</span>自动备份的路径和文件格式configure device <span class="token keyword">type</span> <span class="token keyword">disk</span> parallelism1 <span class="token keyword">backup</span> <span class="token keyword">type</span> <span class="token keyword">to</span> backupset<span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># default</span>注释：配置磁盘备份的类型，默认是备份集方式（backupset）或镜像拷贝也叫文件拷贝<span class="token punctuation">(</span>copy<span class="token punctuation">)</span>。镜像拷贝值适用于磁盘备份，磁带只支持备份集。一般用备份集更多，其效率会更高configure datafile backupcopies <span class="token keyword">for</span> device <span class="token keyword">type</span> <span class="token keyword">disk</span> <span class="token keyword">to</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># default</span>注释：配置生成备份集的个数，默认是<span class="token number">1</span>；备份集内会包括（数据文件，控制文件，参数文件）configure archivelog backupcopies <span class="token keyword">for</span> device <span class="token keyword">type</span> <span class="token keyword">disk</span> <span class="token keyword">to</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># default</span>注释：配置归档日志默认的备份路径configure maxsetsize <span class="token keyword">to</span> unlimited<span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># default</span>注释：配置单个备份集大小，缺省是不限制，我们可以配置成1g<span class="token operator">/</span>100m<span class="token operator">/</span>1024k <span class="token operator">or</span> otherconfigure encryption <span class="token keyword">for</span> <span class="token keyword">database</span> <span class="token keyword">off</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># default</span>注释：配置备份数据加密，是10gr2推出来的新功能，设置为<span class="token keyword">on</span>后。可以<span class="token keyword">set</span> encryption <span class="token keyword">on</span> identifyed <span class="token keyword">by</span> youpassword only<span class="token punctuation">;</span>加密备份，还原的时候需要提供密码。configureencryption <span class="token keyword">algorithm</span> <span class="token string">'aes128'</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># default</span>注释：指定备份数据加密的类型。configure archivelogdeletion policy <span class="token keyword">to</span> none<span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># default</span>注释：配置归档日志在备份后自动删除configure <span class="token keyword">snapshot</span> controlfile name <span class="token keyword">to</span> <span class="token string">'/oracle/product/10.2.0/db_1/dbs/snapcf_itpuxdb.f'</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># default</span>注释：配置控制文件快照，可以有效的提高控制文件的恢复性。查询rman设置中非默认值:sql<span class="token operator">></span> <span class="token keyword">select</span> name<span class="token punctuation">,</span><span class="token keyword">value</span> <span class="token keyword">from</span> v$rman_configuration<span class="token punctuation">;</span></code></pre></li></ol></li><li><ol><li>保存策略 (retention policy)<pre class=" language-sql"><code class="language-sql">configure retention policy <span class="token keyword">to</span> recovery window <span class="token keyword">of</span> <span class="token number">7</span> days<span class="token punctuation">;</span>configure retention policy <span class="token keyword">to</span> redundancy <span class="token number">5</span><span class="token punctuation">;</span>configure retention policy clear<span class="token punctuation">;</span>configure retention policy <span class="token keyword">to</span> none<span class="token punctuation">;</span>第一种recover window是保持所有足够的备份，可以将数据库系统恢复到最近七天内的任意时刻。任何超过最近七天的数据库备份将被标记为obsolete。第二种redundancy 是为了保持可以恢复的最新的<span class="token number">5</span>份数据库备份，任何超过最新<span class="token number">5</span>份的备份都将被标记为redundancy。它的默认值是<span class="token number">1</span>份。第三、四：none 可以把使备份保持策略失效，clear 将恢复默认的保持策略一般最安全的方法是采用第二种保持策略。</code></pre></li></ol></li><li><ol><li>备份优化 backup optimization<pre class=" language-sql"><code class="language-sql">configure <span class="token keyword">backup</span> optimization <span class="token keyword">on</span><span class="token punctuation">;</span>configure <span class="token keyword">backup</span> optimization <span class="token keyword">off</span><span class="token punctuation">;</span>configure <span class="token keyword">backup</span> optimization clear<span class="token punctuation">;</span>默认值为关闭，如果打开，rman将对备份的数据文件及归档等文件进行一种优化的算法。</code></pre></li></ol></li><li><ol><li>默认设备 default device type<pre class=" language-sql"><code class="language-sql">configure <span class="token keyword">default</span> device <span class="token keyword">type</span> <span class="token keyword">to</span> <span class="token keyword">disk</span><span class="token punctuation">;</span>configure <span class="token keyword">default</span> device <span class="token keyword">type</span> <span class="token keyword">to</span> stb<span class="token punctuation">;</span>configure <span class="token keyword">default</span> device <span class="token keyword">type</span> clear<span class="token punctuation">;</span>是指定所有i<span class="token operator">/</span>o操作的设备类型是硬盘或者磁带，默认值是硬盘磁带的设置是configure <span class="token keyword">default</span> device <span class="token keyword">type</span> <span class="token keyword">to</span> sbt<span class="token punctuation">;</span></code></pre></li></ol></li><li><ol><li>控制文件 controlfile<pre class=" language-sql"><code class="language-sql">configure controlfile autobackup <span class="token keyword">on</span><span class="token punctuation">;</span>configure controlfile autobackup format <span class="token keyword">for</span> device <span class="token keyword">type</span> <span class="token keyword">disk</span> <span class="token keyword">to</span> <span class="token string">'/oracle/backup/conf_%F'</span><span class="token punctuation">;</span>configure controlfile autobackup clear<span class="token punctuation">;</span>configrue controlfile autobackup format <span class="token keyword">for</span> device <span class="token keyword">type</span> <span class="token keyword">disk</span> clear<span class="token punctuation">;</span>CONFIGURE <span class="token keyword">SNAPSHOT</span> CONTROLFILE NAME <span class="token keyword">TO</span> <span class="token string">'/oracle/backup/scontrofile.snp'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--是配置控制文件的快照文件的存放路径和文件名，这个快照文件是在备份期间产生的，用于控制文件的读一致性。</span>configure <span class="token keyword">snapshot</span> controlfile name clear<span class="token punctuation">;</span>强制数据库在备份文件或者执行改变数据库结构的命令之后将控制文件自动备份，默认值为关闭。这样可以避免控制文件和catalog丢失后，控制文件仍然可以恢复。</code></pre></li></ol></li><li><ol><li>并行数(通道数) device type disk|stb pallelism n;<pre class=" language-sql"><code class="language-sql">configure device <span class="token keyword">type</span> <span class="token keyword">disk</span><span class="token operator">|</span>stb parallelism <span class="token number">2</span><span class="token punctuation">;</span>configure device <span class="token keyword">type</span> <span class="token keyword">disk</span><span class="token operator">|</span>stb clear<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">--用于清除上面的信道配置</span>configure channel device <span class="token keyword">type</span> <span class="token keyword">disk</span> format <span class="token string">'/oracle/backup/rman_%u'</span><span class="token punctuation">;</span>configure channel device <span class="token keyword">type</span> <span class="token keyword">disk</span> maxpiecesize 100m<span class="token punctuation">;</span>configure channel device <span class="token keyword">type</span> <span class="token keyword">disk</span> rate 1200k<span class="token punctuation">;</span>configure channel <span class="token number">1</span> device <span class="token keyword">type</span> <span class="token keyword">disk</span> format <span class="token string">'/oracle/backup/rman_%u'</span><span class="token punctuation">;</span>configure channel <span class="token number">2</span> device <span class="token keyword">type</span> <span class="token keyword">disk</span> format <span class="token string">'/oracle/backup/rman_%u'</span><span class="token punctuation">;</span>configure channel <span class="token number">1</span> device <span class="token keyword">type</span> <span class="token keyword">disk</span> maxpiecesize 100m<span class="token punctuation">;</span>配置数据库设备类型的并行度。</code></pre></li></ol></li><li><ol><li>生成备份副本 datafile|archivelog backup copies<pre class=" language-sql"><code class="language-sql">configure datafile <span class="token keyword">backup</span> copies <span class="token keyword">for</span> device <span class="token keyword">type</span> <span class="token keyword">disk</span><span class="token operator">|</span>stb <span class="token keyword">to</span> <span class="token number">3</span><span class="token punctuation">;</span>configure archivelog <span class="token keyword">backup</span> copies <span class="token keyword">for</span> device <span class="token keyword">type</span> <span class="token keyword">disk</span><span class="token operator">|</span>stb <span class="token keyword">to</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--是设置数据库的归档日志的存放设备类型</span>configure datafile<span class="token operator">|</span>archivelog <span class="token keyword">backup</span> copies <span class="token keyword">for</span> device <span class="token keyword">type</span> <span class="token keyword">disk</span><span class="token operator">|</span>stb clear<span class="token keyword">backup</span> device <span class="token keyword">type</span> <span class="token keyword">disk</span> <span class="token keyword">database</span> format <span class="token string">'/oracle/backup1/%u'</span><span class="token punctuation">,</span> <span class="token string">'/oracle/backup2/%u'</span><span class="token punctuation">,</span> <span class="token string">'/oracle/backup3/%u'</span><span class="token punctuation">;</span>是配置数据库的每次备份的copy数量，oracle的每一次备份都可以有多份完全相同的拷贝。</code></pre></li></ol></li><li><ol><li>排除选项 exclude<pre class=" language-sql"><code class="language-sql">configure exclude <span class="token keyword">for</span> <span class="token keyword">tablespace</span> USERS<span class="token punctuation">;</span>configure exclude <span class="token keyword">for</span> <span class="token keyword">tablespace</span> USERS clear<span class="token punctuation">;</span></code></pre></li></ol></li><li><ol><li>备份集大小 maxsetsize<pre class=" language-sql"><code class="language-sql">configure maxsetsize <span class="token keyword">to</span> 1g<span class="token operator">|</span>1000m<span class="token operator">|</span>1000000k<span class="token operator">|</span>unlimited<span class="token punctuation">;</span>configure maxsetsize clear<span class="token punctuation">;</span></code></pre></li></ol></li></ul><h3 id="4-5-set-命令"><a href="#4-5-set-命令" class="headerlink" title="4.5 set 命令"></a>4.5 set 命令</h3><blockquote><p>&emsp;&emsp;使用set 命令可以定义只应用于当前RMAN会话的设置。 set 命令的设置不是永久的，根据实际需求，可以采用两种方式来使用set 命令。</p><ul><li>在run 代码块外，我们可是执行下面的操作：<pre class=" language-sql"><code class="language-sql">（<span class="token number">1</span>）使用<span class="token keyword">set</span> echo 命令在消息日志中显示RMAN 命令。（<span class="token number">2</span>）使用<span class="token keyword">set</span> dbid 命令指定一个数据库的数据库标识符（<span class="token keyword">database</span> identifier： dbid）。</code></pre></li></ul></blockquote><ul><li>某些set 命令只能在run代码块的限定范围内使用，常见的有：<blockquote><p>（1）set newname 命令：用于执行表空间时间点恢复（TSPITR）或者数据库复制操作。 该命令允许指定新的数据库数据文件名。 将数据库移动到新的系统中并且文件系统名不同时，我们可以使用这个命令。使用set newname 命令时还需要使用switch 命令。<br>（2）set maxcorrupt for datafile: 使用该命令可以定义RMAN操作失败前锁允许的数据块讹误的最大数据。<br>（3）set archivelog destination: 使用该命令可以修改存储归档的重做日志的archive_log_dest_1 目标。<br>（4）set 命令和until 子句： 使用set命令和set 命令的until 子句可以定义数据库时间点恢复操作锁使用的具体时间点，SCN 或日志序列号。<br>（5）set backup copies命令： 使用该命令可以定义为备份集中的每个备份片应当创建的副本数。<br>（6）set command id: 使用该命令可以关联给定的服务器会话和给定的通道。<br>（7）set controlfile autoback format for device type: 使用该命令可以修改用于控制文件自动备份操作的默认格式。</p></blockquote></li></ul><blockquote><p>&emsp;&emsp;例如： 要执行一个为每个备份片创建两个副本的被操作，并且允许数据文件的最大讹误数为10. 脚本如下：</p></blockquote><pre class=" language-sql"><code class="language-sql">run{    <span class="token keyword">set</span> maxcorrupt <span class="token keyword">for</span> datafile <span class="token number">3</span> <span class="token keyword">to</span> <span class="token number">5</span><span class="token punctuation">;</span>    <span class="token keyword">set</span> <span class="token keyword">backup</span> copies<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>    <span class="token keyword">backup</span> <span class="token keyword">database</span><span class="token punctuation">;</span>}<span class="token keyword">set</span> until time <span class="token string">"to_date('2016-6-28 17:04:00','yyyy-mm-dd hh24:mi:ss')"</span><span class="token punctuation">;</span></code></pre><h3 id="4-5-crosscheck命令"><a href="#4-5-crosscheck命令" class="headerlink" title="4.5 crosscheck命令"></a>4.5 crosscheck命令</h3><ul><li>交叉效验RMAN 备份<blockquote><p>&emsp;&emsp;在RMAN目录和物理备份目的地不同步的情况下，我们可以使用crosscheck命令来效验控制文件或恢复目录中的RMAN信息是否与备份介质上的实际物理备份集片相同。<br>&emsp;&emsp;使用crosscheck 命令时，我们关心每个备份集或者副本的状态。 如果使用控制文件，用于备份集片的v$backup_set 视图和用于副本的v$databfile_copy 视图中的status列列出了每个备份集或副本的状态码；如果使用恢复目录，则在备份集片的RC_BACKUP_set和副本的RC_DATAFILE_COPY中列出了每个备份集或副本的状态码。 在不同的备份状态码中，我们关心以下两种状态：<br>&emsp;&emsp;（1）A（Available:可用）：RMAN 认定该项存在于备份介质上<br>&emsp;&emsp;（2）X（Expired:不可用）：这个备份集片或副本上存储的RMAN目录（即控制文件或恢复目录）中，但是并没有物理存在于备份介质上。<br>&emsp;&emsp;使用crosscheck 命令的目的是将RMAN目录的状态设置为AVAILABLE或者EXPIRED。 执行crosscheck时，RMAN检查目录中列出的每个备份集或副本并且判断他们是否存在与备份介质上。 如果备份集或副本不存在与备份介质上，它就会被标记为expired, 并且不能用于任何还原操作；如果备份集或副本存在与备份介质上，它就会维持available状态。 如果以前被标记为expired 的备份集或副本再次存在于备份介质上，crosscheck 命令就会将它标记回available。</p><pre class=" language-sql"><code class="language-sql">crosscheck <span class="token keyword">backup</span><span class="token punctuation">;</span></code></pre><p>&emsp;&emsp;可以交叉效验数据文件备份，表空间备份，控制文件备份以及服务器参数文件备份。此外，可以通过识别与备份相关联的标记来选择要交叉效验和特定的备份。 基于使用的设备或者基于一个时间周期，我们甚至可以交叉效验所有的备份。 如：</p><pre class=" language-sql"><code class="language-sql">crosscheck <span class="token keyword">backup</span> <span class="token keyword">of</span> datafile <span class="token number">1</span><span class="token punctuation">;</span>crosscheck <span class="token keyword">backup</span> <span class="token keyword">of</span> <span class="token keyword">tablespace</span> users<span class="token punctuation">;</span>crosscheck <span class="token keyword">backup</span> <span class="token keyword">of</span> controlfile<span class="token punctuation">;</span>crosscheck <span class="token keyword">backup</span> <span class="token keyword">of</span> spfile<span class="token punctuation">;</span>crosscheck <span class="token keyword">backup</span> tag<span class="token operator">=</span><span class="token string">'TEST'</span><span class="token punctuation">;</span>crosscheck <span class="token keyword">backup</span> completed <span class="token keyword">after</span> <span class="token string">'sysdate-2'</span><span class="token punctuation">;</span>crosscheck <span class="token keyword">backup</span> completed <span class="token operator">between</span> <span class="token string">'sysdate-5'</span> <span class="token operator">and</span> <span class="token string">'sysdate-2'</span><span class="token punctuation">;</span>crosscheck <span class="token keyword">backup</span> device <span class="token keyword">type</span> <span class="token keyword">disk</span><span class="token punctuation">;</span></code></pre></blockquote></li><li>交叉验证归档日志示例：<pre class=" language-sql"><code class="language-sql">RMAN<span class="token operator">></span> crosscheck archivelog <span class="token keyword">all</span><span class="token punctuation">;</span></code></pre><blockquote><p>&emsp;&emsp;我们可以基于一个号码或标准（包括时间，具体的或指定范围的SCN或日志序列号）来交叉效验归档的重做日志备份，甚至还可以使用like参数与通配符来交叉效验特定的归档日志备份。 如：</p><pre class=" language-sql"><code class="language-sql">crosscheck archivelog <span class="token operator">like</span> <span class="token string">'ARC001.log'</span><span class="token punctuation">;</span>crosscheck archivelog <span class="token string">'/oracle/arch/itpuxdb/archivelog/2016_08_02/o1_mf_1_22_cszw2d4g_.arc'</span><span class="token punctuation">;</span>crosscheck archivelog <span class="token operator">like</span> <span class="token string">'%ARC00012.LOG'</span><span class="token punctuation">;</span>crosscheck archivelog <span class="token keyword">from</span> time <span class="token string">"to_date('2016-08-02','yyyy-mm-dd')"</span><span class="token punctuation">;</span>crosscheck archivelog until time <span class="token string">"to_date('2016-08-02','yyyy-mm-dd')"</span><span class="token punctuation">;</span>crosscheck archivelog <span class="token keyword">from</span> sequence <span class="token number">12</span><span class="token punctuation">;</span>crosscheck archivelog until sequence <span class="token number">522</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--使用crosscheck copy命令还可以交叉效验副本。 包括数据文件副本，控制文件副本，归档重做日志副本以及磁盘上的归档的重做日志。 如：</span>crosscheck copy <span class="token keyword">of</span> datafile <span class="token number">5</span><span class="token punctuation">;</span>crosscheck datafilecopy '<span class="token operator">/</span>oracle<span class="token operator">/</span>oradata<span class="token operator">/</span>itpuxdb<span class="token operator">/</span>rman_tbs<span class="token number">.dbf</span><span class="token punctuation">;</span></code></pre></blockquote></li></ul><h3 id="4-6-RMAN-备份的验证validate"><a href="#4-6-RMAN-备份的验证validate" class="headerlink" title="4.6 RMAN 备份的验证validate"></a>4.6 RMAN 备份的验证validate</h3><blockquote><p>&emsp;&emsp;RMAN 提供的validate命令允许查看给定的备份集和进行验证以确保这个备份集能够被还原。注意，validate 命令必须要获得主键ID。 这个可以用list backup summary命令获取</p><pre class=" language-sql"><code class="language-sql">RMAN<span class="token operator">></span> list <span class="token keyword">backup</span> summary<span class="token punctuation">;</span>RMAN<span class="token operator">></span> validate backupset <span class="token number">206</span><span class="token punctuation">;</span>RMAN<span class="token operator">></span> validate backupset <span class="token number">206</span> <span class="token keyword">check</span> logical<span class="token punctuation">;</span></code></pre></blockquote><h3 id="4-7-change-命令"><a href="#4-7-change-命令" class="headerlink" title="4.7 change 命令"></a>4.7 change 命令</h3><blockquote><p>&emsp;&emsp;change 命令允许用户修改备份的状态。我们可能会遇到备份介质设备在某个时间爱你段中无效的情况（如突然断电）。这时，我们就可以使用change 命令来指示这个设备上的备份是不可用的。<br>&emsp;&emsp;解决硬件故障和修复磁盘后，额可以再次执行change 命令，将备份改为可用的状态。也可以将备份修改为不可用的状态。在还原和恢复操作期间，不会考虑哪些不可用的备份，但在执行delete expired命令期间这些备份记录不会被删除。 相关示例：</p><pre class=" language-sql"><code class="language-sql">change <span class="token keyword">backup</span> <span class="token keyword">of</span> <span class="token keyword">database</span> tag<span class="token operator">=</span><span class="token string">'TEST'</span> unavailable<span class="token punctuation">;</span>change <span class="token keyword">backup</span> <span class="token keyword">of</span> <span class="token keyword">database</span> <span class="token operator">like</span> <span class="token string">'%TEST%'</span> unavailable<span class="token punctuation">;</span>change backupset <span class="token number">206</span> unavailable<span class="token punctuation">;</span>change backupset <span class="token number">206</span> available<span class="token punctuation">;</span>change archivelog <span class="token string">'/archivelog/arc0001.log'</span> unavailable<span class="token punctuation">;</span></code></pre><p>&emsp;&emsp;可以使用change命令修改归档的重做日志备份的状态。如：将已经备份了指定次数的所有归档的重做日志备份修改为不可用的状态，也可以修改特定设备上的所有备份的状态。</p><pre class=" language-sql"><code class="language-sql">change archivelog <span class="token keyword">all</span> backed up <span class="token number">5</span> times <span class="token keyword">to</span> device <span class="token keyword">type</span> <span class="token keyword">disk</span> unavailable<span class="token punctuation">;</span>change <span class="token keyword">backup</span> <span class="token keyword">of</span> <span class="token keyword">database</span> device <span class="token keyword">type</span> <span class="token keyword">disk</span> unavailable<span class="token punctuation">;</span></code></pre><p>&emsp;&emsp;可是使用带有delete 参数的change 命令删除备份集，即在备份介质上的物理删除，并且从控制文件和恢复目录中删除。 前提是要知道备份集关键字，可以使用list backup 或 list copy 命令查看。</p><pre class=" language-sql"><code class="language-sql">RMAN<span class="token operator">></span> list <span class="token keyword">backup</span><span class="token punctuation">;</span></code></pre><p>删除备份集1：</p><pre class=" language-sql"><code class="language-sql">RMAN<span class="token operator">></span> change backupset <span class="token number">206</span> <span class="token keyword">delete</span><span class="token punctuation">;</span></code></pre><ul><li>使用通道 ORA_DISK_1<br><code>`</code>sql<br>备份片段列表<br>BP 关键字 BS 关键字 Pc# Cp# 状态 设备类型段名称</li></ul></blockquote><hr><p>1 1 1 1 AVAILABLE DISK /oracle/BACKUP/ITPUX_01LI7BSC_1_1.BAK<br>是否确定要删除以上对象 (输入 YES 或 NO)? yes<br>已删除备份片段<br>备份片段句柄=/oracle/BACKUP/ITPUX_01LI7BSC_1_1.BAK RECID=1 STAMP=723758988<br>1 对象已删除<br>在上面的这个示例中，我们删除了备份集和它关联的备份片。 也可以删除一些备份片。 通过 list backup命令我们可以看到备份片的名称，比如：段名:/oracle/BACKUP/ITPUX_01LI7BSC_1_1.BAK。<br>我们也可以查看备份片的号码，用catalog 用户连接数据库后，查看rc_backup_piece 表，SQL如下：<br>conn rman/rman<br>SQL&gt; select bs_key,bp_key,piece#,handle from rc_backup_piece;<br>BS_KEY BP_KEY PIECE# HANDLE</p><hr><p>52 55 1 /BACKUP/ORCL_02LI47UA_1_1<br>53 56 1 /BACKUP/ORCL_03LI47UF_1_1<br>75 82 1 /BACKUP/ORCL_04LI4816_1_1<br>删除备份片，我们可以用BP_KEY，也可以直接用段名（handle）,如：<br>RMAN&gt; change backuppiece ‘/oracle/BACKUP/ITPUX_02LI7BSK_1_1.BAK’ delete;<br>使用通道 ORA_DISK_1<br>备份片段列表<br>BP 关键字 BS 关键字 Pc# Cp# 状态 设备类型段名称</p><hr><p>2 2 1 1 AVAILABLE DISK /oracle/BACKUP/ITPUX_02LI7BSK_1_1.BAK<br>是否确定要删除以上对象 (输入 YES 或 NO)? yes<br>已删除备份片段<br>备份片段句柄=/oracle/BACKUP/ITPUX_02LI7BSK_1_1.BAK RECID=2<br>STAMP=723758997<br>1 对象已删除<br>使用备份集片，如：<br>change backuppiece 622 delete;<br>change archivelog until logseq=20 delete;<br>最后，可以使用change backuppiece uncataog命令从目录中删除备份集片。 如果删除最后剩余的备份集片，那么它也将删除备份集记录。如：<br>change backuppiece ‘/oracle/BACKUP/ITPUX_02LI7BSK_1_1.BAK’ uncatalog;</p><pre><code>### 4.8 delete 命令&gt;&amp;emsp;&amp;emsp;备份集不是永远存在的。我们可以使用保存策略标记备份有效性和生存期的结束。但是，备份策略的实施不会从RMAN目录中删除备份，而只是将这些备份标记为丢弃状态。&gt;&amp;emsp;&amp;emsp;delete 命令对备份和副本的影响很大。通过delete命令，可以删除基于保存标准被标记为丢弃的任何备份，还可以将恢复目录或控制文件中的备份从expired状态变为* deleted状态```sqldelete expired;delete obsolete;</code></pre><blockquote><p>&emsp;&emsp;执行delete命令时，RMAN会请求用户确认这个删除命令，如果确认了这个删除命令，RMAN 就会完成delete操作。<br>&emsp;&emsp;注意： 如果一个备份被标记为deleted 状态，就不能恢复这个备份。 如果该备份物理可用，我们仍然可以使用dbms_backup_restore过程来恢复这个备份。</p></blockquote><h3 id="4-9-restore命令"><a href="#4-9-restore命令" class="headerlink" title="4.9 restore命令"></a>4.9 restore命令</h3><blockquote><p>&emsp;&emsp;主要功能是从RMAN备份中还原文件，为恢复做准备。<br>使用restore 命令时，该命令会在没有认识提示的情况下重写已经存在的任何文件，除非使用set newname命令。<br><code>`</code>sql<br>set newname for datafile ‘/oracle/app/oradata/itpuxdb/itpux01.dbf’ to ‘E:/app/Administrator/oradata/orcl’;<br>restore database;</p></blockquote><p>restore controlfile from autobackup;<br>restore controlfile to ‘/backup/‘ from autobackup;<br>restore controlfile to ‘/backup’;<br>restore controlfile from autobackup until time “to_date(‘2016-6-27 13:25:00’,’yyyy-mm-dd hh24:mi:ss’)”;<br>restore controlfile from autobackup maxseq 200 maxdays 100;<br>restore spfile to pfile ‘/oracle/backup/spfile.restore’;<br>restore spfile to ‘/oracle/backup/spfile.restore’ from autobackup;<br>restore spfile from autobackup;<br>restore spfile from ‘/oracle/backup/c-1247395743-20160627-00’;<br>restore tablespace tablespace_name ;<br>restore datafile 5;<br>restore datafile ‘/oracle/app/oradata/itpuxdb/USERS01.DBF’;<br>restore database until time “to_date(‘2016-6-28 17:04:00’,’yyyy-mm-dd hh24:mi:ss’)”;<br>restore database until SCN 1000; –注意： 该示例可以将数据库还原到SCN 1000，但是不会包含SCN.<br>restore database until sequence 100 thread 1;</p><p>restore archivelog all;<br>restore archivelog from logseq=20 thread=1;<br>restore archivelog from logseq=20 until logseq=30 thread=1;</p><p>run<br>{<br>set archivelog destination to “d:/arch”;<br>restore archivelog all;<br>}</p><p>restore database check readonly;<br>restore (datafile 5) from datafilecopy</p><pre><code>### 4.10 recover命令&gt;&amp;emsp;&amp;emsp;recover 命令用于恢复数据库。该命令可以执行数据库的完全恢复或者时间点恢复。 Recover 命令确定需要哪些归档的重做日志，并且析取和应用他们。 一旦完成重做的应用，我们就只需要使用alter database open命令打开数据库即可。```sqlrecover databaserecover database noredo; -- 如果联机日志存在，可以用recover database代替recover tablespace tablespace_name ;recover datafile 3;recover datafile &#39;/oracle/app/oradata/itpuxdb/USERS01.DBF&#39;;set until time &quot;to_date(&#39;2016-07-05 14:02:00&#39;,&#39;yyyy-mm-dd hh24:mi:ss&#39;)&quot;;restore database;recover database;alter database open resetlogs;recover database until time &quot;to_date(&#39;2016-07-05 14:02:00&#39;,&#39;yyyy-mm-dd hh24:mi:ss&#39;)&quot;;recover database until SCN 1000;recover database until sequence 100 thread 1;</code></pre><h3 id="4-10-Switch-命令"><a href="#4-10-Switch-命令" class="headerlink" title="4.10 Switch 命令"></a>4.10 Switch 命令</h3><blockquote><p>Switch 命令可以修改数据库控制文件中数据文件的位置，以反映Oracle数据库文件新的位置。</p><pre class=" language-sql"><code class="language-sql">Switch datafile <span class="token keyword">all</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">-- 修改控制文件中数据文件位置</span></code></pre></blockquote><h3 id="4-10-blockrecover"><a href="#4-10-blockrecover" class="headerlink" title="4.10 blockrecover"></a>4.10 blockrecover</h3><blockquote><p>一般出现数据块错误时，都会有错误消息：<br>ORA-01578: ORACLE data block corrupted (file #18,block #88)<br>如果没有BMR时，我们必须从一个备份中恢复这个数据文件，在恢复过程中，用户不能使用该数据块文件中的所有数据。<br>用BMR恢复就很简单，只需要执行blockrecover命令即可：</p><pre class=" language-sql"><code class="language-sql">blockrecover datafile <span class="token number">1</span> block <span class="token number">88</span><span class="token punctuation">;</span></code></pre><p>如果有必要，可以同时恢复多个数据文件的多个数据块。如：</p><pre class=" language-sql"><code class="language-sql">blockrecover datafile <span class="token number">18</span> block <span class="token number">16</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">,</span><span class="token number">108</span><span class="token punctuation">;</span>blcokrecover datafile <span class="token number">18</span> block <span class="token number">88</span> datafile <span class="token number">19</span> blcok <span class="token number">188</span><span class="token punctuation">;</span></code></pre><p>&emsp;&emsp;查询v$database_block_corruption视图可以查看讹误数据块的详细信息。 如下所示，使用具有corruption list restore 参数的blockrecover命令可以方便地修正v$database_block_corruption 视图中的讹误数据块。<br>&emsp;&emsp;blockrecover corruption list restore until time ‘SYSDATE-5’;<br>这条命令将还原讹误列表中最近5天的所有讹误数据块。 在上面的命令中，还可以使用until time 和 until sequence.</p></blockquote><h3 id="4-10convert命令"><a href="#4-10convert命令" class="headerlink" title="4.10convert命令"></a>4.10convert命令</h3><blockquote><p>&emsp;&emsp; Oracle 10g R2以后支持手工跨平台移动数据库，即使这些平台具有不同的尾数格式（endian format）。 尾数格式与字节排序有关，它有两种不同的格式，即大尾数和小尾数。 如果在不同尾数字节格式的平台之间移动数据库，就需要手工操作，并且使用RMAN的convert datafile 或者 convert tablespace命令来将传送的数据文件转换为正确的尾数格式。</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">convert</span> <span class="token keyword">tablespace</span> ITPUX <span class="token keyword">to</span> platform<span class="token operator">=</span><span class="token string">'AIX-Based Systems (64-bit)'</span>db_file_name_convert<span class="token operator">=</span><span class="token string">'/oracle/app/oradata/itpux'</span><span class="token punctuation">,</span><span class="token string">'/oracle/itpux'</span><span class="token punctuation">;</span><span class="token keyword">convert</span> datafile <span class="token string">'/oracle/app/oradata/itpux/itpux01.DBF'</span> <span class="token keyword">from</span> platform<span class="token string">'AIX-Based Systems (64-bit)'</span> db_file_name_convert <span class="token string">'/oracle/app/oradata/itpux'</span><span class="token punctuation">,</span><span class="token string">'/oracle/app/itpux'</span><span class="token punctuation">;</span></code></pre></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Oracle-Rman-的备份-（基础）&quot;&gt;&lt;a href=&quot;#Oracle-Rman-的备份-（基础）&quot; class=&quot;headerlink&quot; title=&quot;Oracle Rman 的备份 （基础）&quot;&gt;&lt;/a&gt;Oracle Rman 的备份 （基础）&lt;/h1&gt;&lt;
      
    
    </summary>
    
      <category term="Oracle" scheme="https://kyle.github.io/categories/Oracle/"/>
    
    
      <category term="Oracle" scheme="https://kyle.github.io/tags/Oracle/"/>
    
      <category term="RMAN" scheme="https://kyle.github.io/tags/RMAN/"/>
    
  </entry>
  
  <entry>
    <title>Oracle DML日常操作和事务处理</title>
    <link href="https://kyle.github.io/2018/10/02/oracle/oracle-dml-ri-chang-cao-zuo-he-shi-wu-chu-li/"/>
    <id>https://kyle.github.io/2018/10/02/oracle/oracle-dml-ri-chang-cao-zuo-he-shi-wu-chu-li/</id>
    <published>2018-10-02T06:25:00.000Z</published>
    <updated>2019-05-03T15:46:28.937Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Oracle-DML日常操作和事务处理"><a href="#Oracle-DML日常操作和事务处理" class="headerlink" title="Oracle DML日常操作和事务处理"></a>Oracle DML日常操作和事务处理</h1><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p><a href="https://docs.oracle.com/cd/E11882_01/index.htm" target="_blank" rel="noopener">Oracle 11G R2 官方文档</a> </p><h2 id="1-使用INSERT-命令"><a href="#1-使用INSERT-命令" class="headerlink" title="1 使用INSERT 命令"></a>1 使用INSERT 命令</h2><h3 id="1-1-语法"><a href="#1-1-语法" class="headerlink" title="1.1 语法"></a>1.1 语法</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token operator">&lt;</span><span class="token keyword">TABLE</span><span class="token operator">></span> <span class="token punctuation">[</span><span class="token punctuation">(</span>colum<span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token keyword">column</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token keyword">values</span><span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token keyword">value</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> 表名<span class="token punctuation">(</span>列名列表<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span>值列表<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">table</span>： 指定表或视图<span class="token keyword">column</span>：指定列名，多列之间用<span class="token punctuation">,</span>分开<span class="token keyword">value</span>： 指定待插入的数据，多值之间依<span class="token punctuation">,</span>分开</code></pre><h3 id="1-2-基本使用"><a href="#1-2-基本使用" class="headerlink" title="1.2 基本使用"></a>1.2 基本使用</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">/* Formatted on 2018/2/12 14:59:34 (QP5 v5.313) */</span><span class="token comment" spellcheck="true">--1.insert 语句</span><span class="token comment" spellcheck="true">--1.1</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> sql02<span class="token punctuation">;</span>                     <span class="token comment" spellcheck="true">-- for update</span><span class="token comment" spellcheck="true">--1.2</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> sql03<span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> sql03 <span class="token punctuation">(</span>sql03_id1<span class="token punctuation">,</span> sql03_id2<span class="token punctuation">,</span> sql03_id3<span class="token punctuation">)</span>     <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token string">'sql03_11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">COMMIT</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--1.3</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> sql04<span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> sql04     <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>             <span class="token string">'11g sql04 01'</span><span class="token punctuation">,</span>             <span class="token string">'active'</span><span class="token punctuation">,</span>             <span class="token number">60</span><span class="token punctuation">,</span>             SYSDATE<span class="token punctuation">,</span>             <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> sql04     <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>             <span class="token string">'11g sql04 02'</span><span class="token punctuation">,</span>             <span class="token string">'active'</span><span class="token punctuation">,</span>             <span class="token number">100</span><span class="token punctuation">,</span>             SYSDATE<span class="token punctuation">,</span>             <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">COMMIT</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--1.4</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> sql03<span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> sql03     <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token operator">&amp;</span>sql03_id1<span class="token punctuation">,</span> <span class="token operator">&amp;</span>sql03_id2<span class="token punctuation">,</span> <span class="token operator">&amp;</span>sql03_id3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">COMMIT</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--1.5</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> sql05<span class="token keyword">AS</span>    <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> sql04<span class="token punctuation">;</span><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> sql05<span class="token punctuation">;</span><span class="token keyword">COMMIT</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> sql05<span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> sql05    <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> sql04<span class="token punctuation">;</span><span class="token keyword">COMMIT</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> sql05<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--1.6</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> sql04     <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span>             <span class="token string">'11g sql04 03'</span><span class="token punctuation">,</span>             <span class="token string">'active'</span><span class="token punctuation">,</span>             <span class="token number">160</span><span class="token punctuation">,</span>             SYSDATE<span class="token punctuation">,</span>             <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> sql04     <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span>             <span class="token string">'11g sql04 04'</span><span class="token punctuation">,</span>             <span class="token string">'active'</span><span class="token punctuation">,</span>             <span class="token number">220</span><span class="token punctuation">,</span>             SYSDATE<span class="token punctuation">,</span>             <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">COMMIT</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> sql04<span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> sql05    <span class="token keyword">SELECT</span> <span class="token operator">*</span>      <span class="token keyword">FROM</span> sql04     <span class="token keyword">WHERE</span> sql04_price <span class="token operator">></span> <span class="token number">200</span><span class="token punctuation">;</span><span class="token keyword">COMMIT</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> sql05<span class="token punctuation">;</span></code></pre><h2 id="2-使用UPDATE-命令"><a href="#2-使用UPDATE-命令" class="headerlink" title="2 使用UPDATE 命令"></a>2 使用UPDATE 命令</h2><h3 id="2-1-语法"><a href="#2-1-语法" class="headerlink" title="2.1 语法"></a>2.1 语法</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">UPDATE</span> 表名称<span class="token keyword">SET</span> 列名称<span class="token operator">=</span> 新值<span class="token operator">&lt;</span><span class="token keyword">WHERE</span> 条件<span class="token operator">></span></code></pre><h3 id="2-2-基本使用"><a href="#2-2-基本使用" class="headerlink" title="2.2 基本使用"></a>2.2 基本使用</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">/* Formatted on 2018/2/12 15:00:37 (QP5 v5.313) */</span><span class="token comment" spellcheck="true">--2.1</span><span class="token keyword">SELECT</span> <span class="token operator">*</span>  <span class="token keyword">FROM</span> sql02<span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--2.2</span><span class="token keyword">UPDATE</span> sql02   <span class="token keyword">SET</span> sql02_number <span class="token operator">=</span> <span class="token number">20002</span> <span class="token keyword">WHERE</span> sql02_id <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token keyword">UPDATE</span> sql02   <span class="token keyword">SET</span> sql02_status <span class="token operator">=</span> <span class="token string">'no'</span> <span class="token keyword">WHERE</span> sql02_id <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span>  <span class="token keyword">FROM</span> sql02 <span class="token keyword">commit</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--2.3</span><span class="token keyword">SELECT</span> <span class="token operator">*</span>  <span class="token keyword">FROM</span> sql02 <span class="token keyword">update</span> sql02 <span class="token keyword">set</span> sql02_id2<span class="token operator">=</span><span class="token number">222</span><span class="token punctuation">,</span>sql02_status<span class="token operator">=</span><span class="token string">'OK'</span> <span class="token keyword">where</span> sql02_id<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--2.4</span><span class="token keyword">SELECT</span> <span class="token operator">*</span>  <span class="token keyword">FROM</span> sql04 <span class="token keyword">update</span> sql04<span class="token keyword">set</span> <span class="token punctuation">(</span>sql04_desc<span class="token punctuation">,</span> sql04_count<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> sql04_desc<span class="token punctuation">,</span> sql04_count <span class="token keyword">from</span> sql04 <span class="token keyword">where</span> sql04_id <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">where</span> sql04_id <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token keyword">COMMIT</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> sql04</code></pre><h2 id="3-使用DELETE-命令"><a href="#3-使用DELETE-命令" class="headerlink" title="3 使用DELETE 命令"></a>3 使用DELETE 命令</h2><h3 id="3-1-语法"><a href="#3-1-语法" class="headerlink" title="3.1 语法"></a>3.1 语法</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> <span class="token operator">&lt;</span><span class="token keyword">table</span><span class="token operator">/</span><span class="token keyword">view</span><span class="token operator">></span> <span class="token punctuation">[</span><span class="token keyword">WHERE</span> <span class="token operator">&lt;</span>condition<span class="token operator">></span><span class="token punctuation">]</span></code></pre><h3 id="3-2-基本使用"><a href="#3-2-基本使用" class="headerlink" title="3.2 基本使用"></a>3.2 基本使用</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--3.1</span><span class="token keyword">SELECT</span> <span class="token operator">*</span>  <span class="token keyword">FROM</span> sql02<span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> sql02<span class="token comment" spellcheck="true">--3.2</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> sql04<span class="token keyword">delete</span> <span class="token keyword">from</span> sql04 <span class="token keyword">where</span> sql04_id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> sql04<span class="token comment" spellcheck="true">--3.3</span><span class="token keyword">delete</span> <span class="token keyword">from</span> sql04 <span class="token keyword">where</span> sql04_id<span class="token operator">=</span><span class="token number">2</span> <span class="token operator">and</span> sql04_id<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> sql04      <span class="token keyword">WHERE</span> sql04_id <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> sql04      <span class="token keyword">WHERE</span> sql04_price <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">'160'</span><span class="token punctuation">,</span> <span class="token string">'100'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> sql04<span class="token comment" spellcheck="true">--3.4</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> sql03<span class="token keyword">delete</span> <span class="token keyword">from</span> sql03<span class="token punctuation">;</span><span class="token keyword">COMMIT</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--truncate table</span></code></pre><h2 id="4-创建PL-SQL-对象"><a href="#4-创建PL-SQL-对象" class="headerlink" title="4 创建PL/SQL 对象"></a>4 创建PL/SQL 对象</h2><h3 id="4-1-语法"><a href="#4-1-语法" class="headerlink" title="4.1 语法"></a>4.1 语法</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">/* Formatted on 2018/2/12 15:01:26 (QP5 v5.313) */</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> yg<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--创建</span><span class="token keyword">CREATE</span> <span class="token operator">OR</span> REPLACE <span class="token keyword">PROCEDURE</span> yg_count<span class="token keyword">AS</span>    v_yg_count1   NUMBER <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    v_yg_count2   NUMBER <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">BEGIN</span>    <span class="token keyword">SELECT</span> <span class="token function">COUNT</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">INTO</span> v_yg_count1 <span class="token keyword">FROM</span> yg<span class="token punctuation">;</span>    <span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> yg          <span class="token keyword">WHERE</span> job_id <span class="token operator">=</span> <span class="token string">'SH_CLERK'</span><span class="token punctuation">;</span>    <span class="token keyword">SELECT</span> <span class="token function">COUNT</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">INTO</span> v_yg_count2 <span class="token keyword">FROM</span> yg<span class="token punctuation">;</span>    DBMS_OUTPUT<span class="token punctuation">.</span>put_line <span class="token punctuation">(</span><span class="token string">'离职前的员工数：'</span> <span class="token operator">||</span> v_yg_count1<span class="token punctuation">)</span><span class="token punctuation">;</span>    DBMS_OUTPUT<span class="token punctuation">.</span>put_line <span class="token punctuation">(</span><span class="token string">'离职后的员工数：'</span> <span class="token operator">||</span> v_yg_count2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">END</span><span class="token punctuation">;</span><span class="token operator">/</span><span class="token keyword">SET</span> SERVEROUTPUT <span class="token keyword">ON</span><span class="token punctuation">;</span><span class="token keyword">EXECUTE</span> yg_count<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--离职前的员工数：107</span><span class="token comment" spellcheck="true">--离职后的员工数：97</span><span class="token comment" spellcheck="true">--删除</span><span class="token keyword">DROP</span> <span class="token keyword">PROCEDURE</span> yg_count<span class="token punctuation">;</span></code></pre><h2 id="5-事务概念与控制"><a href="#5-事务概念与控制" class="headerlink" title="5 事务概念与控制"></a>5 事务概念与控制</h2><h3 id="5-1-事务说明"><a href="#5-1-事务说明" class="headerlink" title="5.1 事务说明"></a>5.1 事务说明</h3><pre class=" language-sql"><code class="language-sql">    事务是对数据库操作的逻辑单位，在一个事务中可以包含一条或多条DML （数据操纵语言）、DDL （数据定义语言）和DCL （数据控制语言）语句，这些语句组成一个逻辑整体。    事务的执行只有两种结果：要么全部执行，把数据库带入一个新的状态，要么全部不执行，对数据库不做任何修改。    一组SQL<span class="token punctuation">,</span>一个逻辑工作单位，执行时整体修改或者整体回退。</code></pre><h3 id="5-2-事务相关概念"><a href="#5-2-事务相关概念" class="headerlink" title="5.2 事务相关概念"></a>5.2 事务相关概念</h3><pre class=" language-sql"><code class="language-sql"><span class="token number">1</span>）事务的提交和回滚：<span class="token keyword">COMMIT</span><span class="token operator">/</span><span class="token keyword">ROLLBACK</span><span class="token number">2</span>）事务的开始和结束    开始事务：连接到数据库，执行DML、DCL、DDL 语句    结束事务：<span class="token number">1</span><span class="token punctuation">.</span> 执行DDL<span class="token punctuation">(</span>例如<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span><span class="token punctuation">)</span><span class="token punctuation">,</span>DCL<span class="token punctuation">(</span>例如<span class="token keyword">GRANT</span><span class="token punctuation">)</span><span class="token punctuation">,</span>系统自动执行<span class="token keyword">COMMIT</span> 语句<span class="token number">2</span><span class="token punctuation">.</span> 执行<span class="token keyword">COMMIT</span><span class="token operator">/</span><span class="token keyword">ROLLBACK</span><span class="token number">3</span><span class="token punctuation">.</span> 退出<span class="token operator">/</span>断开数据库的连接自动执行<span class="token keyword">COMMIT</span> 语句<span class="token number">4</span><span class="token punctuation">.</span> 进程意外终止，事务自动<span class="token keyword">rollback</span><span class="token number">5</span><span class="token punctuation">.</span> 事务<span class="token keyword">COMMIT</span> 时会生成一个唯一的系统变化号（SCN）保存到事务表<span class="token number">3</span>）保存点（<span class="token keyword">savepoint</span>）： 可以在事务的任何地方设置保存点，以便<span class="token keyword">ROLLBACK</span><span class="token number">4</span>）事务的四个特性ACID :    <span class="token number">1</span><span class="token punctuation">.</span> Atomicity（原子性）: 事务中sql 语句不可分割，要么都做，要么都不做    <span class="token number">2</span><span class="token punctuation">.</span> Consistency<span class="token punctuation">(</span>一致性<span class="token punctuation">)</span> ： 指事务操作前后，数据库中数据是一致的，数据满足业务规则约束（例如账户金额的转出和转入），与原子性对应。    <span class="token number">3</span><span class="token punctuation">.</span> Isolation（隔离性）：多个并发事务可以独立运行，而不能相互干扰，一个事务修改数据未提交前，其他事务看不到它所做的更改。    <span class="token number">4</span><span class="token punctuation">.</span> Durability（持久性）：事务提交后，数据的修改是永久的。<span class="token number">5</span>） 死锁：当两个事务相互等待对方释放资源时，就会形成死锁。</code></pre><h3 id="5-3-oracle-事务隔离级别"><a href="#5-3-oracle-事务隔离级别" class="headerlink" title="5.3 oracle 事务隔离级别"></a>5.3 oracle 事务隔离级别</h3><ul><li>1 .两个事务并发访问数据库数据时可能存在的问题</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token number">1</span><span class="token punctuation">.</span> 幻想读：    事务T1 读取一条指定<span class="token keyword">where</span> 条件的语句，返回结果集。此时事务T2 插入一行新记录并<span class="token keyword">commit</span>，恰好满足T1 的<span class="token keyword">where</span> 条件。然后T1 使用相同的条件再次查询，结果集中可以看到T2 插入的记录，这条新纪录就是幻想。<span class="token number">2</span><span class="token punctuation">.</span> 不可重复读取：    事务T1 读取一行记录，紧接着事务T2 修改了T1 刚刚读取的记录并<span class="token keyword">commit</span>，然后T1 再次查询，发现与第一次读取的记录不同，这称为不可重复读。<span class="token number">3</span><span class="token punctuation">.</span> 脏读：    事务T1 更新了一行记录，还未提交所做的修改，这个T2 读取了更新后的数据，然后T1 执行回滚操作，取消刚才的修改，所以T2 所读取的行就无效，也就是脏数据。</code></pre><ul><li>2.oracle 事务隔离级别</li></ul><pre class=" language-sql"><code class="language-sql">oracle 支持的隔离级别：（不支持脏读）<span class="token keyword">READ</span> <span class="token keyword">COMMITTED</span><span class="token comment" spellcheck="true">--不允许脏读，允许幻想读和不可重复读</span><span class="token keyword">SERIALIZABLE</span><span class="token comment" spellcheck="true">--以上三种都不允许</span>sql 标准还支持<span class="token keyword">READ</span> <span class="token keyword">UNCOMMITTED</span> <span class="token punctuation">(</span>三种都允许<span class="token punctuation">)</span>和<span class="token keyword">REPEATABLE</span> <span class="token keyword">READ</span>（不允许不可重复读和脏读，只允许幻想读）</code></pre><ul><li>3.事务相关语句</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SET</span> <span class="token keyword">TRANSACTION</span><span class="token comment" spellcheck="true">----设置事务属性</span><span class="token keyword">SET</span> <span class="token keyword">CONSTRAINT</span> <span class="token comment" spellcheck="true">-----设置约束</span><span class="token keyword">SAVEPOINT</span> <span class="token comment" spellcheck="true">------------建立存储点</span><span class="token keyword">RELEASE</span> <span class="token keyword">SAVEPOINT</span> <span class="token comment" spellcheck="true">--释放存储点</span><span class="token keyword">ROLLBACK</span><span class="token comment" spellcheck="true">---------------回滚</span><span class="token keyword">COMMIT</span><span class="token comment" spellcheck="true">------------------提交</span></code></pre><h2 id="6-锁的检测和锁争用"><a href="#6-锁的检测和锁争用" class="headerlink" title="6 锁的检测和锁争用"></a>6 锁的检测和锁争用</h2><h3 id="6-1-解决死锁冲突"><a href="#6-1-解决死锁冲突" class="headerlink" title="6.1 解决死锁冲突"></a>6.1 解决死锁冲突</h3><ul><li>1）执行commit 或者rollback 结束事务<br><code>`</code>sql</li></ul><pre><code>* 2）终止会话```sql在等待资源时执行，查找阻塞会话SELECT sid, serial#, username  FROM v$session WHERE sid IN (SELECT blocking_session FROM v$session);杀掉会话ALTER SYSTEM KILL SESSION &#39;111,222&#39;;关于查看锁的一些视图SELECT * FROM V$SESSION;                        --查看会话和锁的信息SELECT * FROM V$SESSION_WAIT;                             --查看等待的会话信息SELECT * FROM V$LOCK;                     --系统中所有锁SELECT * FROM V$LOCKED_OBJECT;                              --系统中DML 锁SELECT l.sid, s.SERIAL#, sq.sql_text  FROM v$lock l, v$session s, v$sql sq WHERE l.sid = s.sid AND s.sql_id = sq.sql_id AND s.status = &#39;ACTIVE&#39;alter system kill session &#39;139,1431&#39;</code></pre><h2 id="7-了解撤销数据UNDO"><a href="#7-了解撤销数据UNDO" class="headerlink" title="7 了解撤销数据UNDO"></a>7 了解撤销数据UNDO</h2><h3 id="7-1-查看近来数据库生成的撤销数据量"><a href="#7-1-查看近来数据库生成的撤销数据量" class="headerlink" title="7.1 查看近来数据库生成的撤销数据量"></a>7.1 查看近来数据库生成的撤销数据量</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">SESSION</span> <span class="token keyword">SET</span> nls_date_format <span class="token operator">=</span> <span class="token string">'dd-mm-yy hh24:mi:ss'</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> begin_time<span class="token punctuation">,</span>end_time<span class="token punctuation">,</span><span class="token punctuation">(</span>undoblks <span class="token operator">*</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token keyword">VALUE</span> <span class="token keyword">FROM</span> v$parameter <span class="token keyword">WHERE</span> NAME <span class="token operator">=</span> <span class="token string">'db_block_size'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>undo_bytes<span class="token keyword">FROM</span> v$undostat<span class="token punctuation">;</span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Oracle-DML日常操作和事务处理&quot;&gt;&lt;a href=&quot;#Oracle-DML日常操作和事务处理&quot; class=&quot;headerlink&quot; title=&quot;Oracle DML日常操作和事务处理&quot;&gt;&lt;/a&gt;Oracle DML日常操作和事务处理&lt;/h1&gt;&lt;h2 i
      
    
    </summary>
    
      <category term="Oracle" scheme="https://kyle.github.io/categories/Oracle/"/>
    
    
      <category term="Oracle" scheme="https://kyle.github.io/tags/Oracle/"/>
    
      <category term="SQL" scheme="https://kyle.github.io/tags/SQL/"/>
    
      <category term="DML" scheme="https://kyle.github.io/tags/DML/"/>
    
  </entry>
  
  <entry>
    <title>Oracle ASM数据库日常管理维护手册</title>
    <link href="https://kyle.github.io/2018/10/02/oracle/oracle-asm-shu-ju-ku-ri-chang-guan-li-wei-hu-shou-ce/"/>
    <id>https://kyle.github.io/2018/10/02/oracle/oracle-asm-shu-ju-ku-ri-chang-guan-li-wei-hu-shou-ce/</id>
    <published>2018-10-02T06:25:00.000Z</published>
    <updated>2019-05-03T15:52:00.578Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Oracle-ASM数据库日常管理维护"><a href="#Oracle-ASM数据库日常管理维护" class="headerlink" title="Oracle ASM数据库日常管理维护"></a>Oracle ASM数据库日常管理维护</h1><p>[Oracle 11G R2 官方文档][1]</p><h2 id="1-单机从ASM到文件系统"><a href="#1-单机从ASM到文件系统" class="headerlink" title="1.单机从ASM到文件系统"></a>1.单机从ASM到文件系统</h2><h3 id="1-1-前期准备"><a href="#1-1-前期准备" class="headerlink" title="1.1  前期准备"></a>1.1  前期准备</h3><ul><li>01.收集信息</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--1.查看数据文件</span><span class="token keyword">SELECT</span> name <span class="token keyword">FROM</span> v$datafile<span class="token punctuation">;</span><span class="token keyword">SELECT</span> file_name <span class="token keyword">FROM</span> dba_data_files<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--2.查看日志文件</span><span class="token keyword">SELECT</span> MEMBER <span class="token keyword">FROM</span> v$logfile<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--3.查看临时文件</span><span class="token keyword">SELECT</span> file_name <span class="token keyword">FROM</span> dba_temp_files<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--4.查看控制文件</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> v$controlfile<span class="token punctuation">;</span></code></pre><ul><li>02.备份数据库</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token number">1</span><span class="token punctuation">.</span>RMAN 备份<span class="token keyword">backup</span> tag racdb_full format <span class="token string">'/u01/backup/datafile/racdb_full_%s_%p_%t'</span> <span class="token punctuation">(</span><span class="token keyword">database</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">backup</span> tag racdb_ctrl format <span class="token string">'/u01/backup/datafile/racdb_ctrl_%s_%p_%t'</span> <span class="token punctuation">(</span><span class="token keyword">current</span> controlfile<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">backup</span> tag racdb_pfile format '<span class="token operator">/</span>u01<span class="token comment" spellcheck="true">//backup/datafile/racdb_spfile_%s_%p_%t' (spfile);</span><span class="token comment" spellcheck="true">--2.SQLPLUS</span><span class="token keyword">alter</span> <span class="token keyword">database</span> <span class="token keyword">backup</span> controlfile <span class="token keyword">to</span> <span class="token string">'/u01/backup/datafile/control.ctl'</span><span class="token punctuation">;</span> <span class="token keyword">alter</span> <span class="token keyword">database</span> <span class="token keyword">backup</span> controlfile <span class="token keyword">to</span> trace <span class="token keyword">as</span>  <span class="token string">'/u01/backup/datafile/control.trc'</span><span class="token punctuation">;</span></code></pre><ul><li>03.准备目录等环境</li></ul><pre class=" language-sql"><code class="language-sql"></code></pre><ul><li>04.开始迁移</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--1.控制文件</span> <span class="token keyword">alter</span> system <span class="token keyword">set</span> control_files<span class="token operator">=</span><span class="token string">'/oracle/oradata/racdb/control01.ctl'</span> scope<span class="token operator">=</span>spfile<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--2.参数文件</span><span class="token keyword">alter</span> system <span class="token keyword">set</span> db_create_file_dest<span class="token operator">=</span><span class="token string">'/oracle/oradata/racdb/'</span> scope<span class="token operator">=</span>spfile<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--3.归档日志</span><span class="token keyword">show</span> parameter recover；<span class="token keyword">alter</span> system <span class="token keyword">set</span> db_recovery_file_dest<span class="token operator">=</span><span class="token string">'/oracle/recovery'</span> scope<span class="token operator">=</span>spfile<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--4.将参数文件导出(需要手动删除ASM信息)</span><span class="token keyword">create</span> pfile<span class="token operator">=</span><span class="token string">'/oracle/racdbpfile.ora'</span> <span class="token keyword">from</span> spfile<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--5.关机后用新的PFILE启动数据库到NOMOUNT</span><span class="token keyword">shutdown</span> immediatestartup pfile<span class="token operator">=</span><span class="token string">'/oracle/racdbpfile.ora'</span> nomount<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--6.根据现在的PFILE生成SPFILE</span><span class="token keyword">create</span> spfile <span class="token keyword">from</span> pfile<span class="token operator">=</span><span class="token string">'/oracle/racdbpfile.ora'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--7.关闭数据库后用SPFILE启动数据库</span><span class="token keyword">shutdown</span> immediatestartup nomount<span class="token keyword">show</span> parameter spfile<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--8.RMAN恢复控制文件</span><span class="token keyword">restore</span> controlfile <span class="token keyword">from</span> <span class="token string">'+DG_DATA/RACDB/CONTROLFILE/Current.256.966890297'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--10.挂载数据库</span><span class="token keyword">alter</span> <span class="token keyword">database</span> mount<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--11.RMAN将数据文件从ASM到文件系统</span><span class="token keyword">backup</span> <span class="token keyword">as</span> copy <span class="token keyword">database</span> format <span class="token string">'/oracle/oradata/racdb/%U'</span><span class="token punctuation">;</span>switch <span class="token keyword">database</span> <span class="token keyword">to</span> copy<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--12.恢复数据库(不恢复)</span> recover <span class="token keyword">database</span> <span class="token keyword">using</span> <span class="token keyword">backup</span> controlfile until cancel<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--13.打开数据库</span><span class="token keyword">alter</span> <span class="token keyword">database</span> <span class="token keyword">open</span> resetlogs<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--14.处理临时文件（删掉再添加）</span><span class="token keyword">select</span> file_name <span class="token keyword">from</span> dba_temp_files<span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">database</span> tempfile <span class="token string">'+DG_DATA/racdb/tempfile/temp.263.966890331'</span> <span class="token keyword">drop</span> including datafiles<span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">tablespace</span> <span class="token keyword">temp</span> <span class="token keyword">add</span> tempfile <span class="token string">'/oracle/oradata/racdb/temp01.dbf'</span> size 100m autoextend <span class="token keyword">off</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--注意：如果临时文件删不掉可以重启数据库再删</span><span class="token comment" spellcheck="true">--15.处理日志</span><span class="token keyword">select</span> member <span class="token keyword">from</span> v$log<span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">database</span> <span class="token keyword">drop</span> logfile <span class="token keyword">group</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">database</span> <span class="token keyword">add</span> logfile <span class="token keyword">group</span> <span class="token number">2</span> <span class="token punctuation">(</span><span class="token string">'/oracle/oradata/racdb/redo01.log'</span><span class="token punctuation">)</span> size 100m<span class="token punctuation">;</span> <span class="token keyword">alter</span> system <span class="token keyword">checkpoint</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--注意:这个步骤再文件系统和ASM中相互转换</span><span class="token comment" spellcheck="true">--16.添加控制文件（重启后生效）</span><span class="token keyword">alter</span> system <span class="token keyword">set</span> control_files<span class="token operator">=</span><span class="token string">'/oracle/oradata/racdb/control01.ctl'</span><span class="token punctuation">,</span><span class="token string">'/oracle/recovery/racdb/control02.ctl'</span>scope<span class="token operator">=</span>spfile<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--17.修改数据文件名字</span>mv data_D<span class="token operator">-</span>RACDB_I<span class="token operator">-</span>964507061_TS<span class="token operator">-</span>SYSTEM_FNO<span class="token operator">-</span>1_0ksq4vvu    SYSTEM01<span class="token number">.dbf</span>mv data_D<span class="token operator">-</span>RACDB_I<span class="token operator">-</span>964507061_TS<span class="token operator">-</span>SYSAUX_FNO<span class="token operator">-</span>2_0lsq5012    SYSAUX01<span class="token number">.dbf</span>mv data_D<span class="token operator">-</span>RACDB_I<span class="token operator">-</span>964507061_TS<span class="token operator">-</span>UNDOTBS1_FNO<span class="token operator">-</span>3_0jsq4vur    UNDOTBS01<span class="token number">.dbf</span>mv data_D<span class="token operator">-</span>RACDB_I<span class="token operator">-</span>964507061_TS<span class="token operator">-</span>USERS_FNO<span class="token operator">-</span>4_0msq501r    USERS01<span class="token number">.dbf</span><span class="token keyword">alter</span> <span class="token keyword">database</span> <span class="token keyword">rename</span> <span class="token keyword">file</span> <span class="token string">'/oracle/oradata/racdb/data_D-RACDB_I-964507061_TS-SYSTEM_FNO-1_0ksq4vvu'</span> <span class="token keyword">to</span> <span class="token string">'/oracle/oradata/racdb/SYSTEM01.dbf'</span><span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">database</span> <span class="token keyword">rename</span> <span class="token keyword">file</span> <span class="token string">'/oracle/oradata/racdb/data_D-RACDB_I-964507061_TS-SYSAUX_FNO-2_0lsq5012'</span> <span class="token keyword">to</span> <span class="token string">'/oracle/oradata/racdb/SYSAUX01.dbf'</span><span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">database</span> <span class="token keyword">rename</span> <span class="token keyword">file</span> <span class="token string">'/oracle/oradata/racdb/data_D-RACDB_I-964507061_TS-UNDOTBS1_FNO-3_0jsq4vur'</span> <span class="token keyword">to</span> <span class="token string">'/oracle/oradata/racdb/UNDOTBS01.dbf'</span><span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">database</span> <span class="token keyword">rename</span> <span class="token keyword">file</span> <span class="token string">'/oracle/oradata/racdb/data_D-RACDB_I-964507061_TS-USERS_FNO-4_0msq501r'</span> <span class="token keyword">to</span> <span class="token string">'/oracle/oradata/racdb/USERS01.dbf'</span><span class="token punctuation">;</span></code></pre><ul><li>转换前文件目录</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> name <span class="token keyword">FROM</span> v$datafile<span class="token punctuation">;</span><span class="token keyword">SELECT</span> file_name <span class="token keyword">FROM</span> dba_data_files<span class="token punctuation">;</span><span class="token operator">+</span>DG_DATA<span class="token operator">/</span>racdb<span class="token operator">/</span>datafile<span class="token operator">/</span>system<span class="token number">.260</span><span class="token punctuation">.</span><span class="token number">966890307</span><span class="token operator">+</span>DG_DATA<span class="token operator">/</span>racdb<span class="token operator">/</span>datafile<span class="token operator">/</span>sysaux<span class="token number">.261</span><span class="token punctuation">.</span><span class="token number">966890319</span><span class="token operator">+</span>DG_DATA<span class="token operator">/</span>racdb<span class="token operator">/</span>datafile<span class="token operator">/</span>undotbs1<span class="token number">.262</span><span class="token punctuation">.</span><span class="token number">966890327</span><span class="token operator">+</span>DG_DATA<span class="token operator">/</span>racdb<span class="token operator">/</span>datafile<span class="token operator">/</span>users<span class="token number">.264</span><span class="token punctuation">.</span><span class="token number">966890339</span><span class="token keyword">SELECT</span> MEMBER <span class="token keyword">FROM</span> v$logfile<span class="token punctuation">;</span><span class="token operator">+</span>DG_DATA<span class="token operator">/</span>racdb<span class="token operator">/</span>onlinelog<span class="token operator">/</span>group_1<span class="token number">.257</span><span class="token punctuation">.</span><span class="token number">966890301</span><span class="token operator">+</span>DG_BACKUP<span class="token operator">/</span>racdb<span class="token operator">/</span>onlinelog<span class="token operator">/</span>group_1<span class="token number">.257</span><span class="token punctuation">.</span><span class="token number">966890301</span><span class="token operator">+</span>DG_DATA<span class="token operator">/</span>racdb<span class="token operator">/</span>onlinelog<span class="token operator">/</span>group_2<span class="token number">.258</span><span class="token punctuation">.</span><span class="token number">966890303</span><span class="token operator">+</span>DG_BACKUP<span class="token operator">/</span>racdb<span class="token operator">/</span>onlinelog<span class="token operator">/</span>group_2<span class="token number">.258</span><span class="token punctuation">.</span><span class="token number">966890303</span><span class="token operator">+</span>DG_DATA<span class="token operator">/</span>racdb<span class="token operator">/</span>onlinelog<span class="token operator">/</span>group_3<span class="token number">.259</span><span class="token punctuation">.</span><span class="token number">966890305</span><span class="token operator">+</span>DG_BACKUP<span class="token operator">/</span>racdb<span class="token operator">/</span>onlinelog<span class="token operator">/</span>group_3<span class="token number">.259</span><span class="token punctuation">.</span><span class="token number">966890305</span><span class="token keyword">SELECT</span> file_name <span class="token keyword">FROM</span> dba_temp_files<span class="token punctuation">;</span><span class="token operator">+</span>DG_DATA<span class="token operator">/</span>racdb<span class="token operator">/</span>tempfile<span class="token operator">/</span><span class="token keyword">temp</span><span class="token punctuation">.</span><span class="token number">263.966890331</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> v$controlfile<span class="token punctuation">;</span>        <span class="token operator">+</span>DG_DATA<span class="token operator">/</span>racdb<span class="token operator">/</span>controlfile<span class="token operator">/</span>cur <span class="token keyword">NO</span>       <span class="token number">16384</span>           <span class="token number">2924</span>        rent<span class="token number">.256</span><span class="token punctuation">.</span><span class="token number">966890297</span>        <span class="token operator">+</span>DG_BACKUP<span class="token operator">/</span>racdb<span class="token operator">/</span>controlfile<span class="token operator">/</span><span class="token number">c</span> YES      <span class="token number">16384</span>           <span class="token number">2924</span>        urrent<span class="token number">.256</span><span class="token punctuation">.</span><span class="token number">966890299</span></code></pre><ul><li>转换后文件目录</li></ul><p>![数据文件][2]</p><p>![日志文件][3]</p><p>![临时文件][4]</p><p>![控制文件][5]</p><h2 id="2-单机从ASM到文件系统"><a href="#2-单机从ASM到文件系统" class="headerlink" title="2.单机从ASM到文件系统"></a>2.单机从ASM到文件系统</h2><ul><li>步骤</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token number">1</span><span class="token punctuation">.</span>利用PFILE和SPFILE将一个包含控制文件文字的SPFILE存到ASM<span class="token number">2</span><span class="token punctuation">.</span>RMAN将备份的控制文件恢复到指定目录<span class="token number">3</span><span class="token punctuation">.</span>恢复数据文件<span class="token number">4</span><span class="token punctuation">.</span>处理日志文件</code></pre><ul><li>操作</li></ul><pre class=" language-sql"><code class="language-sql">SQL<span class="token operator">></span>  <span class="token keyword">alter</span> system <span class="token keyword">set</span> control_files<span class="token operator">=</span><span class="token string">'+DG_DATA'</span> scope<span class="token operator">=</span>spfile<span class="token punctuation">;</span>System altered<span class="token punctuation">.</span>SQL<span class="token operator">></span> <span class="token keyword">alter</span> system <span class="token keyword">set</span> db_create_file_dest<span class="token operator">=</span><span class="token string">'+DG_DATA/'</span> scope<span class="token operator">=</span>spfile<span class="token punctuation">;</span>System altered<span class="token punctuation">.</span>SQL<span class="token operator">></span> <span class="token keyword">alter</span> system <span class="token keyword">set</span> db_recovery_file_dest<span class="token operator">=</span><span class="token string">'+DG_BACKUP'</span> scope<span class="token operator">=</span>spfile<span class="token punctuation">;</span>System altered<span class="token punctuation">.</span>SQL<span class="token operator">></span> <span class="token keyword">alter</span> system <span class="token keyword">set</span> control_files<span class="token operator">=</span><span class="token string">'+DG_DATA/racdb/control01.ctl'</span> scope<span class="token operator">=</span>spfile<span class="token punctuation">;</span>System altered<span class="token punctuation">.</span>SQL<span class="token operator">></span> <span class="token keyword">create</span> pfile <span class="token string">'/oracle/racdbpfile.ora'</span> <span class="token keyword">from</span> spfile<span class="token punctuation">;</span><span class="token keyword">create</span> pfile <span class="token string">'/oracle/racdbpfile.ora'</span> <span class="token keyword">from</span> spfile             <span class="token operator">*</span>ERROR at line <span class="token number">1</span>:ORA<span class="token number">-00923</span>: <span class="token keyword">FROM</span> keyword <span class="token operator">not</span> found <span class="token keyword">where</span> expectedSQL<span class="token operator">></span> <span class="token keyword">create</span> pfile<span class="token operator">=</span><span class="token string">'/oracle/racdbpfile.ora'</span> <span class="token keyword">from</span> spfile<span class="token punctuation">;</span><span class="token keyword">File</span> created<span class="token punctuation">.</span>SQL<span class="token operator">></span> <span class="token keyword">shutdown</span> immediate<span class="token punctuation">;</span><span class="token keyword">Database</span> closed<span class="token punctuation">.</span><span class="token keyword">Database</span> dismounted<span class="token punctuation">.</span>ORACLE instance shut down<span class="token punctuation">.</span>SQL<span class="token operator">></span> SQL<span class="token operator">></span> startup pfile<span class="token operator">=</span><span class="token string">'/oracle/racdbpfile.ora'</span> nomount<span class="token punctuation">;</span>ORACLE instance started<span class="token punctuation">.</span>Total System <span class="token keyword">Global</span> Area <span class="token number">1043886080</span> bytes<span class="token keyword">Fixed</span> Size                  <span class="token number">2259840</span> bytesVariable Size             <span class="token number">335545472</span> bytes<span class="token keyword">Database</span> Buffers          <span class="token number">700448768</span> bytesRedo Buffers                <span class="token number">5632000</span> bytesSQL<span class="token operator">></span> <span class="token keyword">create</span> spfile <span class="token keyword">from</span> pfile<span class="token operator">=</span><span class="token string">'/oracle/racdbpfile.ora'</span><span class="token punctuation">;</span><span class="token keyword">File</span> created<span class="token punctuation">.</span>SQL<span class="token operator">></span> <span class="token keyword">create</span> spfile<span class="token operator">=</span><span class="token string">'+DG_DATA/racdb/spfileracdb.ora'</span> <span class="token keyword">from</span> pfile<span class="token operator">=</span><span class="token string">'/oralce/racdbpfile.ora'</span>  <span class="token number">2</span>  <span class="token punctuation">;</span><span class="token keyword">create</span> spfile<span class="token operator">=</span><span class="token string">'+DG_DATA/racdb/spfileracdb.ora'</span> <span class="token keyword">from</span> pfile<span class="token operator">=</span><span class="token string">'/oralce/racdbpfile.ora'</span><span class="token operator">*</span>ERROR at line <span class="token number">1</span>:ORA<span class="token number">-01078</span>: failure <span class="token operator">in</span> processing system parametersLRM<span class="token number">-00109</span>: could <span class="token operator">not</span> <span class="token keyword">open</span> parameter <span class="token keyword">file</span> <span class="token string">'/oralce/racdbpfile.ora'</span>SQL<span class="token operator">></span> <span class="token keyword">create</span> spfile<span class="token operator">=</span><span class="token string">'+DG_DATA/racdb/spfileracdb.ora'</span> <span class="token keyword">from</span> pfile<span class="token operator">=</span><span class="token string">'/oralce/racdbpfile.ora'</span>  <span class="token number">2</span>  <span class="token punctuation">;</span><span class="token keyword">create</span> spfile<span class="token operator">=</span><span class="token string">'+DG_DATA/racdb/spfileracdb.ora'</span> <span class="token keyword">from</span> pfile<span class="token operator">=</span><span class="token string">'/oralce/racdbpfile.ora'</span><span class="token operator">*</span>ERROR at line <span class="token number">1</span>:ORA<span class="token number">-01078</span>: failure <span class="token operator">in</span> processing system parametersLRM<span class="token number">-00109</span>: could <span class="token operator">not</span> <span class="token keyword">open</span> parameter <span class="token keyword">file</span> <span class="token string">'/oralce/racdbpfile.ora'</span>SQL<span class="token operator">></span> <span class="token keyword">create</span> spfile<span class="token operator">=</span><span class="token string">'+DG_DATA/racdb/spfileracdb.ora'</span> <span class="token keyword">from</span> pfile<span class="token operator">=</span><span class="token string">'/oracle/racdbpfile.ora'</span><span class="token punctuation">;</span><span class="token keyword">File</span> created<span class="token punctuation">.</span>SQL<span class="token operator">></span> <span class="token keyword">shutdown</span> immediate<span class="token punctuation">;</span>ORA<span class="token number">-01507</span>: <span class="token keyword">database</span> <span class="token operator">not</span> mountedORACLE instance shut down<span class="token punctuation">.</span>SQL<span class="token operator">></span> startup nomount<span class="token punctuation">;</span>ORACLE instance started<span class="token punctuation">.</span>Total System <span class="token keyword">Global</span> Area <span class="token number">1043886080</span> bytes<span class="token keyword">Fixed</span> Size                  <span class="token number">2259840</span> bytesVariable Size             <span class="token number">335545472</span> bytes<span class="token keyword">Database</span> Buffers          <span class="token number">700448768</span> bytesRedo Buffers                <span class="token number">5632000</span> bytesSQL<span class="token operator">></span> <span class="token keyword">show</span> parameter spfileSQL<span class="token operator">></span> <span class="token keyword">show</span> parameter controlNAME                                 <span class="token keyword">TYPE</span>                   <span class="token keyword">VALUE</span><span class="token comment" spellcheck="true">------------------------------------ ---------------------- ------------------------------</span>control_file_record_keep_time        <span class="token keyword">integer</span>                <span class="token number">7</span>control_files                        string                 <span class="token operator">+</span>DG_DATA<span class="token operator">/</span>racdb<span class="token operator">/</span>control01<span class="token punctuation">.</span>ctlcontrol_management_pack_access       string                 DIAGNOSTIC<span class="token operator">+</span>TUNING<span class="token punctuation">[</span>oracle<span class="token variable">@rac1</span>:<span class="token operator">/</span><span class="token punctuation">]</span>$rman target <span class="token operator">/</span>Recovery Manager: <span class="token keyword">Release</span> <span class="token number">11.2</span><span class="token punctuation">.</span><span class="token number">0.4</span><span class="token punctuation">.</span><span class="token number">0</span> <span class="token operator">-</span> Production <span class="token keyword">on</span> Thu Feb <span class="token number">1</span> <span class="token number">15</span>:<span class="token number">37</span>:<span class="token number">25</span> <span class="token number">2018</span>Copyright <span class="token punctuation">(</span><span class="token number">c</span><span class="token punctuation">)</span> <span class="token number">1982</span><span class="token punctuation">,</span> <span class="token number">2011</span><span class="token punctuation">,</span> Oracle <span class="token operator">and</span><span class="token operator">/</span><span class="token operator">or</span> its affiliates<span class="token punctuation">.</span>  <span class="token keyword">All</span> rights reserved<span class="token punctuation">.</span>connected <span class="token keyword">to</span> target <span class="token keyword">database</span>: RACDB <span class="token punctuation">(</span><span class="token operator">not</span> mounted<span class="token punctuation">)</span>RMAN<span class="token operator">></span> <span class="token keyword">restore</span> controlfile <span class="token keyword">from</span> <span class="token string">'/u01/backup/datafile/racdb_ctrl_32_1_966957454'</span><span class="token punctuation">;</span>Starting <span class="token keyword">restore</span> at <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">15</span>:<span class="token number">37</span>:<span class="token number">57</span><span class="token keyword">using</span> target <span class="token keyword">database</span> control <span class="token keyword">file</span> instead <span class="token keyword">of</span> recovery catalogallocated channel: ORA_DISK_1channel ORA_DISK_1: SID<span class="token operator">=</span><span class="token number">10</span> device <span class="token keyword">type</span><span class="token operator">=</span><span class="token keyword">DISK</span>channel ORA_DISK_1: restoring control <span class="token keyword">file</span>channel ORA_DISK_1: <span class="token keyword">restore</span> complete<span class="token punctuation">,</span> elapsed time: <span class="token number">00</span>:<span class="token number">00</span>:<span class="token number">03</span>output <span class="token keyword">file</span> name<span class="token operator">=</span><span class="token operator">+</span>DG_DATA<span class="token operator">/</span>racdb<span class="token operator">/</span>control01<span class="token punctuation">.</span>ctlFinished <span class="token keyword">restore</span> at <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">15</span>:<span class="token number">38</span>:<span class="token number">01</span>SQL<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">database</span> mount<span class="token punctuation">;</span><span class="token keyword">Database</span> altered<span class="token punctuation">.</span>RMAN<span class="token operator">></span> list <span class="token keyword">backup</span><span class="token punctuation">;</span>released channel: ORA_DISK_1List <span class="token keyword">of</span> <span class="token keyword">Backup</span> Sets<span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span>BS <span class="token keyword">Key</span>  <span class="token keyword">Type</span> LV Size       Device <span class="token keyword">Type</span> Elapsed Time Completion Time    <span class="token comment" spellcheck="true">------- ---- -- ---------- ----------- ------------ -------------------</span><span class="token number">24</span>      <span class="token keyword">Full</span>    <span class="token number">1</span><span class="token punctuation">.</span>05G      <span class="token keyword">DISK</span>        <span class="token number">00</span>:<span class="token number">00</span>:<span class="token number">15</span>     <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">15</span>:<span class="token number">17</span>:<span class="token number">28</span>        BP <span class="token keyword">Key</span>: <span class="token number">24</span>   <span class="token keyword">Status</span>: AVAILABLE  Compressed: <span class="token keyword">NO</span>  Tag: RACDB_FULL        Piece Name: <span class="token operator">/</span>u01<span class="token operator">/</span><span class="token keyword">backup</span><span class="token operator">/</span>datafile<span class="token operator">/</span>racdb_full_30_1_966957433  List <span class="token keyword">of</span> Datafiles <span class="token operator">in</span> <span class="token keyword">backup</span> <span class="token keyword">set</span> <span class="token number">24</span>  <span class="token keyword">File</span> LV <span class="token keyword">Type</span> Ckp SCN    Ckp Time            Name  <span class="token comment" spellcheck="true">---- -- ---- ---------- ------------------- ----</span>  <span class="token number">1</span>       <span class="token keyword">Full</span> <span class="token number">874708</span>     <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">15</span>:<span class="token number">17</span>:<span class="token number">14</span> <span class="token operator">/</span>oracle<span class="token operator">/</span>oradata<span class="token operator">/</span>racdb<span class="token operator">/</span>SYSTEM01<span class="token number">.dbf</span>  <span class="token number">2</span>       <span class="token keyword">Full</span> <span class="token number">874708</span>     <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">15</span>:<span class="token number">17</span>:<span class="token number">14</span> <span class="token operator">/</span>oracle<span class="token operator">/</span>oradata<span class="token operator">/</span>racdb<span class="token operator">/</span>SYSAUX01<span class="token number">.dbf</span>  <span class="token number">3</span>       <span class="token keyword">Full</span> <span class="token number">874708</span>     <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">15</span>:<span class="token number">17</span>:<span class="token number">14</span> <span class="token operator">/</span>oracle<span class="token operator">/</span>oradata<span class="token operator">/</span>racdb<span class="token operator">/</span>UNDOTBS01<span class="token number">.dbf</span>  <span class="token number">4</span>       <span class="token keyword">Full</span> <span class="token number">874708</span>     <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">15</span>:<span class="token number">17</span>:<span class="token number">14</span> <span class="token operator">/</span>oracle<span class="token operator">/</span>oradata<span class="token operator">/</span>racdb<span class="token operator">/</span>USERS01<span class="token number">.dbf</span>BS <span class="token keyword">Key</span>  <span class="token keyword">Type</span> LV Size       Device <span class="token keyword">Type</span> Elapsed Time Completion Time    <span class="token comment" spellcheck="true">------- ---- -- ---------- ----------- ------------ -------------------</span><span class="token number">25</span>      <span class="token keyword">Full</span>    <span class="token number">46</span><span class="token punctuation">.</span>05M     <span class="token keyword">DISK</span>        <span class="token number">00</span>:<span class="token number">00</span>:<span class="token number">01</span>     <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">15</span>:<span class="token number">17</span>:<span class="token number">30</span>        BP <span class="token keyword">Key</span>: <span class="token number">25</span>   <span class="token keyword">Status</span>: AVAILABLE  Compressed: <span class="token keyword">NO</span>  Tag: TAG20180201T151729        Piece Name: <span class="token operator">+</span>DG_BACKUP<span class="token operator">/</span>racdb<span class="token operator">/</span>autobackup<span class="token operator">/</span>2018_02_01<span class="token operator">/</span>s_966957449<span class="token number">.256</span><span class="token punctuation">.</span><span class="token number">966957449</span>  SPFILE Included: Modification time: <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">14</span>:<span class="token number">40</span>:<span class="token number">33</span>  SPFILE db_unique_name: RACDB  Control <span class="token keyword">File</span> Included: Ckp SCN: <span class="token number">874719</span>       Ckp time: <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">15</span>:<span class="token number">17</span>:<span class="token number">29</span>  List <span class="token keyword">of</span> Permanent Datafiles<span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token keyword">File</span> Size<span class="token punctuation">(</span>MB<span class="token punctuation">)</span> <span class="token keyword">Tablespace</span>           RB segs Datafile Name<span class="token comment" spellcheck="true">---- -------- -------------------- ------- ------------------------</span><span class="token number">1</span>    <span class="token number">750</span>      SYSTEM               <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>     <span class="token operator">/</span>oracle<span class="token operator">/</span>oradata<span class="token operator">/</span>racdb<span class="token operator">/</span>SYSTEM01<span class="token number">.dbf</span><span class="token number">2</span>    <span class="token number">600</span>      SYSAUX               <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>     <span class="token operator">/</span>oracle<span class="token operator">/</span>oradata<span class="token operator">/</span>racdb<span class="token operator">/</span>SYSAUX01<span class="token number">.dbf</span><span class="token number">3</span>    <span class="token number">885</span>      UNDOTBS1             <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>     <span class="token operator">/</span>oracle<span class="token operator">/</span>oradata<span class="token operator">/</span>racdb<span class="token operator">/</span>UNDOTBS01<span class="token number">.dbf</span><span class="token number">4</span>    <span class="token number">5</span>        USERS                <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>     <span class="token operator">/</span>oracle<span class="token operator">/</span>oradata<span class="token operator">/</span>racdb<span class="token operator">/</span>USERS01<span class="token number">.dbf</span>List <span class="token keyword">of</span> <span class="token keyword">Temporary</span> Files<span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">=</span><span class="token keyword">File</span> Size<span class="token punctuation">(</span>MB<span class="token punctuation">)</span> <span class="token keyword">Tablespace</span>           Maxsize<span class="token punctuation">(</span>MB<span class="token punctuation">)</span> Tempfile Name<span class="token comment" spellcheck="true">---- -------- -------------------- ----------- --------------------</span><span class="token number">1</span>    <span class="token number">100</span>      <span class="token keyword">TEMP</span>                 <span class="token number">100</span>         <span class="token operator">/</span>oracle<span class="token operator">/</span>oradata<span class="token operator">/</span>racdb<span class="token operator">/</span>temp01<span class="token number">.dbf</span>RMAN<span class="token operator">></span> run{<span class="token number">2</span><span class="token operator">></span> <span class="token keyword">set</span> newname <span class="token keyword">for</span> datafile <span class="token number">1</span> <span class="token keyword">to</span> <span class="token string">"+DG_DATA"</span><span class="token punctuation">;</span><span class="token number">3</span><span class="token operator">></span> <span class="token keyword">set</span> newname <span class="token keyword">for</span> datafile <span class="token number">2</span> <span class="token keyword">to</span> <span class="token string">"+DG_DATA"</span><span class="token punctuation">;</span><span class="token number">4</span><span class="token operator">></span> <span class="token keyword">set</span> newname <span class="token keyword">for</span> datafile <span class="token number">3</span> <span class="token keyword">to</span> <span class="token string">"+DG_DATA"</span><span class="token punctuation">;</span><span class="token number">5</span><span class="token operator">></span> <span class="token keyword">set</span> newname <span class="token keyword">for</span> datafile <span class="token number">4</span> <span class="token keyword">to</span> <span class="token string">"+DG_DATA"</span><span class="token punctuation">;</span><span class="token number">6</span><span class="token operator">></span> <span class="token keyword">set</span> newname <span class="token keyword">for</span> tempfile <span class="token number">1</span> <span class="token keyword">to</span> <span class="token string">"+DG_DATA"</span><span class="token punctuation">;</span><span class="token number">7</span><span class="token operator">></span> <span class="token keyword">restore</span> <span class="token keyword">database</span><span class="token punctuation">;</span><span class="token number">8</span><span class="token operator">></span> switch datafile <span class="token keyword">all</span><span class="token punctuation">;</span><span class="token number">9</span><span class="token operator">></span> recover <span class="token keyword">database</span><span class="token punctuation">;</span><span class="token number">10</span><span class="token operator">></span> }executing command: <span class="token keyword">SET</span> NEWNAMEexecuting command: <span class="token keyword">SET</span> NEWNAMEexecuting command: <span class="token keyword">SET</span> NEWNAMEexecuting command: <span class="token keyword">SET</span> NEWNAMEexecuting command: <span class="token keyword">SET</span> NEWNAMEStarting <span class="token keyword">restore</span> at <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">15</span>:<span class="token number">44</span>:<span class="token number">20</span><span class="token keyword">using</span> channel ORA_DISK_1channel ORA_DISK_1: starting datafile <span class="token keyword">backup</span> <span class="token keyword">set</span> <span class="token keyword">restore</span>channel ORA_DISK_1: specifying datafile<span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token keyword">to</span> <span class="token keyword">restore</span> <span class="token keyword">from</span> <span class="token keyword">backup</span> <span class="token keyword">set</span>channel ORA_DISK_1: restoring datafile <span class="token number">00001</span> <span class="token keyword">to</span> <span class="token operator">+</span>DG_DATAchannel ORA_DISK_1: restoring datafile <span class="token number">00002</span> <span class="token keyword">to</span> <span class="token operator">+</span>DG_DATAchannel ORA_DISK_1: restoring datafile <span class="token number">00003</span> <span class="token keyword">to</span> <span class="token operator">+</span>DG_DATAchannel ORA_DISK_1: restoring datafile <span class="token number">00004</span> <span class="token keyword">to</span> <span class="token operator">+</span>DG_DATAchannel ORA_DISK_1: reading <span class="token keyword">from</span> <span class="token keyword">backup</span> piece <span class="token operator">/</span>u01<span class="token operator">/</span><span class="token keyword">backup</span><span class="token operator">/</span>datafile<span class="token operator">/</span>racdb_full_30_1_966957433channel ORA_DISK_1: piece handle<span class="token operator">=</span><span class="token operator">/</span>u01<span class="token operator">/</span><span class="token keyword">backup</span><span class="token operator">/</span>datafile<span class="token operator">/</span>racdb_full_30_1_966957433 tag<span class="token operator">=</span>RACDB_FULLchannel ORA_DISK_1: restored <span class="token keyword">backup</span> piece <span class="token number">1</span>channel ORA_DISK_1: <span class="token keyword">restore</span> complete<span class="token punctuation">,</span> elapsed time: <span class="token number">00</span>:<span class="token number">00</span>:<span class="token number">45</span>Finished <span class="token keyword">restore</span> at <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">15</span>:<span class="token number">45</span>:<span class="token number">05</span>datafile <span class="token number">1</span> switched <span class="token keyword">to</span> datafile copyinput datafile copy RECID<span class="token operator">=</span><span class="token number">15</span> STAMP<span class="token operator">=</span><span class="token number">966959106</span> <span class="token keyword">file</span> name<span class="token operator">=</span><span class="token operator">+</span>DG_DATA<span class="token operator">/</span>racdb<span class="token operator">/</span>datafile<span class="token operator">/</span>system<span class="token number">.261</span><span class="token punctuation">.</span><span class="token number">966959061</span>datafile <span class="token number">2</span> switched <span class="token keyword">to</span> datafile copyinput datafile copy RECID<span class="token operator">=</span><span class="token number">16</span> STAMP<span class="token operator">=</span><span class="token number">966959106</span> <span class="token keyword">file</span> name<span class="token operator">=</span><span class="token operator">+</span>DG_DATA<span class="token operator">/</span>racdb<span class="token operator">/</span>datafile<span class="token operator">/</span>sysaux<span class="token number">.260</span><span class="token punctuation">.</span><span class="token number">966959061</span>datafile <span class="token number">3</span> switched <span class="token keyword">to</span> datafile copyinput datafile copy RECID<span class="token operator">=</span><span class="token number">17</span> STAMP<span class="token operator">=</span><span class="token number">966959106</span> <span class="token keyword">file</span> name<span class="token operator">=</span><span class="token operator">+</span>DG_DATA<span class="token operator">/</span>racdb<span class="token operator">/</span>datafile<span class="token operator">/</span>undotbs1<span class="token number">.262</span><span class="token punctuation">.</span><span class="token number">966959061</span>datafile <span class="token number">4</span> switched <span class="token keyword">to</span> datafile copyinput datafile copy RECID<span class="token operator">=</span><span class="token number">18</span> STAMP<span class="token operator">=</span><span class="token number">966959106</span> <span class="token keyword">file</span> name<span class="token operator">=</span><span class="token operator">+</span>DG_DATA<span class="token operator">/</span>racdb<span class="token operator">/</span>datafile<span class="token operator">/</span>users<span class="token number">.265</span><span class="token punctuation">.</span><span class="token number">966959061</span>Starting recover at <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">15</span>:<span class="token number">45</span>:<span class="token number">08</span><span class="token keyword">using</span> channel ORA_DISK_1starting media recoveryarchived log <span class="token keyword">for</span> thread <span class="token number">1</span> <span class="token keyword">with</span> sequence <span class="token number">33</span> <span class="token operator">is</span> already <span class="token keyword">on</span> <span class="token keyword">disk</span> <span class="token keyword">as</span> <span class="token keyword">file</span> <span class="token operator">/</span>oracle<span class="token operator">/</span>oradata<span class="token operator">/</span>racdb<span class="token operator">/</span>redo03<span class="token punctuation">.</span>logarchived log <span class="token keyword">file</span> name<span class="token operator">=</span><span class="token operator">/</span>oracle<span class="token operator">/</span>oradata<span class="token operator">/</span>racdb<span class="token operator">/</span>redo03<span class="token punctuation">.</span>log thread<span class="token operator">=</span><span class="token number">1</span> sequence<span class="token operator">=</span><span class="token number">33</span>media recovery complete<span class="token punctuation">,</span> elapsed time: <span class="token number">00</span>:<span class="token number">00</span>:<span class="token number">01</span>Finished recover at <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">15</span>:<span class="token number">45</span>:<span class="token number">11</span><span class="token comment" spellcheck="true">--这里不知道为什么控制文件也帮我恢复了</span>ASMCMD <span class="token punctuation">[</span><span class="token operator">+</span>DG_DATA<span class="token operator">/</span>racdb<span class="token punctuation">]</span> <span class="token operator">></span> lsCONTROLFILE<span class="token operator">/</span>DATAFILE<span class="token operator">/</span>PARAMETERFILE<span class="token operator">/</span>control01<span class="token punctuation">.</span>ctlspfileracdb<span class="token punctuation">.</span>oraASMCMD <span class="token punctuation">[</span><span class="token operator">+</span>DG_DATA<span class="token operator">/</span>racdb<span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">cd</span> datafileASMCMD <span class="token punctuation">[</span><span class="token operator">+</span>DG_DATA<span class="token operator">/</span>racdb<span class="token operator">/</span>datafile<span class="token punctuation">]</span> <span class="token operator">></span> lsSYSAUX<span class="token number">.260</span><span class="token punctuation">.</span><span class="token number">966959061</span>SYSTEM<span class="token number">.261</span><span class="token punctuation">.</span><span class="token number">966959061</span>UNDOTBS1<span class="token number">.262</span><span class="token punctuation">.</span><span class="token number">966959061</span>USERS<span class="token number">.265</span><span class="token punctuation">.</span><span class="token number">966959061</span>ASMCMD <span class="token punctuation">[</span><span class="token operator">+</span>DG_DATA<span class="token operator">/</span>racdb<span class="token operator">/</span>datafile<span class="token punctuation">]</span> <span class="token operator">></span>  QL<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">database</span> <span class="token keyword">add</span> logfile <span class="token keyword">group</span> <span class="token number">3</span> <span class="token punctuation">(</span><span class="token string">'+DG_DATA'</span><span class="token punctuation">)</span> size 100m<span class="token punctuation">;</span><span class="token keyword">Database</span> altered<span class="token punctuation">.</span>SQL<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">database</span> <span class="token keyword">add</span> logfile <span class="token keyword">group</span> <span class="token number">4</span> <span class="token punctuation">(</span><span class="token string">'+DG_DATA'</span><span class="token punctuation">)</span> size 100m<span class="token punctuation">;</span><span class="token keyword">Database</span> altered<span class="token punctuation">.</span>SQL<span class="token operator">></span> <span class="token keyword">alter</span> system switch logfile<span class="token punctuation">;</span>System altered<span class="token punctuation">.</span>SQL<span class="token operator">></span> <span class="token keyword">select</span> member <span class="token keyword">from</span> v$log<span class="token punctuation">;</span><span class="token keyword">select</span> member <span class="token keyword">from</span> v$log       <span class="token operator">*</span>ERROR at line <span class="token number">1</span>:ORA<span class="token number">-00904</span>: <span class="token string">"MEMBER"</span>: invalid identifierSQL<span class="token operator">></span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> v$log<span class="token punctuation">;</span>    <span class="token keyword">GROUP</span><span class="token comment" spellcheck="true">#    THREAD#  SEQUENCE#      BYTES  BLOCKSIZE    MEMBERS ARC STATUS         FIRST_CHANGE# FIRST_TIME   NEXT_CHANGE# NEXT_TIME</span><span class="token comment" spellcheck="true">---------- ---------- ---------- ---------- ---------- ---------- --- ---------------- ------------- ------------------- ------------ -------------------</span>         <span class="token number">1</span>          <span class="token number">1</span>          <span class="token number">1</span>  <span class="token number">104857600</span>        <span class="token number">512</span>          <span class="token number">1</span> YES ACTIVE        <span class="token number">875061</span> <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">15</span>:<span class="token number">50</span>:<span class="token number">41</span>       <span class="token number">876161</span> <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">16</span>:<span class="token number">02</span>:<span class="token number">43</span>         <span class="token number">2</span>          <span class="token number">1</span>          <span class="token number">2</span>  <span class="token number">104857600</span>        <span class="token number">512</span>          <span class="token number">1</span> <span class="token keyword">NO</span>  <span class="token keyword">CURRENT</span>       <span class="token number">876161</span> <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">16</span>:<span class="token number">02</span>:<span class="token number">43</span>   <span class="token number">2</span><span class="token punctuation">.</span>8147E<span class="token operator">+</span><span class="token number">14</span>         <span class="token number">3</span>          <span class="token number">1</span>          <span class="token number">0</span>  <span class="token number">104857600</span>        <span class="token number">512</span>          <span class="token number">1</span> YES UNUSED     <span class="token number">0</span>                                 <span class="token number">0</span>         <span class="token number">4</span>          <span class="token number">1</span>          <span class="token number">0</span>  <span class="token number">104857600</span>        <span class="token number">512</span>          <span class="token number">1</span> YES UNUSED     <span class="token number">0</span>                                 <span class="token number">0</span>SQL<span class="token operator">></span> <span class="token keyword">alter</span> system switch logfile<span class="token punctuation">;</span>System altered<span class="token punctuation">.</span>SQL<span class="token operator">></span> <span class="token keyword">alter</span> system switch logfile<span class="token punctuation">;</span>System altered<span class="token punctuation">.</span>SQL<span class="token operator">></span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> v$log<span class="token punctuation">;</span>    <span class="token keyword">GROUP</span><span class="token comment" spellcheck="true">#    THREAD#  SEQUENCE#      BYTES  BLOCKSIZE    MEMBERS ARC STATUS         FIRST_CHANGE# FIRST_TIME   NEXT_CHANGE# NEXT_TIME</span><span class="token comment" spellcheck="true">---------- ---------- ---------- ---------- ---------- ---------- --- ---------------- ------------- ------------------- ------------ -------------------</span>         <span class="token number">1</span>          <span class="token number">1</span>          <span class="token number">1</span>  <span class="token number">104857600</span>        <span class="token number">512</span>          <span class="token number">1</span> YES ACTIVE        <span class="token number">875061</span> <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">15</span>:<span class="token number">50</span>:<span class="token number">41</span>       <span class="token number">876161</span> <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">16</span>:<span class="token number">02</span>:<span class="token number">43</span>         <span class="token number">2</span>          <span class="token number">1</span>          <span class="token number">2</span>  <span class="token number">104857600</span>        <span class="token number">512</span>          <span class="token number">1</span> YES ACTIVE        <span class="token number">876161</span> <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">16</span>:<span class="token number">02</span>:<span class="token number">43</span>       <span class="token number">876177</span> <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">16</span>:<span class="token number">03</span>:<span class="token number">03</span>         <span class="token number">3</span>          <span class="token number">1</span>          <span class="token number">3</span>  <span class="token number">104857600</span>        <span class="token number">512</span>          <span class="token number">1</span> YES ACTIVE        <span class="token number">876177</span> <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">16</span>:<span class="token number">03</span>:<span class="token number">03</span>       <span class="token number">876180</span> <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">16</span>:<span class="token number">03</span>:<span class="token number">04</span>         <span class="token number">4</span>          <span class="token number">1</span>          <span class="token number">4</span>  <span class="token number">104857600</span>        <span class="token number">512</span>          <span class="token number">1</span> <span class="token keyword">NO</span>  <span class="token keyword">CURRENT</span>       <span class="token number">876180</span> <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">16</span>:<span class="token number">03</span>:<span class="token number">04</span>   <span class="token number">2</span><span class="token punctuation">.</span>8147E<span class="token operator">+</span><span class="token number">14</span>SQL<span class="token operator">></span> <span class="token keyword">alter</span> system <span class="token keyword">checkpoint</span><span class="token punctuation">;</span>System altered<span class="token punctuation">.</span>SQL<span class="token operator">></span> <span class="token keyword">alter</span> system <span class="token keyword">checkpoint</span><span class="token punctuation">;</span>System altered<span class="token punctuation">.</span>SQL<span class="token operator">></span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> v$log<span class="token punctuation">;</span>    <span class="token keyword">GROUP</span><span class="token comment" spellcheck="true">#    THREAD#  SEQUENCE#      BYTES  BLOCKSIZE    MEMBERS ARC STATUS         FIRST_CHANGE# FIRST_TIME   NEXT_CHANGE# NEXT_TIME</span><span class="token comment" spellcheck="true">---------- ---------- ---------- ---------- ---------- ---------- --- ---------------- ------------- ------------------- ------------ -------------------</span>         <span class="token number">1</span>          <span class="token number">1</span>          <span class="token number">1</span>  <span class="token number">104857600</span>        <span class="token number">512</span>          <span class="token number">1</span> YES INACTIVE      <span class="token number">875061</span> <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">15</span>:<span class="token number">50</span>:<span class="token number">41</span>       <span class="token number">876161</span> <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">16</span>:<span class="token number">02</span>:<span class="token number">43</span>         <span class="token number">2</span>          <span class="token number">1</span>          <span class="token number">2</span>  <span class="token number">104857600</span>        <span class="token number">512</span>          <span class="token number">1</span> YES INACTIVE      <span class="token number">876161</span> <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">16</span>:<span class="token number">02</span>:<span class="token number">43</span>       <span class="token number">876177</span> <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">16</span>:<span class="token number">03</span>:<span class="token number">03</span>         <span class="token number">3</span>          <span class="token number">1</span>          <span class="token number">3</span>  <span class="token number">104857600</span>        <span class="token number">512</span>          <span class="token number">1</span> YES INACTIVE      <span class="token number">876177</span> <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">16</span>:<span class="token number">03</span>:<span class="token number">03</span>       <span class="token number">876180</span> <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">16</span>:<span class="token number">03</span>:<span class="token number">04</span>         <span class="token number">4</span>          <span class="token number">1</span>          <span class="token number">4</span>  <span class="token number">104857600</span>        <span class="token number">512</span>          <span class="token number">1</span> <span class="token keyword">NO</span>  <span class="token keyword">CURRENT</span>       <span class="token number">876180</span> <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">16</span>:<span class="token number">03</span>:<span class="token number">04</span>   <span class="token number">2</span><span class="token punctuation">.</span>8147E<span class="token operator">+</span><span class="token number">14</span>SQL<span class="token operator">></span> <span class="token keyword">alter</span> system <span class="token keyword">drop</span> logfile <span class="token keyword">group</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">alter</span> system <span class="token keyword">drop</span> logfile <span class="token keyword">group</span> <span class="token number">1</span>             <span class="token operator">*</span>ERROR at line <span class="token number">1</span>:ORA<span class="token number">-02065</span>: illegal <span class="token keyword">option</span> <span class="token keyword">for</span> <span class="token keyword">ALTER</span> SYSTEMSQL<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">database</span> <span class="token keyword">drop</span> logfile <span class="token keyword">group</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">Database</span> altered<span class="token punctuation">.</span>SQL<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">database</span> <span class="token keyword">drop</span> logfile <span class="token keyword">group</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token keyword">Database</span> altered<span class="token punctuation">.</span>SQL<span class="token operator">></span> SQL<span class="token operator">></span> SQL<span class="token operator">></span> SQL<span class="token operator">></span> SQL<span class="token operator">></span> SQL<span class="token operator">></span> SQL<span class="token operator">></span> SQL<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">database</span> <span class="token keyword">add</span> logfile <span class="token keyword">group</span> <span class="token number">2</span> <span class="token punctuation">(</span><span class="token string">'+DG_DATA'</span><span class="token punctuation">)</span> size 100m<span class="token punctuation">;</span><span class="token keyword">Database</span> altered<span class="token punctuation">.</span>SQL<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">database</span> <span class="token keyword">add</span> logfile <span class="token keyword">group</span> <span class="token number">1</span><span class="token punctuation">(</span><span class="token string">'+DG_DATA'</span><span class="token punctuation">)</span> size 100m<span class="token punctuation">;</span><span class="token keyword">Database</span> altered<span class="token punctuation">.</span>SQL<span class="token operator">></span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> v$log<span class="token punctuation">;</span>    <span class="token keyword">GROUP</span><span class="token comment" spellcheck="true">#    THREAD#  SEQUENCE#      BYTES  BLOCKSIZE    MEMBERS ARC STATUS         FIRST_CHANGE# FIRST_TIME   NEXT_CHANGE# NEXT_TIME</span><span class="token comment" spellcheck="true">---------- ---------- ---------- ---------- ---------- ---------- --- ---------------- ------------- ------------------- ------------ -------------------</span>         <span class="token number">1</span>          <span class="token number">1</span>          <span class="token number">0</span>  <span class="token number">104857600</span>        <span class="token number">512</span>          <span class="token number">1</span> YES UNUSED     <span class="token number">0</span>                                 <span class="token number">0</span>         <span class="token number">2</span>          <span class="token number">1</span>          <span class="token number">0</span>  <span class="token number">104857600</span>        <span class="token number">512</span>          <span class="token number">1</span> YES UNUSED     <span class="token number">0</span>                                 <span class="token number">0</span>         <span class="token number">3</span>          <span class="token number">1</span>          <span class="token number">3</span>  <span class="token number">104857600</span>        <span class="token number">512</span>          <span class="token number">1</span> YES INACTIVE      <span class="token number">876177</span> <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">16</span>:<span class="token number">03</span>:<span class="token number">03</span>       <span class="token number">876180</span> <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">16</span>:<span class="token number">03</span>:<span class="token number">04</span>         <span class="token number">4</span>          <span class="token number">1</span>          <span class="token number">4</span>  <span class="token number">104857600</span>        <span class="token number">512</span>          <span class="token number">1</span> <span class="token keyword">NO</span>  <span class="token keyword">CURRENT</span>       <span class="token number">876180</span> <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">16</span>:<span class="token number">03</span>:<span class="token number">04</span>   <span class="token number">2</span><span class="token punctuation">.</span>8147E<span class="token operator">+</span><span class="token number">14</span>SQL<span class="token operator">></span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> v$log<span class="token punctuation">;</span>    <span class="token keyword">GROUP</span><span class="token comment" spellcheck="true">#    THREAD#  SEQUENCE#      BYTES  BLOCKSIZE    MEMBERS ARC STATUS         FIRST_CHANGE# FIRST_TIME   NEXT_CHANGE# NEXT_TIME</span><span class="token comment" spellcheck="true">---------- ---------- ---------- ---------- ---------- ---------- --- ---------------- ------------- ------------------- ------------ -------------------</span>         <span class="token number">1</span>          <span class="token number">1</span>          <span class="token number">0</span>  <span class="token number">104857600</span>        <span class="token number">512</span>          <span class="token number">1</span> YES UNUSED     <span class="token number">0</span>                                 <span class="token number">0</span>         <span class="token number">2</span>          <span class="token number">1</span>          <span class="token number">0</span>  <span class="token number">104857600</span>        <span class="token number">512</span>          <span class="token number">1</span> YES UNUSED     <span class="token number">0</span>                                 <span class="token number">0</span>         <span class="token number">3</span>          <span class="token number">1</span>          <span class="token number">3</span>  <span class="token number">104857600</span>        <span class="token number">512</span>          <span class="token number">1</span> YES INACTIVE      <span class="token number">876177</span> <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">16</span>:<span class="token number">03</span>:<span class="token number">03</span>       <span class="token number">876180</span> <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">16</span>:<span class="token number">03</span>:<span class="token number">04</span>         <span class="token number">4</span>          <span class="token number">1</span>          <span class="token number">4</span>  <span class="token number">104857600</span>        <span class="token number">512</span>          <span class="token number">1</span> <span class="token keyword">NO</span>  <span class="token keyword">CURRENT</span>       <span class="token number">876180</span> <span class="token number">2018</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">16</span>:<span class="token number">03</span>:<span class="token number">04</span>   <span class="token number">2</span><span class="token punctuation">.</span>8147E<span class="token operator">+</span><span class="token number">14</span>SQL<span class="token operator">></span> <span class="token keyword">alter</span> system switch logfile<span class="token punctuation">;</span>System altered<span class="token punctuation">.</span>SQL<span class="token operator">></span> <span class="token operator">/</span>System altered<span class="token punctuation">.</span>SQL<span class="token operator">></span> <span class="token keyword">alter</span> system <span class="token keyword">checkpoint</span>  <span class="token number">2</span>  <span class="token punctuation">;</span>System altered<span class="token punctuation">.</span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Oracle-ASM数据库日常管理维护&quot;&gt;&lt;a href=&quot;#Oracle-ASM数据库日常管理维护&quot; class=&quot;headerlink&quot; title=&quot;Oracle ASM数据库日常管理维护&quot;&gt;&lt;/a&gt;Oracle ASM数据库日常管理维护&lt;/h1&gt;&lt;p&gt;[O
      
    
    </summary>
    
      <category term="Oracle" scheme="https://kyle.github.io/categories/Oracle/"/>
    
    
      <category term="Oracle" scheme="https://kyle.github.io/tags/Oracle/"/>
    
      <category term="SQL" scheme="https://kyle.github.io/tags/SQL/"/>
    
      <category term="DML" scheme="https://kyle.github.io/tags/DML/"/>
    
  </entry>
  
  <entry>
    <title>Oracle之DDL和对象管理</title>
    <link href="https://kyle.github.io/2018/10/02/oracle/oracle-zhi-ddl-he-dui-xiang-guan-li/"/>
    <id>https://kyle.github.io/2018/10/02/oracle/oracle-zhi-ddl-he-dui-xiang-guan-li/</id>
    <published>2018-10-02T06:25:00.000Z</published>
    <updated>2019-05-03T15:49:09.860Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SQL语言之DDL和对象管理"><a href="#SQL语言之DDL和对象管理" class="headerlink" title="SQL语言之DDL和对象管理"></a>SQL语言之DDL和对象管理</h1><p><a href="https://docs.oracle.com/cd/E11882_01/index.htm" target="_blank" rel="noopener">Oracle 11G R2 官方文档</a></p><h2 id="1-介绍用户模拟下可以访问的模式对象"><a href="#1-介绍用户模拟下可以访问的模式对象" class="headerlink" title="1 介绍用户模拟下可以访问的模式对象"></a>1 介绍用户模拟下可以访问的模式对象</h2><pre class=" language-sql"><code class="language-sql">  <span class="token keyword">SELECT</span> object_type<span class="token punctuation">,</span> <span class="token function">COUNT</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>    <span class="token keyword">FROM</span> user_objects<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> object_type<span class="token punctuation">;</span>  <span class="token keyword">SELECT</span> object_type<span class="token punctuation">,</span> <span class="token function">COUNT</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>    <span class="token keyword">FROM</span> all_objects<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> object_type<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> owner  <span class="token keyword">FROM</span> all_objects</code></pre><h2 id="2-研究模式中的数据类型"><a href="#2-研究模式中的数据类型" class="headerlink" title="2 研究模式中的数据类型"></a>2 研究模式中的数据类型</h2><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 1.DESC</span><span class="token comment" spellcheck="true">-- 2.SQL</span><span class="token keyword">SELECT</span> column_name<span class="token punctuation">,</span> data_type  <span class="token keyword">FROM</span> user_tab_columns <span class="token keyword">WHERE</span> table_name <span class="token operator">=</span> <span class="token string">'EMPLOYEES'</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> data_type  <span class="token keyword">FROM</span> user_tab_columns <span class="token keyword">WHERE</span> table_name <span class="token operator">=</span> <span class="token string">'EMPLOYEES'</span><span class="token punctuation">;</span></code></pre><h2 id="3-表的创建与管理"><a href="#3-表的创建与管理" class="headerlink" title="3 表的创建与管理"></a>3 表的创建与管理</h2><h3 id="3-1-表的创建"><a href="#3-1-表的创建" class="headerlink" title="3.1 表的创建"></a>3.1 表的创建</h3><ul><li>语法</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">Create</span> <span class="token keyword">table</span> <span class="token punctuation">[</span><span class="token keyword">schema</span><span class="token punctuation">,</span><span class="token punctuation">]</span> table_name<span class="token punctuation">(</span>column_name data_type <span class="token punctuation">[</span><span class="token keyword">default</span> express<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">constraint</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">,</span>column_name data_type <span class="token punctuation">[</span><span class="token keyword">default</span> express<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">constraint</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">,</span>column_name data_type <span class="token punctuation">[</span><span class="token keyword">default</span> express<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">constraint</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--1.表的创建与结构变更</span><span class="token comment" spellcheck="true">--01.工具</span><span class="token comment" spellcheck="true">--A：创建表</span><span class="token comment" spellcheck="true">--B：写入数据</span><span class="token comment" spellcheck="true">--C：更改结构</span></code></pre><ul><li>SQL 语法</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--创建sql02,sql03,sql04</span> <span class="token comment" spellcheck="true">--创建sql02,sql03,sql04</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> SQL02<span class="token punctuation">(</span>    sql02_id        NUMBER <span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    sql02_id2       NUMBER <span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    sql02_date      <span class="token keyword">DATE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    sql02_status    VARCHAR2 <span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    sql02_number NUMBER <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> SQL03<span class="token punctuation">(</span>    sql03_id1    NUMBER <span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    sql03_id2    NUMBER <span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    sql03_id3    NUMBER <span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> sql03    <span class="token keyword">MODIFY</span> <span class="token punctuation">(</span>sql03_id3 VARCHAR2 <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> SQL04<span class="token punctuation">(</span>    sql04_id        NUMBER <span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    sql04_desc      VARCHAR2 <span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    sql04_status    VARCHAR2 <span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    sql04_price     NUMBER <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    sql04_date      <span class="token keyword">DATE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    sql04_count     NUMBER <span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="3-2-表的重命名"><a href="#3-2-表的重命名" class="headerlink" title="3.2 表的重命名"></a>3.2 表的重命名</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">RENAME</span> sql044 <span class="token keyword">TO</span> sql04<span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> SQL04    <span class="token keyword">MODIFY</span> sql04_count NUMBER <span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> SQL04    <span class="token keyword">RENAME</span> <span class="token keyword">COLUMN</span> sql04_count <span class="token keyword">TO</span> SQL04_COUNT2<span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> SQL04    <span class="token keyword">RENAME</span> <span class="token keyword">COLUMN</span> sql04_count02 <span class="token keyword">TO</span> SQL04_COUNT<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tab <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> user_tables</code></pre><h3 id="3-3-表的复制"><a href="#3-3-表的复制" class="headerlink" title="3.3 表的复制"></a>3.3 表的复制</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> itpux05<span class="token keyword">AS</span>    <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> sql04<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> sql01<span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> itpux06<span class="token keyword">AS</span>    <span class="token keyword">SELECT</span> <span class="token operator">*</span>      <span class="token keyword">FROM</span> sql01     <span class="token keyword">WHERE</span> sql01_id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> itpux06</code></pre><h3 id="3-4-表的截断"><a href="#3-4-表的截断" class="headerlink" title="3.4 表的截断"></a>3.4 表的截断</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--100g delete 2h,truncate 2 分钟。</span><span class="token keyword">TRUNCATE</span> <span class="token keyword">TABLE</span> itpux07<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> itpux07</code></pre><h3 id="3-4-表的删除"><a href="#3-4-表的删除" class="headerlink" title="3.4 表的删除"></a>3.4 表的删除</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> itpux06<span class="token punctuation">;</span></code></pre><h3 id="3-4-删除表的定义"><a href="#3-4-删除表的定义" class="headerlink" title="3.4 .删除表的定义"></a>3.4 .删除表的定义</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> table_name <span class="token keyword">CASCADE</span> CONSTRAINTS<span class="token punctuation">;</span>              <span class="token comment" spellcheck="true">--相关的视图，约束，等相关所有的关系对象。</span><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> table_name <span class="token keyword">PURGE</span><span class="token punctuation">;</span>                            <span class="token comment" spellcheck="true">--释放资源，不经过回收站。</span><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> itpux05 <span class="token keyword">CASCADE</span> CONSTRAINTS<span class="token punctuation">;</span><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> itpux05 <span class="token keyword">PURGE</span><span class="token punctuation">;</span></code></pre><h2 id="4-簇的概念与介绍"><a href="#4-簇的概念与介绍" class="headerlink" title="4 簇的概念与介绍"></a>4 簇的概念与介绍</h2><blockquote><p>簇(cluster)其实就是一组表，由一组共享相同数据块的多个表组成，将经常一起使用的表<br>组合在一起成簇可以提高处理效率；在一个簇中的表就叫做簇表。</p></blockquote><ul><li>不宜用聚簇表的情况</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token number">1</span><span class="token punctuation">)</span>如果预料到聚簇中的表会大量修改<span class="token punctuation">,</span>聚簇表会对DML 的性能产生负面影响<span class="token number">2</span><span class="token punctuation">)</span>非常不适合对单表的全表扫描<span class="token punctuation">,</span>因为只能引起对其它表的全表扫描<span class="token number">3</span><span class="token punctuation">)</span>频繁对表进行<span class="token keyword">TRUNCATE</span> 和加载<span class="token punctuation">,</span>因为聚簇中的表是不能<span class="token keyword">TRUNCATE</span> 的，只能<span class="token keyword">TRUNCATE</span> 簇<span class="token number">4</span><span class="token punctuation">)</span>如果表只是偶尔被连接或者它们的公共列经常被修改，则不要聚簇表<span class="token number">5</span><span class="token punctuation">)</span>如果经常从所有有相同聚簇键值的表查询出的结果数据超过一个或两个Oracle 块，则不要聚簇表<span class="token number">6</span><span class="token punctuation">)</span>如果空间不够，并且不能为将要插入的新记录分配额外的空间，那么不要使用聚簇</code></pre><h2 id="5-临时表的创建与使用"><a href="#5-临时表的创建与使用" class="headerlink" title="5 临时表的创建与使用"></a>5 临时表的创建与使用</h2><h3 id="5-1-会话级临时表"><a href="#5-1-会话级临时表" class="headerlink" title="5.1 会话级临时表"></a>5.1 会话级临时表</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--会话结束自动清空数据</span><span class="token keyword">CREATE</span> <span class="token keyword">GLOBAL</span> <span class="token keyword">TEMPORARY</span> <span class="token keyword">TABLE</span> table_name<span class="token punctuation">(</span>    col1 type1<span class="token punctuation">,</span>    col2 type2<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token keyword">on</span> <span class="token keyword">commit</span> preserve <span class="token keyword">rows</span><span class="token punctuation">;</span></code></pre><h3 id="5-2-事务级临时表"><a href="#5-2-事务级临时表" class="headerlink" title="5.2 事务级临时表"></a>5.2 事务级临时表</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--事务结束（commit,rollback） ，清除数据。</span><span class="token keyword">CREATE</span> <span class="token keyword">GLOBAL</span> <span class="token keyword">TEMPORARY</span> <span class="token keyword">TABLE</span> table_name<span class="token punctuation">(</span>    col1 type1<span class="token punctuation">,</span>    col2 type2<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token keyword">on</span> <span class="token keyword">commit</span> <span class="token keyword">delete</span> <span class="token keyword">rows</span><span class="token punctuation">;</span></code></pre><h2 id="6-索引的创建与管理"><a href="#6-索引的创建与管理" class="headerlink" title="6 索引的创建与管理"></a>6 索引的创建与管理</h2><h2 id="6-1-索引分类"><a href="#6-1-索引分类" class="headerlink" title="6.1 索引分类"></a>6.1 索引分类</h2><ul><li><p>逻辑分类</p><pre class=" language-sql"><code class="language-sql"><span class="token number">1</span><span class="token punctuation">.</span>单列或多列<span class="token number">2</span><span class="token punctuation">.</span>唯一索引和非唯一索引<span class="token number">3</span><span class="token punctuation">.</span>函数索引Doman</code></pre></li><li><p>物理分类<br><code>`</code>sql<br>物理分类:<br>B-TREE<br>Bitmap</p></li></ul><p>B<em>Tree 索引<br>B</em>Tree 索引是最常见的索引结构，默认建立的索引就是这种类型的索引。</p><p>DML 语句：<br>Create index indexname on tablename(columnname[columnname…])<br>Bitmap 索引<br>位图索引主要用于决策支持系统或静态数据，不支持行级锁定</p><pre><code>## 6.2 索引的日常管理* 基本语法```sqlCREATE [UNIQUE] | [BITMAP] INDEX index_name --unique 表示唯一索引ON table_name([column1 [ASC|DESC],column2 --bitmap，创建位图索引[ASC|DESC],…] | [express])[TABLESPACE tablespace_name][PCTFREE n1] --指定索引在数据块中空闲空间[STORAGE (INITIAL n2)][NOLOGGING] --表示创建和重建索引时允许对表做DML 操作，默认情况下不应该使用[NOLINE][NOSORT]; --表示创建索引时不进行排序，默认不适用，如果数据已经是按照该索引顺序排列的可以使用</code></pre><ul><li>1.添加/创建索引<br><code>`</code>sql<br>–工具</li></ul><p>CREATE INDEX cust_name_i1<br>    ON SQL01 (sql01_name);       –单列索引</p><p>CREATE INDEX cust_name_i1<br>    ON SQL01 (sql01_name)<br>    TABLESPACE ITPUX;            –单列<br>索引指定表空间<br>–命令</p><p>CREATE INDEX cust_name_i2<br>    ON sql01 (sql01_name, sql01_status);    –组合索引</p><p>CREATE BITMAP INDEX sql01_level_i3<br>    ON sql01 (sql01_level);      –位图索引</p><pre><code>* 2.修改索引```sql--重命名索引ALTER INDEX cust_name_i1    RENAME TO idx1_sql01_name;--合并索引ALTER INDEX idx1_sql01_name    COALESCE;</code></pre><ul><li>3.重建索引<br><code>`</code>sql<br>–重命名索引</li></ul><p>–删除原来的索引，重新建立索引。<br>DROP INDEX idx1_sql01_name;</p><p>CREATE INDEX idx1_sql01_name<br>    ON SQL01 (sql01_name);</p><p>–直接rebuild</p><p>ALTER INDEX idx1_sql01_name<br>    REBUILD;                                    –会锁表。</p><p>ALTER INDEX idx1_sql01_name<br>    REBUILD ONLINE;</p><pre><code>* 4.删除索引```sqlDROP INDEX idx1_sql01_name;</code></pre><ul><li>5.查看索引<br><code>`</code>sql<br>–select * from user_indexes;</li></ul><p>SELECT *<br>  FROM dba_indexes<br> WHERE owner = ‘ITPUX’;</p><p>SELECT *<br>  FROM dba_indexes<br> WHERE table_name = ‘SQL01’;</p><p>–select <em> from all_indexes;<br>–select </em> from user_ind_columns;</p><p>SELECT *<br>  FROM dba_ind_columns<br> WHERE index_owner = ‘ITPUX’ AND table_name = ‘SQL01’;</p><p>–select * from all_ind_columns;</p><p>SELECT index_name,<br>       column_name,<br>       index_type,<br>       uniqueness,<br>       tablespace_name<br>  FROM dba_indexes NATURAL JOIN dba_ind_columns<br> WHERE table_name = ‘SQL01’;</p><pre><code>## 7 约束的创建与管理### 7.1  5种约束* 1.not null (非空约束)```sql--1.1 创建表的时候CREATE TABLE itpux01(    id    NUMBER NOT NULL PRIMARY KEY,    name VARCHAR2 (20));--1.2 在已经创建的表加添加CREATE TABLE itpux02(    id NUMBER,    name VARCHAR2 (20));ALTER TABLE itpux02    MODIFY id NOT NULL;--1.3 验证。INSERT INTO itpux02     VALUES (NULL, &#39;name&#39;);INSERT INTO itpux02     VALUES (1, &#39;name&#39;);SELECT * FROM itpux02;--1.4 删除ALTER TABLE itpux02    MODIFY id NULL;INSERT INTO itpux02     VALUES (NULL, &#39;name&#39;);SELECT * FROM itpux02;INSERT INTO itpux02     VALUES (2, &#39;name&#39;);</code></pre><ul><li>2.primary key 约束<br><code>`</code>sql<br>DROP TABLE itpux01;<br>CREATE TABLE itpux01<br>(<br>  id    NUMBER NOT NULL PRIMARY KEY,<br>  name VARCHAR2 (20)<br>);<br>–1.2 在已经创建的表加添加<br>DROP TABLE itpux02;</li></ul><p>CREATE TABLE itpux02<br>(<br>    id NUMBER,<br>    name VARCHAR2 (20)<br>);</p><p>ALTER TABLE itpux02<br>    ADD CONSTRAINT itpux02_id_con PRIMARY KEY (id); –建议命名<br>–alter table itpux02 drop constraint itpux02_id_con;</p><p>ALTER TABLE itpux02<br>    ADD PRIMARY KEY (id);</p><p>–1.3 删除</p><p>ALTER TABLE itpux02<br>    DROP CONSTRAINT itpux02_id_con;</p><p>ALTER TABLE itpux02<br>    DROP CONSTRAINT SYS_C0011169;</p><pre><code>* 3.unique 约束```sql--3.1 创建表的时候CREATE TABLE itpux03(    id      NUMBER NOT NULL,    name    VARCHAR2 (20) UNIQUE);INSERT INTO itpux03     VALUES (1, &#39;name1&#39;);INSERT INTO itpux03     VALUES (2, &#39;name2&#39;);--3.2 删除ALTER TABLE itpux03    DROP UNIQUE (name);INSERT INTO itpux03     VALUES (3, &#39;name2&#39;);--3.3 后期添加ALTER TABLE itpux03    ADD UNIQUE (name);DELETE FROM itpux03      WHERE id = 3;ALTER TABLE itpux03    ADD UNIQUE (name);</code></pre><ul><li>4.Check 约束<br><code>`</code>sql<br>–4.1 新建表添加约束</li></ul><p>CREATE TABLE itpux04<br>(<br>    id     NUMBER NOT NULL PRIMARY KEY,<br>    name VARCHAR2 (20),<br>    age    NUMBER CONSTRAINT itpux04_age_con CHECK (age &gt; 17)<br>);</p><p>INSERT INTO itpux04<br>     VALUES (1, ‘mm’, 16);</p><p>INSERT INTO itpux04<br>     VALUES (2, ‘mm’, 18);</p><p>–4.2 删除</p><p>ALTER TABLE itpux04<br>    DROP CONSTRAINT itpux04_age_con;</p><p>–4.3 后期<br>alter table itpux04 add constraint itpux04_age_con check(age&gt;17);</p><pre><code>* 5.Foreign key 约束```sqlCREATE TABLE itpux051(    jobid    NUMBER NOT NULL PRIMARY KEY,    name1 VARCHAR2 (20),    age NUMBER (3));CREATE TABLE itpux052(    no      NUMBER NOT NULL PRIMARY KEY,    dcname VARCHAR2 (20),    dcid    NUMBER REFERENCES itpux051 (jobid));INSERT INTO itpux052     VALUES (1, &#39;dc1008&#39;, 20161218);                                                  --errorINSERT INTO itpux051     VALUES (20161218, &#39;风哥&#39;, 31);INSERT INTO itpux052     VALUES (1, &#39;dc1008&#39;, 20161218);SELECT * FROM itpux051;SELECT * FROM itpux052;--删除ALTER TABLE itpux052    DROP CONSTRAINT SYS_C0011182;DROP TABLE itpux051;DROP TABLE itpux051 CASCADE CONSTRAINTS;--后期增加ALTER TABLE itpux052    ADD CONSTRAINT itpux052_dcid_con FOREIGN KEY (dcid)        REFERENCES itpux051 (jobid);</code></pre><h3 id="7-1-约束的管理"><a href="#7-1-约束的管理" class="headerlink" title="7.1  约束的管理"></a>7.1  约束的管理</h3><ul><li>1.约束表级定义与列级定义<br><code>`</code>sql<br>–1.1 表级定义<br>CREATE TABLE itpux08<br>(<br>  id NUMBER (8),<br>  name VARCHAR2 (50),<br>  CONSTRAINT pk_itpux08_id PRIMARY KEY (id)<br>);</li></ul><p>–1.2 列级定义<br>CREATE TABLE itpux09<br>(<br>    id    NUMBER (8) CONSTRAINT pk_itpux09_id PRIMARY KEY,<br>    name VARCHAR2 (50)<br>);</p><pre><code>* 2.约束的disable/enable,validate/novalidate 的区别```sql--disable 禁用--disable validate --关闭后，不能增删改--disable novalidate --关闭后，可以增删改--enable 启用--enable validate --启用后，进行所有约束，有的，新加的--enable novalidate --启用后，对新加入的约束，对旧的不约束--2.1 非主键的CREATE TABLE itpux06(    id     NUMBER NOT NULL PRIMARY KEY,    name VARCHAR2 (20),    age    NUMBER CONSTRAINT itpux06_age_con CHECK (age &gt; 17));ALTER TABLE itpux06    DISABLE CONSTRAINT itpux06_age_con;   --novalidateINSERT INTO itpux06     VALUES (2, &#39;name2&#39;, 18);ALTER TABLE itpux06    ENABLE CONSTRAINT itpux06_age_con;     --validateALTER TABLE itpux06    DISABLE VALIDATE CONSTRAINT itpux06_age_con;                                                                 --validateINSERT INTO itpux06     VALUES (3, &#39;name3&#39;, 18);              --errorALTER TABLE itpux06    ENABLE CONSTRAINT itpux06_age_con;     --validateINSERT INTO itpux06     VALUES (3, &#39;name3&#39;, 18);ALTER TABLE itpux06    DISABLE CONSTRAINT itpux06_age_con;    --novalidateINSERT INTO itpux06     VALUES (4, &#39;name4&#39;, 16);ALTER TABLE itpux06    ENABLE CONSTRAINT itpux06_age_con;     --errprALTER TABLE itpux06    ENABLE NOVALIDATE CONSTRAINT itpux06_age_con;--2.2 主键的CREATE TABLE itpux07(    id NUMBER,    name VARCHAR2 (20));ALTER TABLE itpux07    ADD CONSTRAINT itpux07_id_con PRIMARY KEY (id);INSERT INTO itpux07     VALUES (1, &#39;name1&#39;);ALTER TABLE itpux07    DISABLE CONSTRAINT itpux07_id_con;    --novalidateINSERT INTO itpux07     VALUES (1, &#39;name2&#39;);SELECT * FROM itpux07;ALTER TABLE itpux07    ENABLE CONSTRAINT itpux07_id_con;    --errorALTER TABLE itpux07    ENABLE NOVALIDATE CONSTRAINT itpux07_id_con;                                                                 --errorCREATE INDEX idx_itpux07_id    ON itpux07 (id);ALTER TABLE itpux07    ENABLE NOVALIDATE CONSTRAINT itpux07_id_con;                                                                 --okSELECT * FROM itpux07;</code></pre><h3 id="7-3-显示约束的信息"><a href="#7-3-显示约束的信息" class="headerlink" title="7.3 显示约束的信息"></a>7.3 显示约束的信息</h3><ul><li><p>1.约束的数据字典</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> all_constraints<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> dba_constraints<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> user_constraints<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token keyword">distinct</span> constraint_type <span class="token keyword">from</span> user_constraints <span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- R references : column</span><span class="token comment" spellcheck="true">-- U unique : column</span><span class="token comment" spellcheck="true">-- P primary key : column</span><span class="token comment" spellcheck="true">-- C check : column</span><span class="token comment" spellcheck="true">-- O read only on a view : object</span><span class="token comment" spellcheck="true">-- V Check on a view : object</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> all_cons_columns<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> dba_cons_columns<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> user_cons_columns<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> dba_constraints <span class="token keyword">where</span> table_name<span class="token operator">=</span><span class="token string">'ITPUX08'</span><span class="token punctuation">;</span></code></pre></li><li><p>2.约束的可延迟属性<br><code>`</code>sql<br>select * from dba_constraints where table_name=’ITPUX08’;</p></li></ul><p>–DEFERRABLE(延迟条件): NOT DEFERRABLE(默认，立即验证), DEFERRABLE（提<br>交时验证）<br>–DEFERRED ： IMMEDIATE(默认，立即验证)，DEFERRED（提交时才验证）,<br>–set constraint 名字immediate;<br>–用途：物化视图，级联更新。</p><p>create table itpux10(<br>id number not null primary key DEFERRABLE initially IMMEDIATE,<br>name varchar2(20),<br>age number constraint itpux10_age_con check(age&gt;17) DEFERRABLE<br>initially DEFERRED);</p><p>select * from dba_constraints where table_name=’ITPUX10’;</p><pre><code>## 8 视图的创建与管理### 8.1 语法```sqlCREATE [OR REPLACE] [FORCE|NOFORCE] VIEW view_name[(alias[, alias]...)]AS subquery[WITH CHECK OPTION [CONSTRAINT constraint]][WITH READ ONLY]OR REPLACE ：若所创建的试图已经存在，ORACLE 自动重建该视图；FORCE ：不管基表是否存在ORACLE 都会自动创建该视图；NOFORCE ：只有基表都存在ORACLE 才会创建该视图：alias ：为视图产生的列定义的别名；subquery ：一条完整的SELECT 语句，可以在该语句中定义别名；WITH CHECK OPTION ：插入或修改的数据行必须满足视图定义的约束；WITH READ ONLY ：该视图上不能进行任何DML 操作。-- O read only on a view : object-- V Check OPTION on a view : object</code></pre><h2 id="9-同义词创建和使用"><a href="#9-同义词创建和使用" class="headerlink" title="9 同义词创建和使用"></a>9 同义词创建和使用</h2><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--1.创建同义词</span><span class="token keyword">create</span> synonym yg_s <span class="token keyword">for</span> yg_v<span class="token punctuation">;</span><span class="token keyword">create</span> synonym bm_s <span class="token keyword">for</span> bm_v<span class="token punctuation">;</span><span class="token keyword">create</span> synonym bm_sum_s <span class="token keyword">for</span> bm_sum_v<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> yg_s<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> bm_s<span class="token punctuation">;</span><span class="token keyword">drop</span> <span class="token keyword">view</span> yg_v<span class="token punctuation">;</span><span class="token keyword">drop</span> <span class="token keyword">view</span> bm_v<span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">view</span> bm_sum_v compile<span class="token punctuation">;</span><span class="token keyword">drop</span> <span class="token keyword">view</span> bm_sum_v<span class="token punctuation">;</span><span class="token keyword">alter</span> synonym yg_s compile<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--2.删除同义词</span><span class="token keyword">drop</span> synonym yg_s<span class="token punctuation">;</span><span class="token keyword">drop</span> synonym bm_s<span class="token punctuation">;</span><span class="token keyword">drop</span> synonym bm_sum_s<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--3.查看同义词</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> dba_synonyms <span class="token keyword">where</span> owner<span class="token operator">=</span><span class="token string">'ITPUX'</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> all_synonyms<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> user_synonyms<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> scott<span class="token punctuation">.</span>emp<span class="token punctuation">;</span><span class="token keyword">create</span> synonym emp_s <span class="token keyword">for</span> scott<span class="token punctuation">.</span>emp<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp_s<span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token keyword">table</span> emp <span class="token keyword">as</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> scott<span class="token punctuation">.</span>emp<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--4.权限</span><span class="token keyword">grant</span> <span class="token keyword">create</span> synonym <span class="token keyword">to</span> itpux01<span class="token punctuation">;</span><span class="token keyword">grant</span> <span class="token keyword">create</span> <span class="token keyword">any</span> synonym <span class="token keyword">to</span> itpux01<span class="token punctuation">;</span><span class="token keyword">grant</span> <span class="token keyword">create</span> <span class="token keyword">public</span> synonym <span class="token keyword">to</span> itpux01<span class="token punctuation">;</span></code></pre><h2 id="10-序列创建和使用"><a href="#10-序列创建和使用" class="headerlink" title="10 序列创建和使用."></a>10 序列创建和使用.</h2><h3 id="10-1-语法"><a href="#10-1-语法" class="headerlink" title="10.1 语法"></a>10.1 语法</h3><pre class=" language-sql"><code class="language-sql">创建序列：<span class="token number">1</span>、要有创建序列的权限<span class="token keyword">create</span> sequence 或<span class="token keyword">create</span> <span class="token keyword">any</span> sequence<span class="token number">2</span>、创建序列的语法<span class="token keyword">CREATE</span> SEQUENCE sequence <span class="token comment" spellcheck="true">//创建序列名称</span>        <span class="token punctuation">[</span>INCREMENT <span class="token keyword">BY</span> n<span class="token punctuation">]</span> <span class="token comment" spellcheck="true">//递增的序列值是n 如果n 是正数就递增,如果是负数</span>        就递减默认是<span class="token number">1</span>        <span class="token punctuation">[</span><span class="token keyword">START</span> <span class="token keyword">WITH</span> n<span class="token punctuation">]</span> <span class="token comment" spellcheck="true">//开始的值,递增默认是minvalue 递减是maxvalue</span>        <span class="token punctuation">[</span>{MAXVALUE n <span class="token operator">|</span> NOMAXVALUE}<span class="token punctuation">]</span> <span class="token comment" spellcheck="true">//最大值</span>        <span class="token punctuation">[</span>{MINVALUE n <span class="token operator">|</span> NOMINVALUE}<span class="token punctuation">]</span> <span class="token comment" spellcheck="true">//最小值</span>        <span class="token punctuation">[</span>{CYCLE <span class="token operator">|</span> <span class="token keyword">NOCYCLE</span>}<span class="token punctuation">]</span> <span class="token comment" spellcheck="true">//循环/不循环</span>        <span class="token punctuation">[</span>{CACHE n <span class="token operator">|</span> NOCACHE}<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//分配并存入到内存中</span>    NEXTVAL 返回序列中下一个有效的值，任何用户都可以引用    CURRVAL 中存放序列的当前值    NEXTVAL 应在CURRVAL 之前指定，二者应同时有效</code></pre><h3 id="10-2-日常使用"><a href="#10-2-日常使用" class="headerlink" title="10.2 日常使用"></a>10.2 日常使用</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--创建普通序列</span><span class="token keyword">create</span> sequence seql <span class="token keyword">start</span> <span class="token keyword">with</span> <span class="token number">10</span> nocache maxvalue <span class="token number">15</span> cycle<span class="token punctuation">;</span><span class="token keyword">create</span> sequence seql1<span class="token comment" spellcheck="true">--创建一个带主键的表</span><span class="token keyword">drop</span> <span class="token keyword">table</span> seqtest<span class="token keyword">create</span> <span class="token keyword">table</span> seqtest<span class="token punctuation">(</span>    <span class="token number">c1</span> number<span class="token punctuation">,</span>    <span class="token number">c2</span> varchar2<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">table</span> seqtest <span class="token keyword">add</span> <span class="token keyword">constraint</span> seqtest_pk <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token punctuation">(</span><span class="token number">c1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">create</span> sequence seq_test_pk_s    minvalue <span class="token number">1</span>    maxvalue <span class="token number">9999999999999999</span>    <span class="token keyword">start</span> <span class="token keyword">with</span> <span class="token number">1</span>    increment <span class="token keyword">by</span> <span class="token number">1</span>    cache <span class="token number">20</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--间断</span>A:<span class="token keyword">insert</span> <span class="token keyword">into</span> seqtest <span class="token keyword">values</span> <span class="token punctuation">(</span>seq_test_pk_s<span class="token punctuation">.</span>nextval<span class="token punctuation">,</span><span class="token string">'11'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">commit</span><span class="token punctuation">;</span>B:<span class="token keyword">insert</span> <span class="token keyword">into</span> seqtest <span class="token keyword">values</span> <span class="token punctuation">(</span>seq_test_pk_s<span class="token punctuation">.</span>nextval<span class="token punctuation">,</span><span class="token string">'22'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>A:<span class="token keyword">insert</span> <span class="token keyword">into</span> seqtest <span class="token keyword">values</span> <span class="token punctuation">(</span>seq_test_pk_s<span class="token punctuation">.</span>nextval<span class="token punctuation">,</span><span class="token string">'33'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">commit</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> seqtest<span class="token punctuation">;</span>B:<span class="token keyword">rollback</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> seqtest<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--删除</span><span class="token keyword">drop</span> <span class="token keyword">table</span> seqtest<span class="token keyword">drop</span> sequence SEQ_TEST_PK_S</code></pre><h2 id="11-存储过程创建和使用"><a href="#11-存储过程创建和使用" class="headerlink" title="11 存储过程创建和使用"></a>11 存储过程创建和使用</h2><h3 id="11-1-语法"><a href="#11-1-语法" class="headerlink" title="11.1 语法"></a>11.1 语法</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token punctuation">[</span><span class="token operator">OR</span> REPLACE<span class="token punctuation">]</span> <span class="token keyword">PROCEDURE</span> procedure_name<span class="token punctuation">[</span><span class="token punctuation">(</span>parameter1<span class="token punctuation">[</span>model<span class="token punctuation">]</span> datatype1<span class="token punctuation">,</span> parameter2 <span class="token punctuation">[</span>model<span class="token punctuation">]</span> datatype2<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">IS</span><span class="token punctuation">[</span><span class="token keyword">AS</span><span class="token punctuation">]</span><span class="token keyword">BEGIN</span>PL<span class="token operator">/</span>SQL<span class="token punctuation">;</span><span class="token keyword">END</span> <span class="token punctuation">[</span>procedure_name<span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre><h3 id="11-2日常使用"><a href="#11-2日常使用" class="headerlink" title="11.2日常使用"></a>11.2日常使用</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--1.编写存储过程</span><span class="token comment" spellcheck="true">--显示当前系统时间</span><span class="token comment" spellcheck="true">--通过pl/sql dev 菜单</span><span class="token comment" spellcheck="true">--手写</span><span class="token keyword">create</span> <span class="token operator">or</span> replace <span class="token keyword">procedure</span> print_sysdate<span class="token operator">is</span><span class="token keyword">begin</span>    dbms_output<span class="token punctuation">.</span>put_line<span class="token punctuation">(</span>sysdate<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">end</span> print_sysdate<span class="token punctuation">;</span><span class="token operator">/</span><span class="token comment" spellcheck="true">--2.存储过程的调用</span><span class="token comment" spellcheck="true">--sqlplus,pl/sql 代码块</span><span class="token keyword">exec</span> print_sysdate<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--set serverout on;</span><span class="token comment" spellcheck="true">--exec print_sysdate();</span><span class="token comment" spellcheck="true">--3.存储过程的删除</span><span class="token keyword">drop</span> <span class="token keyword">procedure</span> test1<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--4.编译存储过程</span><span class="token comment" spellcheck="true">--界面</span><span class="token comment" spellcheck="true">--命令</span><span class="token keyword">alter</span> <span class="token keyword">procedure</span> print_sysdate compile<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--5.查询存储过程</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> dba_objects <span class="token keyword">where</span> object_type<span class="token operator">=</span><span class="token string">'PROCEDURE'</span> <span class="token operator">and</span>owner<span class="token operator">=</span><span class="token string">'ITPUX'</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> all_objects <span class="token keyword">where</span> object_type<span class="token operator">=</span><span class="token string">'PROCEDURE'</span> <span class="token operator">and</span> owner<span class="token operator">=</span><span class="token string">'ITPUX'</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> user_objects <span class="token keyword">where</span> object_type<span class="token operator">=</span><span class="token string">'PROCEDURE'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--6.查看存储过程的内容</span><span class="token comment" spellcheck="true">--界面</span><span class="token comment" spellcheck="true">--命令</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> user_source <span class="token keyword">where</span> name<span class="token operator">=</span><span class="token string">'PRINT_SYSDATE'</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> dba_source <span class="token keyword">where</span> owner<span class="token operator">=</span><span class="token string">'ITPUX'</span> <span class="token operator">and</span> name<span class="token operator">=</span><span class="token string">'PRINT_SYSDATE'</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> all_source<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token keyword">text</span> <span class="token keyword">from</span> user_source <span class="token keyword">where</span> name<span class="token operator">=</span><span class="token string">'PRINT_SYSDATE'</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> dba_source <span class="token keyword">where</span> <span class="token keyword">type</span><span class="token operator">=</span><span class="token string">'PROCEDURE'</span> <span class="token operator">and</span> <span class="token keyword">text</span> <span class="token operator">like</span> <span class="token string">'%sysdate%'</span><span class="token punctuation">;</span></code></pre><h3 id="11-3-存储过程中事务处理"><a href="#11-3-存储过程中事务处理" class="headerlink" title="11.3 存储过程中事务处理"></a>11.3 存储过程中事务处理</h3><ul><li>存储过程中事务处理<br><code>`</code>sql<br>–案例1 显示YG 表中员工人数的存储过程。<br>create or replace procedure yg_count<br>as<br>v_total number(10);<br>begin<br>  select count(*) into v_total from yg;<br>  dbms_output.put_line(‘员工总人数为：’||v_total);<br>end;<br>set serverout on;<br>execute yg_count;<br>–员工总人数为：107</li></ul><p>–案例2 存储过程中的增删改DML 事务操作。<br>–准备<br>create table itpux_st(id int,name varchar2(10));<br>insert into itpux_st values(1,’itpux01’);<br>insert into itpux_st values(2,’itpux02’);<br>commit;</p><p>–2.1 增加<br>–创建过程<br>create or replace procedure pro_insert<br>(v_id int,v_name varchar2)<br>is<br>begin<br>    insert into itpux_st values(v_id,v_name);<br>commit;<br>end;<br>–执行<br>begin<br>    pro_insert(3,’itpux03’);<br>end;<br>–检查<br>select * from itpux_st;</p><p>–2.2 删除<br>–创建过程<br>create or replace procedure pro_delete<br>(v_id int)<br>is<br>begin<br>    delete from itpux_st where id=v_id;<br>commit;<br>end;<br>–执行<br>begin<br>pro_delete(3);<br>end;<br>–检查<br>select * from itpux_st;</p><p>–2.3 更新/更改<br>–创建过程<br>create or replace procedure pro_update<br>(v_id int,v_name varchar2)<br>is<br>begin<br>    update itpux_st set name=v_name where id=v_id;<br>commit;<br>end;<br>–执行<br>begin<br>    pro_update(2,’itpux02222’);<br>end;<br>–检查<br>select * from itpux_st;</p><p>–2.4 查询<br>–创建过程<br>create or replace procedure pro_select<br>(v_id int) –定义输入变量<br>is<br>    v_name varchar2(10);–定义输出变量<br>begin<br>    select name into v_name from itpux_st where id=v_id;–执行查询<br>    dbms_output.put_line(‘学生姓名为：’||v_name);–输出结果<br>end;<br>–执行<br>–set serverout on;<br>begin<br>pro_select(2);<br>end;</p><pre><code>## 12 触发器创建和使用* 1.触发器的语法```sqlCREATE [OR REPLACE] TIGGER 触发器名触发时间触发事件    ON 表名/视图名    [FOR EACH ROW] //加上FOR EACH ROW 即为行级触发器，不加时为语句    级触发器    BEGIN    pl/sql 语句    END</code></pre><h3 id="12-1-DML-触发器及案例"><a href="#12-1-DML-触发器及案例" class="headerlink" title="12.1 DML 触发器及案例"></a>12.1 DML 触发器及案例</h3><ul><li><p>语法</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token punctuation">[</span><span class="token operator">or</span> replace<span class="token punctuation">]</span> <span class="token keyword">trigger</span> 触发器名称  {before<span class="token operator">|</span><span class="token keyword">after</span>}  {<span class="token keyword">insert</span><span class="token operator">|</span><span class="token keyword">delete</span><span class="token operator">|</span><span class="token keyword">update</span><span class="token punctuation">[</span><span class="token keyword">of</span> <span class="token keyword">column</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token keyword">column</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span>}  <span class="token operator">or</span> {<span class="token keyword">insert</span><span class="token operator">|</span><span class="token keyword">delete</span><span class="token operator">|</span><span class="token keyword">update</span><span class="token punctuation">[</span><span class="token keyword">of</span> <span class="token keyword">column</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token keyword">column</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span>}  <span class="token keyword">on</span> <span class="token punctuation">[</span><span class="token keyword">schema</span><span class="token punctuation">.</span><span class="token punctuation">]</span> 表名<span class="token operator">|</span><span class="token punctuation">[</span><span class="token keyword">schema</span><span class="token punctuation">.</span><span class="token punctuation">]</span>视图  <span class="token punctuation">[</span><span class="token keyword">for each row</span><span class="token punctuation">]</span>  <span class="token punctuation">[</span><span class="token keyword">when</span> condition<span class="token punctuation">]</span><span class="token keyword">begin</span>执行语句<span class="token punctuation">;</span><span class="token keyword">end</span><span class="token punctuation">;</span></code></pre></li><li><p>1.设置一个添加记录就提示的触发器<br><code>`</code>sql<br>create or replace trigger t1<br>after insert on itpux.emp<br>  begin</p><pre><code>  dbms_output.put_line(&#39;你向ITPUX.EMP 表中添加了一条数据&#39;);</code></pre><p>  end;<br>/</p></li></ul><p>–验证<br>–set serverout on<br>insert into emp values(‘8000’,’itpux15’,’DBA’,’8001’,sysdate,’15000’,’0’,’30’);<br>insert into emp values(‘8002’,’itpux16’,’DBA’,’8002’,sysdate,’15000’,’0’,’30’);<br>–你向ITPUX.EMP 表中添加了一条数据</p><pre><code>* 2.设置一个更改记录就提示的触发器```sqlcreate or replace trigger t_updateafter update on itpux.empfor each row --提示每一条修改的记录    begin    dbms_output.put_line(&#39;你修改了ITPUX.EMP 表中多条数据&#39;);    end;/--验证--set serverout onselect * from emp;update emp set job=&#39;DBA+SA+HR&#39; where ENAME in (&#39;itpux15&#39;,&#39;itpux16&#39;);--你修改了ITPUX.EMP 表中多条数据</code></pre><ul><li>3.设置一个删除记录就提示的触发器<pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token operator">or</span> replace <span class="token keyword">trigger</span> t_deletebefore <span class="token keyword">delete</span> <span class="token keyword">on</span> itpux<span class="token punctuation">.</span>emp<span class="token keyword">begin</span><span class="token comment" spellcheck="true">--select to_char(sysdate,'day') from dual;</span><span class="token keyword">if</span> to_char<span class="token punctuation">(</span>sysdate<span class="token punctuation">,</span><span class="token string">'day'</span><span class="token punctuation">)</span> <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token string">'星期六'</span><span class="token punctuation">,</span><span class="token string">'星期天'</span><span class="token punctuation">)</span> <span class="token keyword">then</span>  dbms_output<span class="token punctuation">.</span>put_line<span class="token punctuation">(</span><span class="token string">'禁止在周末删除ITPUX.EMP 表数据'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  raise_application_error<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">20001</span><span class="token punctuation">,</span><span class="token string">'禁止在周末删除ITPUX.EMP 表数据'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">--</span><span class="token operator">-</span><span class="token number">20000</span><span class="token operator">~</span><span class="token number">20999</span><span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span><span class="token keyword">end</span><span class="token punctuation">;</span><span class="token operator">/</span><span class="token comment" spellcheck="true">--验证</span><span class="token comment" spellcheck="true">--set serverout on</span><span class="token keyword">delete</span> <span class="token keyword">from</span> emp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--ORA-20001: 禁止在周末删除ITPUX.EMP 表数据</span></code></pre></li></ul><h3 id="12-2-DDL-触发器及案例"><a href="#12-2-DDL-触发器及案例" class="headerlink" title="12.2 DDL 触发器及案例"></a>12.2 DDL 触发器及案例</h3><ul><li>语法<pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token operator">or</span> replace <span class="token keyword">trigger</span> ddl 触发器名称<span class="token keyword">after</span> ddl <span class="token keyword">on</span> 方案名<span class="token punctuation">.</span><span class="token keyword">schema</span><span class="token keyword">begin</span>  执行语句<span class="token punctuation">;</span><span class="token keyword">end</span><span class="token punctuation">;</span></code></pre></li><li>基本使用<pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--SYSTEM 用户</span><span class="token keyword">drop</span> <span class="token keyword">table</span> itpux_ddl01<span class="token keyword">create</span> <span class="token keyword">table</span> itpux_ddl01<span class="token punctuation">(</span>  dbname varchar2<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  event varchar2<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  username varchar2<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  client_ip varchar2<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  ddl_time <span class="token keyword">date</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token operator">or</span> replace <span class="token keyword">trigger</span> t_itpux_ddl01<span class="token keyword">after</span> ddl <span class="token keyword">on</span> itpux<span class="token punctuation">.</span><span class="token keyword">schema</span><span class="token keyword">begin</span>  <span class="token keyword">insert</span> <span class="token keyword">into</span> itpux_ddl01 <span class="token keyword">values</span><span class="token punctuation">(</span>ora_database_name<span class="token punctuation">,</span>ora_sysevent<span class="token punctuation">,</span>ora_login_user<span class="token punctuation">,</span>ora_client_ip_address<span class="token punctuation">,</span>  sysdate<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--切换至ITPUX 用户</span><span class="token keyword">create</span> <span class="token keyword">table</span> itpux012<span class="token punctuation">(</span>id number<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> system<span class="token punctuation">.</span>itpux_ddl01<span class="token punctuation">;</span></code></pre><h3 id="12-3-参考资料"><a href="#12-3-参考资料" class="headerlink" title="12.3 参考资料"></a>12.3 参考资料</h3><code>`</code>sql<br>系统触发器创建基本语法：<br>create or replace trigger 系统触发器名称<br>after[before] logon[logoff] on datebase<br>begin<br>  执行语句;<br>end;</li></ul><p>详细说明：<br>after 事件之后触发<br>before 事件之前触发<br>logon 登陆触发<br>logoff 登出触发<br>startup 开启系统触发<br>shutdown 关闭系统触发</p><pre><code>```sql------------------------------参考资料---------------------------------------下面介绍一些常用的系统事件属性函数，和建立各种事件触发器的方法在建立系统事件触发器时，需要使用事件属性函数，常用的事件属性函数如下：ora_client_ip_address //返回客户端的ipora_database_name //返回数据库名称ora_login_user //返回登陆用户名ora_sysevent //返回触发器的系统事件名ora_des_encrypted_password //返回用户des(md5)加密后的密码事件属性函数表Ora_client_ip_address 返回客户端的ip 地址Ora_database_name 返回当前数据库名Ora_des_encrypted_password 返回des 加密后的用户口令Ora_dict_obj_name 返回ddl 操作所对应的数据库对象名Ora_dict_obj_name_list(name_list out ora_name_list_t)返回在事件中被修改的对象名列表Ora_dict_obj_owner 返回ddl 操作所对应的对象的所有者名Ora_dict_obj_owner_list(owner_list out ora_name_list_t)返回在事件中被修改的对象的所有者列表Ora_dict_obj_type 返回ddl 操作所对应的数据库对象的类型Ora_grantee(user_list out ora_name_list_t)返回授权事件的授权者Ora_instance_num 返回例程号Ora_is_alter_column(column_name in varchar2)检测特定列是否被修改Ora_is_creating_nested_table 检测是否正在建立嵌套表Ora_is_drop_column(column_name in varchar2)检测特定列是否被删除Ora_is_servererror(error_number)检测是否返回了特定oracle 错误Ora_login_user 返回登录用户名Ora_sysevent 返回触发器的系统事件名系统触发器的种类和事件出现的时机（前或后）：事件允许的时机说明STARTUP AFTER 启动数据库实例之后触发SHUTDOWN BEFORE 关闭数据库实例之前触发（非正常关闭不触发）SERVERERROR AFTER 数据库服务器发生错误之后触发LOGON AFTER 成功登录连接到数据库后触发LOGOFF BEFORE 开始断开数据库连接之前触发CREATE BEFORE，AFTER 在执行CREATE 语句创建数据库对象之前、之后触发DROP BEFORE，AFTER 在执行DROP 语句删除数据库对象之前、之后触发ALTER BEFORE，AFTER 在执行ALTER 语句更新数据库对象之前、之后触发DDL BEFORE，AFTER 在执行大多数DDL 语句之前、之后触发GRANT BEFORE，AFTER 执行GRANT 语句授予权限之前、之后触发REVOKE BEFORE，AFTER 执行REVOKE 语句收权限之前、之后触犯发RENAME BEFORE，AFTER 执行RENAME 语句更改数据库对象名称之前、之后触犯发AUDIT/NOAUDIT BEFORE，AFTER 执行AUDIT 或NOAUDIT 进行审计或停止审计之前、之后触发特别说明：系统触发器的级别较高，由系统管理员来创建。------------------------------------------------------------------------------------</code></pre><h3 id="12-4-数据库系统触发器"><a href="#12-4-数据库系统触发器" class="headerlink" title="12.4 数据库系统触发器"></a>12.4 数据库系统触发器</h3><ul><li>1.创建<br><code>`</code>sql<br>–记录登录数据库的用户名和IP<br>create table login_info (ip varchar(30),username varchar(30));<br>create or replace trigger logon_ip_info<br>after logon on database<br>declare<br>  ip varchar(30);<br>  user varchar(30);<br>begin<br>  select sys_context(‘USERENV’,’SESSION_USER’) into user from dual;<br>  select sys_context(‘USERENV’,’ip_address’) into ip from dual;<br>  insert into login_info values(ip,user);<br>end;<br>/</li></ul><p>select * from login_info;</p><pre><code>* 2. 管理```sql--禁用alter trigger logon_ip_info disable;--启用alter trigger logon_ip_info enable;--编译alter trigger logon_ip_info compile;--删除drop trigger logon_ip_info;--查询select * from dba_objects where owner=&#39;ITPUX&#39; and object_type=&#39;TRIGGER&#39;;drop trigger ITPUX.T_UPDATE;drop trigger ITPUX.T_DELETE;drop trigger system.t_itpux_ddl01;</code></pre><h2 id="13-包的创建和使用"><a href="#13-包的创建和使用" class="headerlink" title="13 包的创建和使用"></a>13 包的创建和使用</h2><ul><li>1 包定义（PACKAGE）<pre class=" language-sql"><code class="language-sql"><span class="token number">2.1</span> 包定义（PACKAGE）<span class="token keyword">CREATE</span> <span class="token punctuation">[</span><span class="token operator">OR</span> REPLACE<span class="token punctuation">]</span> PACKAGE package_name  {<span class="token operator">IS</span> <span class="token operator">|</span> <span class="token keyword">AS</span>}  <span class="token punctuation">[</span>公有数据类型定义<span class="token punctuation">]</span>  <span class="token punctuation">[</span>公有游标声明<span class="token punctuation">]</span>  <span class="token punctuation">[</span>公有变量、常量声明<span class="token punctuation">]</span>  <span class="token punctuation">[</span>公有子程序声明<span class="token punctuation">]</span>  <span class="token punctuation">[</span>package_name<span class="token punctuation">]</span><span class="token punctuation">;</span>定义包规范:<span class="token keyword">CREATE</span> <span class="token operator">OR</span> REPLACEpackage p_stu<span class="token keyword">as</span><span class="token comment" spellcheck="true">--定义结构体</span><span class="token keyword">type</span> re_stu <span class="token operator">is</span> record<span class="token punctuation">(</span>  rname student<span class="token punctuation">.</span>name<span class="token operator">%</span><span class="token keyword">type</span><span class="token punctuation">,</span>  rage student<span class="token punctuation">.</span>age<span class="token operator">%</span><span class="token keyword">type</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--定义游标</span><span class="token keyword">type</span> c_stu <span class="token operator">is</span> ref <span class="token keyword">cursor</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--定义函数</span><span class="token keyword">function</span> numAdd<span class="token punctuation">(</span>num1 number<span class="token punctuation">,</span>num2 number<span class="token punctuation">)</span><span class="token keyword">return</span> number<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--定义过程</span><span class="token keyword">procedure</span> GetStuList<span class="token punctuation">(</span>cid <span class="token operator">in</span> varchar2<span class="token punctuation">,</span>c_st <span class="token keyword">out</span> c_stu<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span><span class="token punctuation">;</span></code></pre></li><li><ol start="2"><li>包主体（PACKAGE BODY）<br><code>`</code>sql<br>CREATE [OR REPLACE] PACKAGE BODY package_name<br>{IS | AS}<br>[私有数据类型定义]<br>[私有变量、常量声明]<br>[私有子程序声明和定义]<br>[公有子程序定义]<br>BEGIN<br>执行部分(初始化部分)<br>END [package_name];</li></ol></li></ul><p>–1 创建包<br>create or replace package itpux_pkg<br>is<br>    procedure update_sal(e_name varchar2,newsal number);<br>    FUNCTION emp_sal_fun(e_name varchar2) return number;<br>end;<br>–2.3 包体<br>create or replace package body itpux_pkg is<br>procedure update_sal(e_name varchar2,newsal number)<br>is<br>begin<br>    update emp set sal=newsal where ename=e_name;<br>end;<br>function emp_sal_fun(e_name varchar2)<br>return number is<br>emp_sal number;<br>begin<br>    select sal<em>12+nvl(comm,0) into emp_sal from emp<br>where ename=e_name;<br>return emp_sal;<br>end;<br>end;<br>–2.4 执行包-调过程<br>set serveroutput on<br>    exec itpux_pkg.update_sal(‘itpux14’,2000);<br>commit;<br>select </em> from emp;<br>–查看itpux14 的记录<br>–2.5 执行包-调函数<br>declare<br>    v_emp_sal number(7,2);<br>begin<br>    v_emp_sal:=itpux_pkg.emp_sal_fun(‘itpux14’);<br>    dbms_output.put_line(‘ITPUX14 的年薪为: ‘||v_emp_sal);<br>end;<br>–ITPUX14 的年薪为: 24000<br>–2.6 删除包<br>select * from dba_objects where owner=’ITPUX’ and object_type=’PACKAGE’;<br>drop package ITPUX_PKG;<br>drop package ITPUXA_PKG;<br><code>`</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;SQL语言之DDL和对象管理&quot;&gt;&lt;a href=&quot;#SQL语言之DDL和对象管理&quot; class=&quot;headerlink&quot; title=&quot;SQL语言之DDL和对象管理&quot;&gt;&lt;/a&gt;SQL语言之DDL和对象管理&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://docs.
      
    
    </summary>
    
      <category term="Oracle" scheme="https://kyle.github.io/categories/Oracle/"/>
    
    
      <category term="Oracle" scheme="https://kyle.github.io/tags/Oracle/"/>
    
      <category term="SQL" scheme="https://kyle.github.io/tags/SQL/"/>
    
      <category term="DDL" scheme="https://kyle.github.io/tags/DDL/"/>
    
  </entry>
  
  <entry>
    <title>Oracle数据库逻辑备份恢复迁移之exp与imp</title>
    <link href="https://kyle.github.io/2018/10/02/oracle/oracle-shu-ju-ku-luo-ji-bei-fen-hui-fu-qian-yi-zhi-exp-yu-imp/"/>
    <id>https://kyle.github.io/2018/10/02/oracle/oracle-shu-ju-ku-luo-ji-bei-fen-hui-fu-qian-yi-zhi-exp-yu-imp/</id>
    <published>2018-10-02T06:25:00.000Z</published>
    <updated>2019-05-03T15:55:51.284Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Oracle数据库逻辑备份恢复迁移之exp与imp"><a href="#Oracle数据库逻辑备份恢复迁移之exp与imp" class="headerlink" title="Oracle数据库逻辑备份恢复迁移之exp与imp"></a>Oracle数据库逻辑备份恢复迁移之exp与imp</h1><p>[Oracle 11G R2 官方文档][1] </p><h2 id="1-export与import逻辑备份恢复概述"><a href="#1-export与import逻辑备份恢复概述" class="headerlink" title="1.export与import逻辑备份恢复概述"></a>1.export与import逻辑备份恢复概述</h2><h3 id="1-1-备份概述"><a href="#1-1-备份概述" class="headerlink" title="1.1 备份概述"></a>1.1 备份概述</h3><ul><li>备份可分为两类，物理备份和逻辑备份<blockquote><p>&emsp;&emsp;物理备份：该方法实现数据库的完整恢复，但需要极大的外部存储设备，例如磁带库，具体包括冷备份和热备份。冷备份和热备份(热备份要求数据库运行在归档模式下)都是物理备份，它涉及到组成数据库的文件，但不考虑逻辑内容。<br>&emsp;&emsp;逻辑备份： 使用软件技术从数据库中导出数据并写入一个输出文件，该文件的格式一般与原数据库的文件格式不同，只是 原数据库中数据内容的一个映像。因此，逻辑备份文件只能用来对数据库进行逻辑恢复，即数据导入，而不能按数据库原来的存储特征进行物理恢复。逻辑备份一般 用于增量备份，即备份那些在上次备份以后改变的数据。<br>&emsp;&emsp;Oracle 的导出导入是一个很常用的迁移工具。 在Oracle 10g以后，Oracle 推出了数据泵(expdp/impdp).它可以通过使用并行，从而在效率上要比exp/imp 要高。但是这个exp/imp很多时候还需要使用。<br>&emsp;&emsp;导入/导出是ORACLE幸存的最古老的两个命令行工具，其实我从来不认为Exp/Imp是一种好的备份方式，正确的说法是Exp/Imp只能是一个好的转储工具，特别是在小型数据库的转储，表空间的迁移，表的抽取，检测逻辑和物理冲突等中有不小的功劳。当然，我们也可以把它作为小型数据库的物理备份后的一个逻辑辅助备份，也是不错的建议。对于越来越大的数据库，特别是TB级数据库和越来越多数据仓库的出现，EXP/IMP越来越力不从心了，这个时候，数据库的备份都转向了RMAN和第三方工具。下面说明一下EXP/IMP的使用。</p></blockquote></li></ul><h2 id="2-export与import参数详解"><a href="#2-export与import参数详解" class="headerlink" title="2.export与import参数详解"></a>2.export与import参数详解</h2><h3 id="2-1-export参数详解"><a href="#2-1-export参数详解" class="headerlink" title="2.1 export参数详解"></a>2.1 export参数详解</h3><pre class=" language-shell"><code class="language-shell">[oracle@orcl:/]$exp -helpExport: Release 11.2.0.4.0 - Production on Tue Jan 30 18:30:39 2018Copyright (c) 1982, 2011, Oracle and/or its affiliates.  All rights reserved.You can let Export prompt you for parameters by entering the EXPcommand followed by your username/password:     Example: EXP SCOTT/TIGEROr, you can control how Export runs by entering the EXP command followedby various arguments. To specify parameters, you use keywords:     Format:  EXP KEYWORD=value or KEYWORD=(value1,value2,...,valueN)     Example: EXP SCOTT/TIGER GRANTS=Y TABLES=(EMP,DEPT,MGR)               or TABLES=(T1:P1,T1:P2), if T1 is partitioned tableUSERID must be the first parameter on the command line.Keyword    Description (Default)      Keyword      Description (Default)--------------------------------------------------------------------------USERID     username/password          FULL         export entire file (N)BUFFER     size of data buffer        OWNER        list of owner usernamesFILE       output files (EXPDAT.DMP)  TABLES       list of table namesCOMPRESS   import into one extent (Y) RECORDLENGTH length of IO recordGRANTS     export grants (Y)          INCTYPE      incremental export typeINDEXES    export indexes (Y)         RECORD       track incr. export (Y)DIRECT     direct path (N)            TRIGGERS     export triggers (Y)LOG        log file of screen output  STATISTICS   analyze objects (ESTIMATE)ROWS       export data rows (Y)       PARFILE      parameter filenameCONSISTENT cross-table consistency(N) CONSTRAINTS  export constraints (Y)OBJECT_CONSISTENT    transaction set to read only during object export (N)FEEDBACK             display progress every x rows (0)FILESIZE             maximum size of each dump fileFLASHBACK_SCN        SCN used to set session snapshot back toFLASHBACK_TIME       time used to get the SCN closest to the specified timeQUERY                select clause used to export a subset of a tableRESUMABLE            suspend when a space related error is encountered(N)RESUMABLE_NAME       text string used to identify resumable statementRESUMABLE_TIMEOUT    wait time for RESUMABLE TTS_FULL_CHECK       perform full or partial dependency check for TTSVOLSIZE              number of bytes to write to each tape volumeTABLESPACES          list of tablespaces to exportTRANSPORT_TABLESPACE export transportable tablespace metadata (N)TEMPLATE             template name which invokes iAS mode exportExport terminated successfully without warnings.</code></pre><ul><li>EXP的所有参数（括号中为参数的默认值）：<blockquote><p>可以通过exp help=y或者imp help=y查看exp或imp的详细参数，下面以exp为例解释参数意义<br>USERID：用户名/口令</p></blockquote></li></ul><blockquote><p>FULL：导出整个数据库，只有拥有exp_full_database角色的用户或者特权用户如sys，system等才能进行全库导出。 示例如下<br>exp “‘/ as sysdba’” full=y</p></blockquote><blockquote><p>BUFFER：制定数据缓冲区大小，主要用于提高exp/imp速度，该单位为字节，不能写成buffer=1m的形式，应写成字节为单位的参数，如buffer=1048576<br>exp hr/hr file=t_b.dmp buffer= 1048576 tables=T</p></blockquote><blockquote><p>OWNER：需要导出的用户，示例如下<br>exp “‘/ as sysdba’” owner=(hr,ITPUX02) file=hr_ITPUX02.dmp<br>上例中由于是在linux平台进行测试的，需要对 owner=(hr,ITPUX02)使用\进行转义</p></blockquote><blockquote><p>FILE：输出文件</p></blockquote><blockquote><p>TABLES：需要导出的表</p></blockquote><blockquote><p>COMPRESS：导入到一个区 (Y) 。主要目的是为了消除存储碎片，以保证某张表的所有记录都存储在连续的空间里。 但是负面效应很明显， 如果该参数值为y，则会将高水位线以下的所有extent导入到一个区中， 因此在导入时很有可能出现，明明表中数据很少，但是却花了很多时间在建立的extent上。 且自oracle9i开始，使用了本地管理的表空间，存储碎片的问题应该比低版本好多了，个人建议将compress设为n。</p></blockquote><ul><li><p>DIRECT：直接路径 (N)。</p><blockquote><p>传统模式导出和直接路径导出的原理<br>传 统模式导出相当于使用select语句从表中取出数据，数据从磁盘上先读到buffer cache中，记录被转移到一个评估检测的缓冲区中，数据经过语法检测后没有问题，将数据传给PGA，最后写入导出的文件中。如果使用Direct Path模式导出，数据直接从磁盘上读取到导出的PGA中：记录直接被转换导出会话的私有buffer中。这也就是意味着SQL语句处理层被忽略掉了，因 为数据已经是符合导出的格式了，不需要其他的转换处理了。数据直接被传送给导出的客户端，最后写入导出文件。过程可概况如下</p><pre class=" language-shell"><code class="language-shell">direct=n datafile---->sga----->pga----->dumpdirect=y datafile---->pga----->dump</code></pre><p>传统路径导出VS直接路径导出(oracle exp direct=y)两者的差异<br>a、 Conventional path Export<br>&emsp;&emsp; 传统路径模式使用SQL SELECT语句抽取表数据。数据从磁盘读入到buffer cache缓冲区中，行被转移到评估缓冲区。在此之后根据SQL表达式，将记录返回给导出客户端，然后写入到dump文件。<br>b、Direct path Export<br>&emsp;&emsp; 直接导出模式，数据直接从磁盘中读取到导出session的PGA中，行被直接转移到导出session的私有缓冲区，从而跳过SQL命令处理层。<br>避免了不必要的数据转换。最后记录返回给导出客户端，写到dump文件。</p></blockquote></li><li><p>传统路径导出VS直接路径导出(oracle exp direct=y)性能问题</p><blockquote><p>&emsp;&emsp; a、直接路径导出方式比传统路径方式具有更优的性能，速度更快，因为绕过了SQL命令处理部分。<br>&emsp;&emsp; b、直接路径导出方式支持RECORDLENGTH参数(最大为64k)，该参数值通常建议设置为系统I/O或者DB_BLOCK_SIZE的整数倍<br>&emsp;&emsp; c、影响直接路径导出的具体因素(DB_BLOCK_SIZE，列的类型，I/O性能，即数据文件所在的磁盘驱动器是否单独于dump文件所在的磁盘驱动器)<br>&emsp;&emsp; d、无论是直接路径导出还是传统路径导出产生的dump，在使用imp方式导入时，会耗用相同的时间.</p></blockquote></li><li><p>传统路径导出VS直接路径导出(oracle exp direct=y)直接路径导出的限制</p><blockquote><p>a、直接路径导出不支持交互模式<br>b、不支持表空间传输模式(即transport_tablespaces=y不被支持)，支持的是full,owner,tables导出方式<br>c、不支持query查询方式，如exp scott/tiger tables=emp query=\”where job=\’salesman\’ \” 不被支持<br>d、直接路径导出使用recordlength设置一次可以导出数据的量，取代传统路径使用buffer的设置<br>e、直接路径导出要求nls_lang环境参数等于数据库字符集，负责收到exp-41警告及exp-0终止错误</p></blockquote></li></ul><blockquote><p>GRANTS：导出权限 (Y)<br>INCTYPE：增量导出类型，已废除<br>INDEXES：导出索引 (Y)<br>RECORD：跟踪增量导出 (Y) ，已废除<br>TRIGGERS：导出触发器 (Y)<br>LOG：屏幕输出的日志文件</p></blockquote><blockquote><p>STATISTICS：在导出文件中保留对象的统计信息，默认值ESTIMATE，还可以为compute或者none。如果导出时出现<br>EXP-00091: Exporting questionable statistics<br>可以考虑将 STATISTICS设置为NONE<br>ROWS：确定表中的数据行是否导出，默认为Y，导出</p></blockquote><blockquote><p>QUERY：用于导出表的子集的select子句，示例如下<br>exp hr/hr file=emp_q.dmp tables=employees query=\”where hire_date >to_date(\’1999-01-01\’\,\’yyyy-mm-dd\’)\”</p></blockquote><ul><li>PARFILE：参数文件名，可以用如下方式导出<pre class=" language-sql"><code class="language-sql">exp hr<span class="token operator">/</span>hr parfile<span class="token operator">=</span>parfile$ cat parfile<span class="token keyword">file</span><span class="token operator">=</span>t_p<span class="token punctuation">.</span>dmpcompress<span class="token operator">=</span>y<span class="token keyword">rows</span><span class="token operator">=</span>y<span class="token keyword">tables</span><span class="token operator">=</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>empl<span class="token operator">%</span>s<span class="token punctuation">)</span></code></pre></li></ul><blockquote><p>使用parfile参数可以对频繁进行的导出操作进行反复调用，同时也可以避免不同操作系统之间需要对特定字符进行转义的烦恼，如下例</p><pre class=" language-sql"><code class="language-sql">exp hr<span class="token operator">/</span>hr parfile<span class="token operator">=</span>parfile$cat parfile<span class="token keyword">file</span><span class="token operator">=</span>t_p<span class="token punctuation">.</span>dmpcompress<span class="token operator">=</span>y<span class="token keyword">rows</span><span class="token operator">=</span>y<span class="token keyword">tables</span><span class="token operator">=</span>employees<span class="token keyword">statistics</span><span class="token operator">=</span>nonequery<span class="token operator">=</span><span class="token string">"where hire_date>to_date('1999-01-01','yyyy-mm-dd')"</span></code></pre><p>CONSISTENT：在导出时，将影响正在导出的表的事务设为只读，主要作用于嵌套表和分区表，默认为N。<br>CONSTRAINTS：导出的约束条件 (Y)<br>OBJECT_CONSISTENT:只在对象导出期间设置为只读的事务处理 (N)<br>FEEDBACK:每 x 行显示进度，默认为0<br>FILESIZE：每个导出文件的最大大小<br>FLASHBACK_SCN：用于将会话快照设置回以前状态的SCN<br>FLASHBACK_TIME：用于获取最接近指定时间的SCN的时间<br>RESUMABLE：遇到空间不足时的错误时挂起，默认为N，需与 RESUMABLE_NAME和 RESUMABLE_TIMEOUT一起使用<br>RESUMABLE_NAME：用于标示哪个会话需要使用 RESUMABLE选项，格式为 User USERNAME (USERID), Session SESSIONID, Instance INSTANCEID<br>RESUMABLE_TIMEOUT：RESUMABLE的等待时间，默认为7200s，如果在指定时间内未解决问题，则操作中断<br>TTS_FULL_CHECK：对TTS执行完整或部分相关性检查<br>TABLESPACES：要导出的表空间列表，示例如下<br>exp “‘/ as sysdba’” file=t_ts.dmp tablespaces=(users,example)<br>TRANSPORT_TABLESPACE 导出可传输的表空间元数据 (N)<br>直接备份到磁带上<br>exp icdmain/icd rows=y indexes=n compress=n buffer=65536 feedback=100000 file=/dev/rmt0 log=exp.log tables=(tab1,tab2,tab3)<br>注：在磁盘空间允许的情况下，应先备份到本地服务器，然后再拷贝到磁带。出于速度方面的考虑，尽量不要直接备份到磁带设备</p></blockquote><h3 id="2-2-import参数详解"><a href="#2-2-import参数详解" class="headerlink" title="2.2 import参数详解"></a>2.2 import参数详解</h3><pre class=" language-sql"><code class="language-sql"><span class="token punctuation">[</span>oracle<span class="token variable">@orcl</span>:<span class="token operator">/</span><span class="token punctuation">]</span>$imp <span class="token operator">-</span>help<span class="token keyword">Import</span>: <span class="token keyword">Release</span> <span class="token number">11.2</span><span class="token punctuation">.</span><span class="token number">0.4</span><span class="token punctuation">.</span><span class="token number">0</span> <span class="token operator">-</span> Production <span class="token keyword">on</span> Tue Jan <span class="token number">30</span> <span class="token number">19</span>:<span class="token number">01</span>:<span class="token number">13</span> <span class="token number">2018</span>Copyright <span class="token punctuation">(</span><span class="token number">c</span><span class="token punctuation">)</span> <span class="token number">1982</span><span class="token punctuation">,</span> <span class="token number">2011</span><span class="token punctuation">,</span> Oracle <span class="token operator">and</span><span class="token operator">/</span><span class="token operator">or</span> its affiliates<span class="token punctuation">.</span>  <span class="token keyword">All</span> rights reserved<span class="token punctuation">.</span>You can let <span class="token keyword">Import</span> prompt you <span class="token keyword">for</span> parameters <span class="token keyword">by</span> entering the IMPcommand followed <span class="token keyword">by</span> your username<span class="token operator">/</span>password:     Example: IMP SCOTT<span class="token operator">/</span>TIGER<span class="token operator">Or</span><span class="token punctuation">,</span> you can control how <span class="token keyword">Import</span> runs <span class="token keyword">by</span> entering the IMP command followed<span class="token keyword">by</span> various arguments<span class="token punctuation">.</span> <span class="token keyword">To</span> specify parameters<span class="token punctuation">,</span> you <span class="token keyword">use</span> keywords:     Format:  IMP KEYWORD<span class="token operator">=</span><span class="token keyword">value</span> <span class="token operator">or</span> KEYWORD<span class="token operator">=</span><span class="token punctuation">(</span>value1<span class="token punctuation">,</span>value2<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span>valueN<span class="token punctuation">)</span>     Example: IMP SCOTT<span class="token operator">/</span>TIGER <span class="token keyword">IGNORE</span><span class="token operator">=</span>Y <span class="token keyword">TABLES</span><span class="token operator">=</span><span class="token punctuation">(</span>EMP<span class="token punctuation">,</span>DEPT<span class="token punctuation">)</span> <span class="token keyword">FULL</span><span class="token operator">=</span>N               <span class="token operator">or</span> <span class="token keyword">TABLES</span><span class="token operator">=</span><span class="token punctuation">(</span>T1:P1<span class="token punctuation">,</span>T1:P2<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">if</span> T1 <span class="token operator">is</span> partitioned <span class="token keyword">table</span>USERID must <span class="token number">be</span> the <span class="token keyword">first</span> parameter <span class="token keyword">on</span> the command line<span class="token punctuation">.</span>Keyword  Description <span class="token punctuation">(</span><span class="token keyword">Default</span><span class="token punctuation">)</span>       Keyword      Description <span class="token punctuation">(</span><span class="token keyword">Default</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">--------------------------------------------------------------------------</span>USERID   username<span class="token operator">/</span>password           <span class="token keyword">FULL</span>         <span class="token keyword">import</span> entire <span class="token keyword">file</span> <span class="token punctuation">(</span>N<span class="token punctuation">)</span>BUFFER   size <span class="token keyword">of</span> <span class="token keyword">data</span> buffer         FROMUSER     list <span class="token keyword">of</span> owner usernames<span class="token keyword">FILE</span>     input files <span class="token punctuation">(</span>EXPDAT<span class="token punctuation">.</span>DMP<span class="token punctuation">)</span>    TOUSER       list <span class="token keyword">of</span> usernames<span class="token keyword">SHOW</span>     just list <span class="token keyword">file</span> contents <span class="token punctuation">(</span>N<span class="token punctuation">)</span> <span class="token keyword">TABLES</span>       list <span class="token keyword">of</span> <span class="token keyword">table</span> names<span class="token keyword">IGNORE</span>   <span class="token keyword">ignore</span> <span class="token keyword">create</span> <span class="token keyword">errors</span> <span class="token punctuation">(</span>N<span class="token punctuation">)</span>    RECORDLENGTH length <span class="token keyword">of</span> IO recordGRANTS   <span class="token keyword">import</span> grants <span class="token punctuation">(</span>Y<span class="token punctuation">)</span>           INCTYPE      incremental <span class="token keyword">import</span> <span class="token keyword">type</span>INDEXES  <span class="token keyword">import</span> indexes <span class="token punctuation">(</span>Y<span class="token punctuation">)</span>          <span class="token keyword">COMMIT</span>       <span class="token keyword">commit</span> array <span class="token keyword">insert</span> <span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token keyword">ROWS</span>     <span class="token keyword">import</span> <span class="token keyword">data</span> <span class="token keyword">rows</span> <span class="token punctuation">(</span>Y<span class="token punctuation">)</span>        PARFILE      parameter filenameLOG      log <span class="token keyword">file</span> <span class="token keyword">of</span> screen output   CONSTRAINTS  <span class="token keyword">import</span> constraints <span class="token punctuation">(</span>Y<span class="token punctuation">)</span>DESTROY                overwrite <span class="token keyword">tablespace</span> <span class="token keyword">data</span> <span class="token keyword">file</span> <span class="token punctuation">(</span>N<span class="token punctuation">)</span>INDEXFILE              <span class="token keyword">write</span> <span class="token keyword">table</span><span class="token operator">/</span><span class="token keyword">index</span> info <span class="token keyword">to</span> specified <span class="token keyword">file</span>SKIP_UNUSABLE_INDEXES  skip maintenance <span class="token keyword">of</span> unusable indexes <span class="token punctuation">(</span>N<span class="token punctuation">)</span>FEEDBACK               display progress every x <span class="token keyword">rows</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>TOID_NOVALIDATE        skip validation <span class="token keyword">of</span> specified <span class="token keyword">type</span> ids FILESIZE               maximum size <span class="token keyword">of</span> each <span class="token keyword">dump</span> <span class="token keyword">file</span><span class="token keyword">STATISTICS</span>             <span class="token keyword">import</span> precomputed <span class="token keyword">statistics</span> <span class="token punctuation">(</span>always<span class="token punctuation">)</span>RESUMABLE              suspend <span class="token keyword">when</span> <span class="token number">a</span> space related error <span class="token operator">is</span> encountered<span class="token punctuation">(</span>N<span class="token punctuation">)</span>RESUMABLE_NAME         <span class="token keyword">text</span> string used <span class="token keyword">to</span> identify resumable statementRESUMABLE_TIMEOUT      wait time <span class="token keyword">for</span> RESUMABLE COMPILE                compile procedures<span class="token punctuation">,</span> packages<span class="token punctuation">,</span> <span class="token operator">and</span> functions <span class="token punctuation">(</span>Y<span class="token punctuation">)</span>STREAMS_CONFIGURATION  <span class="token keyword">import</span> streams general metadata <span class="token punctuation">(</span>Y<span class="token punctuation">)</span>STREAMS_INSTANTIATION  <span class="token keyword">import</span> streams instantiation metadata <span class="token punctuation">(</span>N<span class="token punctuation">)</span>DATA_ONLY              <span class="token keyword">import</span> only <span class="token keyword">data</span> <span class="token punctuation">(</span>N<span class="token punctuation">)</span>VOLSIZE                number <span class="token keyword">of</span> bytes <span class="token operator">in</span> <span class="token keyword">file</span> <span class="token keyword">on</span> each volume <span class="token keyword">of</span> <span class="token number">a</span> <span class="token keyword">file</span> <span class="token keyword">on</span> tapeThe <span class="token keyword">following</span> keywords only <span class="token keyword">apply</span> <span class="token keyword">to</span> transportable tablespacesTRANSPORT_TABLESPACE <span class="token keyword">import</span> transportable <span class="token keyword">tablespace</span> metadata <span class="token punctuation">(</span>N<span class="token punctuation">)</span>TABLESPACES tablespaces <span class="token keyword">to</span> <span class="token number">be</span> transported <span class="token keyword">into</span> <span class="token keyword">database</span>DATAFILES datafiles <span class="token keyword">to</span> <span class="token number">be</span> transported <span class="token keyword">into</span> <span class="token keyword">database</span>TTS_OWNERS users that own <span class="token keyword">data</span> <span class="token operator">in</span> the transportable <span class="token keyword">tablespace</span> <span class="token keyword">set</span><span class="token keyword">Import</span> terminated successfully without <span class="token keyword">warnings</span><span class="token punctuation">.</span></code></pre><ul><li><p>IMP的所有参数（括号中为参数的默认值）：</p><blockquote><p>i&emsp;&emsp;mp的参数和exp的大致相同，下面是常用参数的解释，与exp相同的这就不再赘述<br>&emsp;&emsp;ignore：Oracle在恢复数据的过程中，当导入某个表时，该表已经存在，就要根据ignore参数的设置来决定如何操作。若 ignore=y，Oracle不执行CREATE TABLE语句，直接将数据插入到表中，如果插入的记录违背了约束条件，比如主键约束，唯一索引等，则出错的记录不会插入，但合法的记录会添加到表中。若 ignore=n，Oracle不执行CREATE TABLE语句，同时也不会将数据插入到表中，而是忽略该表的错误，继续导入下一个表。 注<br>意：如果表中的字段并没有唯一性约束，那么在使用ignore=y的情况下很有可能插入重复数据。<br>&emsp;&emsp;indexes：在恢复数据的过程中，若indexes=n，则表上的索引不会被恢复，但是对 LOB 索引, OID索引和 主键索引等系统自动生成的索引将无条件恢复。<br>&emsp;&emsp;indexfile：不进行导入操作而是将创建对象的文本保存到文件中，可以通过编辑使用该文本文件创建数据库对象。<br>&emsp;&emsp;fromuser,touser:这两个参数可以组合使用，也可以分开使用。他们可以实现将源用户的对象数据，导入到目标用户schema底下的功能。这里要注意，导入时的用户需要有<br>imp_full_database角色，示例如下<br>导入一个或一组指定用户所属的全部对象<br>$imp system/manager file=full_all.dmp log=seapark fromuser=hr<br>$imp system/manager file=seapark log=seapark fromuser=(seapark,amy,amyc,harold)<br>将一个或一组指定用户所属的全部对象导入到另一个用户下<br>$imp hr/hr fromuser=hr touser=czm file=hr_all.dmp<br>$imp system/manager file=tank log=tank fromuser=(seapark,amy) touser=(seapark1, amy1)<br>commit：默认值为 COMMIT=N，及在每插入完一个对象后提交。 当COMMIT=Y时候是根据你BUFFER的大小决定每次提交的数量。对于包含了LONG、RAW、 DATE等类型的表，不论BUFFER设置多大，都是每插入一行进行提交。设置commit=y可以防止减少回滚段的压力，但由于频繁提交，会带来性能 上的影响，推荐使用COMMIT=N。</p></blockquote></li><li><p>下列关键字仅用于可传输的表空间</p><blockquote><p>TRANSPORT_TABLESPACE 导入可传输的表空间元数据 (N)<br>TABLESPACES 将要传输到数据库的表空间<br>DATAFILES 将要传输到数据库的数据文件<br>TTS_OWNERS 拥有可传输表空间集中数据的用户</p></blockquote></li><li><p>关于增量参数的说明：exp/imp的增量并不是真正意义上的增量，所以最好不要使用。</p></li></ul><h2 id="3-exp-imp常用语法"><a href="#3-exp-imp常用语法" class="headerlink" title="3.exp / imp常用语法"></a>3.exp / imp常用语法</h2><h3 id="3-1-exp"><a href="#3-1-exp" class="headerlink" title="3.1 exp"></a>3.1 exp</h3><ul><li><p>完全</p><pre class=" language-shell"><code class="language-shell">exp system/oracle compress=n buffer=4096000 feedback=100000 full=y file=expfull_itpuxdb.dmp log=expfull_itpuxdb.log--exp \"/ as sysdba\" compress=n buffer=4096000 feedback=100000 full=y file=exp_itpuxdb.dmp log=exp_itpuxdb.log--backup/backup : exp_full_database,imp_full_database, grant exp_full_database to backup; grant imp_full_database to backup;</code></pre></li><li><p>用户</p><pre class=" language-shell"><code class="language-shell">exp system/oracle compress=n buffer=4096000 feedback=100000 owner=itpux file=expitpux_itpuxdb.dmp log=expitpux_itpuxdb.log--exp itpux/itpux compress=n buffer=4096000 feedback=100000 file=expitpux_itpuxdb.dmp log=expitpux_itpuxdb.log</code></pre></li><li><p>表</p><pre class=" language-shell"><code class="language-shell">exp itpux/itpux compress=n buffer=4096000 feedback=100000 tables=t1,t2,t2 file=exp_t1_itpuxdb.dmp log=exp_t1_itpuxdb.log</code></pre></li><li><p>other</p><pre class=" language-shell"><code class="language-shell">exp system/oracle compress=n buffer=4096000 feedback=100000 rows=n file=expfull_itpuxdb.dmp log=expfull_itpuxdb.log</code></pre></li></ul><h3 id="3-2-imp"><a href="#3-2-imp" class="headerlink" title="3.2 imp"></a>3.2 imp</h3><ul><li><p>完全</p><pre class=" language-shell"><code class="language-shell">imp system/oracle ignore=y buffer=4096000 feedback=100000 full=y file=expfull_itpuxdb.dmp log=impfull_itpuxdb.log--exp \"/ as sysdba\" system/oracle ignore=y buffer=4096000 feedback=100000 full=y file=expfull_itpuxdb.dmp log=impfull_itpuxdb.log--backup/backup : exp_full_database,imp_full_database, grant exp_full_database to backup; grant imp_full_database to backup;</code></pre></li><li><p>用户</p><pre class=" language-shell"><code class="language-shell">imp system/oracle fromuser=itpux touser=itpux ignore=y buffer=4096000 feedback=100000 file=expitpux_itpuxdb.dmp log=impitpux_itpuxdb.log--imp itpux/itpux fromuser=itpux touser=itpux ignore=y buffer=4096000 feedback=100000 file=expitpux_itpuxdb.dmp log=impitpux_itpuxdb.log</code></pre></li><li><p>表</p><pre class=" language-shell"><code class="language-shell">imp itpux/itpux fromuser=itpux touser=itpux tables=t1,t2,t3 ignore=y buffer=4096000 feedback=100000 file=exp_t1_itpuxdb.dmp log=imp_t1_itpuxdb.log</code></pre></li></ul><h2 id="4-配置生产环境的逻辑自动备份策略"><a href="#4-配置生产环境的逻辑自动备份策略" class="headerlink" title="4.配置生产环境的逻辑自动备份策略"></a>4.配置生产环境的逻辑自动备份策略</h2><blockquote><p>要求：每天早上5点做逻辑全备，备份文件保留一周。<br><code>`</code>shell<br>vi /backup/scripts/expfull_db01.sh<br>export BAKDATE=<code>date +%Y%m%d</code><br>export ORACLE_SID=db01<br>nohup exp system/oracle compress=n buffer=4096000 feedback=100000 full=y file=/backup/expfull_db01_$BAKDATE.dmp log=/backup/expfull_db01_$BAKDATE.log &amp;<br>gzip -f /backup/expfull_db01_$BAKDATE.dmp<br>find /backup -name expfull_db01_*.dmp.gz -atime +2 -exec rm -rf {} \;</p></blockquote><p>#chown -R oracle:dba /backup/expfull_db01.sh</p><p>#chmod 775 /backup/expfull_db01.sh</p><p>#crontab -e<br>00 05 <em> </em> * su - oracle -c /backup/scripts/expfull_db01.sh</p><pre><code>## 5.exp / imp生产环境数据迁移流程和注意事项### 5.1 数据迁移的目的&gt;使用exp/imp进行数据迁移的前置条件、操作步骤，降低对对应用造成的影响及避免故障### 5.2 数据迁移的适用范围&gt;所有线上库9i ,10g &gt; 11g 12c &gt;11g不建用了，### 5.3 数据迁移的风险评估&gt;&amp;emsp;&amp;emsp;01.exp导出数据时没有使用compress=n参数，会导致所有数据被压缩在一个extent里，导入可能由于没有连续的blocks满足需要，导致imp失败。&amp;emsp;&amp;emsp;02.有些os对文件大小有限制，exp数据时需要使用filesize参数来分割导出文件&amp;emsp;&amp;emsp;03.exp导出数据时没有正确估计dmp文件所需空间，导致主机磁盘满。&amp;emsp;&amp;emsp;05.imp导入数据时没有使用ignore=y参数，目标库上存在表的情况下数据无法导入&amp;emsp;&amp;emsp;05.imp导入大量数据时没有使用commit=y参数，导致事务太久，undo资源占用过大无法及时回收。&amp;emsp;&amp;emsp;06.跨字符集的数据迁移，由于字符集不兼容导致数据迁移失败。&amp;emsp;&amp;emsp;07.imp跨schema进行数据迁移时，没有正确指定fromuser、touser，导致数据没有正确导入&amp;emsp;&amp;emsp;09.导入表空间不存在或者空间不足，导致表创建失败或者数据导入失败，导致其他应用报错### 5.4 数据迁移的准备工作&gt;&amp;emsp;&amp;emsp;01.检查源数据库和目标库的版本、字符集，如果目标库版本低于源库，使用目标库的软件做导出。如果字符集不一致，不建议使用exp/imp迁移数据。&amp;emsp;&amp;emsp;02.检查目标库上表结构和源结构是否一致，如果不一致，先修复结构，保证一致。&amp;emsp;&amp;emsp;03.user_segments里查出导出表所占的空间大小，检查os对文件大小的限制。如果表大小超出文件大小，exp导出时加上这两个参数：filesize=小于文件限制的数值m,file=exp01.dmp,exp02.dmp,…多个dmp文件&amp;emsp;&amp;emsp;04.表比较多的情况下，建议用parfile。各个参数在parfile里写好。tables=(tab1,tab2,tab3,..)&amp;emsp;&amp;emsp;05.根据不同的需要要书写query子句时，这个参数跟direct=y冲突### 5.5 数据迁移的执行过程&gt;01.如果目标表是已存在数据，跟应用确认后，可以先进行导出备份，以防后面需要回退。先根据需求编辑exp、imp的参数文件：’-‘后面是参数说明，实际使用时去掉cat exp_itpux.paruserid=itpux/itpux@db01direct=y –直接路径导出，加快导出速度compress=n –避免数据全部压缩在一个数据块上file=exp_itpux01.dmplog=exp_itpux01.logrecordlength=65535 –写dmp文件时一次IO的大小，上限是65535，可以加快导出速度buffer=4096000 -数据缓冲区大小tables=itpux01exp parfile=exp_itpux.par –进行数据导出```shellcat imp_itpux.paruserid=itpux/itpuxcommit=y –开启批量提交，避免长事务ignore=y –如果目标表已经存在，只导入数据fromuser=itpuxtouser=itpuxtables=itpux01file=imp_itpux01.dmplog=imp_itpux01.logbuffer=100000 –大小控制导入速度的，设置过大会导致日志产生很快imp parfile=imp_itpux.par –进行数据导入</code></pre><blockquote><p>注意上面的fromuser和touser。如果将表导入到两个schema:itpux01,itpux02<br>需要按照这种格式配置参数：<br>fromuser和touser一一对应，即使导出时只有一个schema.<br>fromuser=itpux01,itpux01<br>touser=itpux02,itpux02</p></blockquote><ul><li>02 exp导出数据时，检查exp的日志，如果报错，一般是参数配置错误，参考官方文档调整参数。</li><li>03 imp导入之前，需要创建相应的用户，权限，表空间等对象，否则报错：<pre class=" language-sql"><code class="language-sql">spool itpux_object_create_scripts<span class="token punctuation">.</span>sql<span class="token keyword">SET</span> LONG <span class="token number">2000000</span> PAGESIZE <span class="token number">0</span> head <span class="token keyword">off</span> verify <span class="token keyword">off</span> feedback <span class="token keyword">off</span> linesize <span class="token number">180</span><span class="token keyword">select</span> dbms_metadata<span class="token punctuation">.</span>get_ddl<span class="token punctuation">(</span><span class="token string">'USER'</span><span class="token punctuation">,</span><span class="token string">'ITPUX02'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token punctuation">;</span><span class="token keyword">select</span> dbms_metadata<span class="token punctuation">.</span>get_granted_ddl<span class="token punctuation">(</span><span class="token string">'OBJECT_GRANT'</span><span class="token punctuation">,</span><span class="token string">'ITPUX02'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token punctuation">;</span><span class="token keyword">select</span> dbms_metadata<span class="token punctuation">.</span>get_granted_ddl<span class="token punctuation">(</span><span class="token string">'ROLE_GRANT'</span><span class="token punctuation">,</span><span class="token string">'ITPUX02'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token punctuation">;</span><span class="token keyword">select</span> dbms_metadata<span class="token punctuation">.</span>get_granted_ddl<span class="token punctuation">(</span><span class="token string">'SYSTEM_GRANT'</span><span class="token punctuation">,</span><span class="token string">'ITPUX02'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token punctuation">;</span><span class="token keyword">select</span> dbms_metadata<span class="token punctuation">.</span>get_ddl<span class="token punctuation">(</span><span class="token string">'TABLESPACE'</span><span class="token punctuation">,</span><span class="token string">'ITPUX02'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token punctuation">;</span>spool <span class="token keyword">off</span><span class="token punctuation">;</span></code></pre></li><li>04 imp导入数据过程，需要监控下数据库事务和日志产生速度。</li><li>05 对导入的表收集统计信息。</li></ul><h3 id="5-6-数据迁移后的验证方案"><a href="#5-6-数据迁移后的验证方案" class="headerlink" title="5.6 数据迁移后的验证方案"></a>5.6 数据迁移后的验证方案</h3><blockquote><p>对比exp、imp的日志，确认导出导入数据量是否一致。并在数据库上检查数据量。<br>比如上面的数据迁移，检查数据量跟日志显示是否一致。<br>select count(*) from itpux.itpux01;<br>跨schema或者数据库迁移数据时，除检查日志外，还需要检查源和目标的对象数据量、是否有失效对象。</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> object_type s_object_type<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dba_objects <span class="token keyword">where</span> owner<span class="token operator">=</span><span class="token string">'ITPUX01'</span> <span class="token keyword">group</span> <span class="token keyword">by</span> object_type <span class="token punctuation">;</span><span class="token keyword">select</span> object_type t_object_type<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dba_objects <span class="token keyword">where</span> owner<span class="token operator">=</span><span class="token string">'ITPUX01'</span> <span class="token keyword">group</span> <span class="token keyword">by</span> object_type <span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> dba_objects <span class="token keyword">where</span> <span class="token keyword">status</span> <span class="token operator">&lt;></span> <span class="token string">'VALID'</span> <span class="token operator">and</span> owner<span class="token operator">=</span><span class="token string">'ITPUX01'</span><span class="token punctuation">;</span></code></pre><ul><li>dblink两个库一起查询;<pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> s<span class="token punctuation">.</span>s_object_type<span class="token punctuation">,</span>     s<span class="token punctuation">.</span>s_count<span class="token punctuation">,</span>     t<span class="token punctuation">.</span>t_object_type<span class="token punctuation">,</span>     t<span class="token punctuation">.</span>t_count<span class="token keyword">FROM</span> <span class="token punctuation">(</span>  <span class="token keyword">SELECT</span> object_type s_object_type<span class="token punctuation">,</span> <span class="token function">COUNT</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> s_count          <span class="token keyword">FROM</span> dba_objects<span class="token variable">@db01</span>         <span class="token keyword">WHERE</span> owner <span class="token operator">=</span> <span class="token string">'ITPUX01'</span>      <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> object_type<span class="token punctuation">)</span> s<span class="token punctuation">,</span>     <span class="token punctuation">(</span>  <span class="token keyword">SELECT</span> object_type t_object_type<span class="token punctuation">,</span> <span class="token function">COUNT</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> t_count          <span class="token keyword">FROM</span> dba_objects         <span class="token keyword">WHERE</span> owner <span class="token operator">=</span> <span class="token string">'ITPUX01'</span>      <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> object_type<span class="token punctuation">)</span> t<span class="token punctuation">;</span></code></pre>自动生成编译无效对象SQL及编译过程</li></ul></blockquote><ul><li>统计当前用户无效对象数量:<pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> owner<span class="token punctuation">,</span>       object_type<span class="token punctuation">,</span>       <span class="token keyword">status</span><span class="token punctuation">,</span>       <span class="token function">COUNT</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>  <span class="token keyword">FROM</span> dba_objects <span class="token keyword">WHERE</span> <span class="token keyword">status</span> <span class="token operator">&lt;></span> <span class="token string">'VALID'</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> owner<span class="token punctuation">,</span> object_type<span class="token punctuation">,</span> <span class="token keyword">status</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> owner<span class="token punctuation">,</span> object_type<span class="token punctuation">;</span></code></pre></li><li><p>生成编译无效对象SQL</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span>    <span class="token string">'ALTER '</span>     <span class="token operator">||</span> OBJECT_TYPE     <span class="token operator">||</span> <span class="token string">' '</span>     <span class="token operator">||</span> OWNER     <span class="token operator">||</span> <span class="token string">'.'</span>     <span class="token operator">||</span> OBJECT_NAME     <span class="token operator">||</span> <span class="token string">' COMPILE;'</span><span class="token keyword">FROM</span> dba_objects<span class="token keyword">WHERE</span>     <span class="token keyword">status</span> <span class="token operator">&lt;></span> <span class="token string">'VALID'</span>     <span class="token operator">AND</span> object_type <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">'PACKAGE'</span><span class="token punctuation">,</span>                         <span class="token string">'PACKAGE BODY'</span><span class="token punctuation">,</span>                         <span class="token string">'FUNCTION'</span><span class="token punctuation">,</span>                         <span class="token string">'PROCEDURE'</span><span class="token punctuation">,</span>                         <span class="token string">'TRIGGER'</span><span class="token punctuation">,</span>                         <span class="token string">'VIEW'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><blockquote><p>通过复制以上SQL语句,直接手动执行编译执行,也可以采用如下方式在oracle用户下进行手工编译<br><code>`</code>sql</p></blockquote><h1 id="su-oracle"><a href="#su-oracle" class="headerlink" title="su - oracle"></a>su - oracle</h1><p>$ sqlplus / as sysdba<br>SQL&gt; @$ORACLE_HOME/rdbms/admin/utlrp.sql<br><code>`</code></p></li><li><p>如果有序列要处理</p><pre class=" language-sql"><code class="language-sql">exclude<span class="token operator">=</span>SEQUENCE</code></pre><blockquote><p>目标库<br>方法1:<br>1.源库： 查出sequence的最大值<br>2.目标库： DROP SEQUENCE …. 再 CREATE SEQUENCE START最大值 其他不变<br>方法2：<br>目标库： DROP SEQUENCE …. 再 CREATE SEQUENCE START 超大值 （保证比之前的都大，不会发生冲突的 ）</p></blockquote></li><li><p>可以用以下脚本来实现 ：<br><code>`</code>sql<br>/<em> Formatted on 2018/1/30 19:49:33 (QP5 v5.313) </em>/<br>script FROM THE SOURCE database. USE this script TO RESET THE proper starting VALUE FOR sequences ON THE TARGET database.<br>cr_tts_create_seq.SQL<br>SET HEADING OFF FEEDBACK OFF TRIMSPOOL ON ESCAPE OFF<br>SET LONG 1000 LINESIZE 1000 PAGESIZE 0<br>COL SEQDDL FORMAT A300<br>SPOOL tts_create_seq.sql<br>PROMPT /<em> ========================= </em>/<br>PROMPT /<em> Drop and create sequences </em>/<br>PROMPT /<em> ========================= </em>/</p></li></ul><p>SELECT REGEXP_REPLACE (<br>           DBMS_METADATA.get_ddl (‘SEQUENCE’, sequence_name, sequence_owner),<br>           ‘^.<em>(CREATE SEQUENCE.</em>CYCLE).*$’,<br>              ‘DROP SEQUENCE “‘<br>           || sequence_owner<br>           || ‘“.”‘<br>           || sequence_name<br>           || ‘“;’<br>           || CHR (10)<br>           || ‘\1;’)<br>           SEQDDL<br>  FROM dba_sequences<br> WHERE sequence_owner NOT IN (SELECT name<br>                                FROM SYSTEM.logstdby$skip_support<br>                               WHERE action = 0);</p><p>SPOOL OFF</p><pre><code>### 5.7 数据迁移核心对象风险&gt;由于核心表访问、变更频繁，不宜直接使用imp对核心表大量导入数据。### 5.8 数据迁移回退方案&gt;exp对应用无影响，不需要回退。imp后可能数据有误，需要进行回退操作。如果目标表本来就是空表，跟应用确认后，直接清空即可。如果目标表原有数据，跟应用确认是否使用原有备份数据进行恢复。若需要，先exp备份当前数据，然后清空再导入前面的备份数据。## 6.exp / imp数据迁移案例### 6.1 迁移目的&gt;&amp;emsp;&amp;emsp;将linux系统oracle服务器上schema（itpux01,itpux02）全部通过Exp迁移到另一台oracle服务器，并能正常查询到相关数据。### 6.2 迁移流程```sql1.准备数据：linux系统oracle服务器上创建用户,表空间.并创建相关表.数据等。2.linux本地用Exp做导出;3.再到远程主机创建相关对象；4.远程主机用imp做导入(导入);5.验证远程本地数据合法性;</code></pre><h3 id="6-3-迁移过程"><a href="#6-3-迁移过程" class="headerlink" title="6.3 迁移过程"></a>6.3 迁移过程</h3><ul><li>创建表空间<br><code>`</code>sql<br>CREATE TABLESPACE itpux11<br>  DATAFILE ‘/oracle/oradata/db01/itpux01.dbf’<pre><code>           SIZE 100 M           AUTOEXTEND OFF</code></pre>  EXTENT MANAGEMENT LOCAL AUTOALLOCATE<br>  SEGMENT SPACE MANAGEMENT AUTO;</li></ul><p>CREATE TABLESPACE itpux12<br>    DATAFILE ‘/oracle/oradata/db01/itpux02.dbf’<br>                 SIZE 100 M<br>                 AUTOEXTEND OFF<br>    EXTENT MANAGEMENT LOCAL AUTOALLOCATE<br>    SEGMENT SPACE MANAGEMENT AUTO;</p><pre><code>* 创建用户并授权```sqlCREATE USER itpux01 IDENTIFIED BY itpux01    DEFAULT TABLESPACE itpux01;CREATE USER itpux02 IDENTIFIED BY itpux02    DEFAULT TABLESPACE itpux02;GRANT DBA TO itpux01;GRANT DBA TO itpux02;ALTER USER itpux01    QUOTA UNLIMITED ON itpux01;ALTER USER itpux02    QUOTA UNLIMITED ON itpux02;</code></pre><ul><li>moon用户登录并创建测试表<br><code>`</code>sql<br>CONN itpux01 / itpux01<br>CREATE TABLE itpux01<br>(<br>  id    NUMBER (30) PRIMARY KEY NOT NULL,<br>  name DATE<br>);</li></ul><p>CONN itpux02 / itpux02<br>CREATE TABLE itpux02<br>(<br>    id    NUMBER (30) PRIMARY KEY NOT NULL,<br>    name DATE<br>);</p><pre><code>* 创建2个存储过程并执行```sqlCONN itpux01 / itpux01CREATE OR REPLACE PROCEDURE p_itpux01ISBEGIN    EXECUTE IMMEDIATE &#39;select count(*) from itpux01&#39;;    FOR i IN 1 .. 1000    LOOP        INSERT INTO itpux01 (id, name)             VALUES (i, SYSDATE);        COMMIT;    END LOOP;    EXECUTE IMMEDIATE &#39;select count(*) from itpux01&#39;;END p_itpux01;/BEGIN    p_itpux01;END;/SELECT COUNT (*) FROM itpux01;SELECT *  FROM itpux01 WHERE id &gt; 990;CONN itpux02 / itpux02CREATE OR REPLACE PROCEDURE p_itpux02ISBEGIN    EXECUTE IMMEDIATE &#39;select count(*) from itpux02&#39;;    FOR i IN 1 .. 2000    LOOP        INSERT INTO itpux02 (id, name)             VALUES (i, SYSDATE);        COMMIT;    END LOOP;    EXECUTE IMMEDIATE &#39;select count(*) from itpux02&#39;;END p_itpux02;/BEGIN    p_itpux02;END;/</code></pre><ul><li>查询验证数据<br><code>`</code>sql<br>CONN itpux01 / itpux01</li></ul><p>SELECT COUNT (*) FROM itpux01;</p><p>SELECT *<br>  FROM itpux01<br> WHERE id &gt; 990;</p><p>CONN itpux02 / itpux02</p><p>SELECT COUNT (*) FROM itpux02;</p><p>SELECT *<br>  FROM itpux02<br> WHERE id &gt; 1990;</p><pre><code>* 本地用Exp做导出```sqlEXP SYSTEM/oracle OWNER=itpux01,itpux02 COMPRESS=n FILE=exp_2table.dmp LOG=exp_2table.LOG direct=y recordlength=65535 buffer=4096000</code></pre><ul><li>imp导入之前，需要创建相应的用户，权限，表空间等对象，否则报<br><code>`</code>sql<br>/<em> Formatted on 2018/1/30 20:03:14 (QP5 v5.313) </em>/<br>SPOOL itpux_object_create_scripts.sql<br>SET LONG 2000000 PAGESIZE 0 HEAD OFF VERIFY OFF FEEDBACK OFF LINESIZE 180</li></ul><p>SELECT DBMS_METADATA.get_ddl (‘USER’, ‘ITPUX01’) FROM DUAL;</p><p>SELECT DBMS_METADATA.get_granted_ddl (‘OBJECT_GRANT’, ‘ITPUX01’) FROM DUAL;</p><p>SELECT DBMS_METADATA.get_granted_ddl (‘ROLE_GRANT’, ‘ITPUX01’) FROM DUAL;</p><p>SELECT DBMS_METADATA.get_granted_ddl (‘SYSTEM_GRANT’, ‘ITPUX01’) FROM DUAL;</p><p>SELECT DBMS_METADATA.get_ddl (‘TABLESPACE’, ‘ITPUX01’) FROM DUAL;</p><p>SELECT DBMS_METADATA.get_ddl (‘USER’, ‘ITPUX02’) FROM DUAL;</p><p>SELECT DBMS_METADATA.get_granted_ddl (‘OBJECT_GRANT’, ‘ITPUX02’) FROM DUAL;</p><p>SELECT DBMS_METADATA.get_granted_ddl (‘ROLE_GRANT’, ‘ITPUX02’) FROM DUAL;</p><p>SELECT DBMS_METADATA.get_granted_ddl (‘SYSTEM_GRANT’, ‘ITPUX02’) FROM DUAL;</p><p>SELECT DBMS_METADATA.get_ddl (‘TABLESPACE’, ‘ITPUX02’) FROM DUAL;</p><p>SPOOL OFF;</p><pre><code>* 异机用imp做导入```sqlimp SYSTEM/oracle fromuser=itpux01,itpux02 touser=itpux01,itpux02 FILE=exp_2table.dmp LOG=exp_2table.LOG COMMIT=y IGNORE=y buffer=4096000</code></pre><ul><li>验证导入后的数据合法性<br><code>`</code>sql</li></ul><pre><code>### 6.4 数据迁移后的验证方案&gt;对比exp、imp的日志，确认导出导入数据量是否一致。并在数据库上检查数据量。比如上面的数据迁移，检查数据量跟日志显示是否一致。```sqlSELECT COUNT (*) FROM itpux.itpux01;</code></pre><blockquote><p>跨schema或者数据库迁移数据时，除检查日志外，还需要检查源和目标的对象数据量、是否有失效对象。<br><code>`</code>sql<br>  SELECT object_type s_object_type, COUNT (*)<br>    FROM dba_objects<br>   WHERE owner = ‘ITPUX01’<br>GROUP BY object_type;</p></blockquote><p>  SELECT object_type t_object_type, COUNT (*)<br>    FROM dba_objects<br>   WHERE owner = ‘ITPUX01’<br>GROUP BY object_type;</p><p>SELECT *<br>  FROM dba_objects<br> WHERE status &lt;&gt; ‘VALID’ AND owner = ‘ITPUX01’;</p><pre><code>* dblink两个库一起查```sqlSELECT s.s_object_type,       s.s_count,       t.t_object_type,       t.t_count  FROM (  SELECT object_type s_object_type, COUNT (*) s_count            FROM dba_objects@db01           WHERE owner = &#39;ITPUX01&#39;        GROUP BY object_type) s,       (  SELECT object_type t_object_type, COUNT (*) t_count            FROM dba_objects           WHERE owner = &#39;ITPUX01&#39;        GROUP BY object_type) t;</code></pre><ul><li>自动生成编译无效对象SQL及编译过程<blockquote><p>统计当前用户无效对象数量</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> owner<span class="token punctuation">,</span>       object_type<span class="token punctuation">,</span>       <span class="token keyword">status</span><span class="token punctuation">,</span>       <span class="token function">COUNT</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>  <span class="token keyword">FROM</span> dba_objects <span class="token keyword">WHERE</span> <span class="token keyword">status</span> <span class="token operator">&lt;></span> <span class="token string">'VALID'</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> owner<span class="token punctuation">,</span> object_type<span class="token punctuation">,</span> <span class="token keyword">status</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> owner<span class="token punctuation">,</span> object_type<span class="token punctuation">;</span></code></pre></blockquote></li></ul><blockquote><p>生成编译无效对象SQL</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span>    <span class="token string">'ALTER '</span>       <span class="token operator">||</span> OBJECT_TYPE       <span class="token operator">||</span> <span class="token string">' '</span>       <span class="token operator">||</span> OWNER       <span class="token operator">||</span> <span class="token string">'.'</span>       <span class="token operator">||</span> OBJECT_NAME       <span class="token operator">||</span> <span class="token string">' COMPILE;'</span>  <span class="token keyword">FROM</span> dba_objects <span class="token keyword">WHERE</span>     <span class="token keyword">status</span> <span class="token operator">&lt;></span> <span class="token string">'VALID'</span>       <span class="token operator">AND</span> object_type <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">'PACKAGE'</span><span class="token punctuation">,</span>                           <span class="token string">'PACKAGE BODY'</span><span class="token punctuation">,</span>                           <span class="token string">'FUNCTION'</span><span class="token punctuation">,</span>                           <span class="token string">'PROCEDURE'</span><span class="token punctuation">,</span>                           <span class="token string">'TRIGGER'</span><span class="token punctuation">,</span>                           <span class="token string">'VIEW'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>通过复制以上SQL语句,直接手动执行编译执行.<br>也可以采用如下方式在oracle用户下进行手工编译</p><pre class=" language-sql"><code class="language-sql">su <span class="token operator">-</span> oracle$ sqlplus <span class="token operator">/</span> <span class="token keyword">as</span> sysdbaSQL<span class="token operator">></span> <span class="token variable">@$ORACLE_HOME</span><span class="token operator">/</span>rdbms<span class="token operator">/</span>admin<span class="token operator">/</span>utlrp<span class="token punctuation">.</span>sql</code></pre></blockquote><h2 id="7-exp-imp迁移过程字符集的处理"><a href="#7-exp-imp迁移过程字符集的处理" class="headerlink" title="7.exp / imp迁移过程字符集的处理"></a>7.exp / imp迁移过程字符集的处理</h2><blockquote><p>进行数据的导入导出时，我们要注意关于字符集的问题。在EXP/IMP过程中我们需要注意四个字符集的参数：</p><pre class=" language-shell"><code class="language-shell">01.导出端的客户端字符集。02.导出端数据库字符集。03.导入端的客户端字符集。04.导入端数据库字符集。</code></pre><p>我们首先需要查看这四个字符集参数。<br>查看数据库的字符集的信息：<br><code>`</code>sql<br>SQL&gt; select <em> from nls_database_parameters;<br>//SQL&gt; select </em> from props$;<br>SQL&gt; SET PAGESIZE 30<br>SQL&gt; select * from nls_database_parameters;</p></blockquote><p>PARAMETER                      VALUE</p><hr><p>NLS_LANGUAGE                   AMERICAN<br>NLS_TERRITORY                  AMERICA<br>NLS_CURRENCY                   $<br>NLS_ISO_CURRENCY               AMERICA<br>NLS_NUMERIC_CHARACTERS         .,<br>NLS_CHARACTERSET               ZHS16GBK<br>NLS_CALENDAR                   GREGORIAN<br>NLS_DATE_FORMAT                DD-MON-RR<br>NLS_DATE_LANGUAGE              AMERICAN<br>NLS_SORT                       BINARY<br>NLS_TIME_FORMAT                HH.MI.SSXFF AM<br>NLS_TIMESTAMP_FORMAT           DD-MON-RR HH.MI.SSXFF AM<br>NLS_TIME_TZ_FORMAT             HH.MI.SSXFF AM TZR<br>NLS_TIMESTAMP_TZ_FORMAT        DD-MON-RR HH.MI.SSXFF AM TZR<br>NLS_DUAL_CURRENCY              $<br>NLS_COMP                       BINARY<br>NLS_LENGTH_SEMANTICS           BYTE<br>NLS_NCHAR_CONV_EXCP            FALSE<br>NLS_NCHAR_CHARACTERSET         UTF8<br>NLS_RDBMS_VERSION              11.2.0.4.0</p><p>20 rows selected.</p><pre><code>&gt;我们再来查看客户端的字符集信息：客户端字符集的参数NLS_LANG=_&lt; territory &gt;.language：指定oracle消息使用的语言，日期中日和月的显示。Territory：指定货币和数字的格式，地区和计算星期及日期的习惯。Characterset：控制客户端应用程序使用的字符集。通常设置或等于客户端的代码页。ZHS16GBK、UTF8。* 如数据库语言环境&gt;os是windows,使用命令set NLS_LANG=AMERICAN_AMERICA.ZHS16GBK&gt;os是linux or unix,使用命令export NLS_LANG=AMERICAN_AMERICA.ZHS16GBK在unix中：\&gt;$ env|grep NLS_LANGNLS_LANG=AMERICAN_AMERICA.ZHS16GBK&gt;当前修改可用：$ export NLS_LANG=AMERICAN_AMERICA.ZHS16GBK&gt;永久修改可用：vi bash_profile* 通常在导出时最好把客户端字符集设置得和数据库端相同。当进行数据导入时，主要有以下两种情况：&gt;&amp;emsp;&amp;emsp;(1) 源数据库和目标数据库具有相同的字符集设置。这时，只需设置导出和导入端的客户端NLS_LANG等于数据库字符集即可。&amp;emsp;&amp;emsp;(2) 源数据库和目标数据库字符集不同。&amp;emsp;&amp;emsp;先将导出端客户端的NLS_LANG设置成和导出端的数据库字符集一致，导出数据，然后将导入端客户端的NLS_LANG设置成和导出端一致，导入数据，这样转换只发生在数据库端，而且只发生一次。&amp;emsp;&amp;emsp;这种情况下，只有当导入端数据库字符集为导出端数据库字符集的严格超集时，数据才能完全导成功，否则，可能会有数据不一致或乱码出现。## 8.exp / imp优化的方法&gt;当需要exp/imp的数据量比较大时，这个过程需要的时间是比较长的，我们可以用一些方法来优化exp/imp的操作。* 01.exp:使用直接路径 direct=y&gt;&amp;emsp;&amp;emsp;oracle会避开sql语句处理引擎,直接从数据库文件中读取数据,然后写入导出文件.&amp;emsp;&amp;emsp;可以在导出日志中观察到: exp-00067: table xxx will be exported in conventional path&amp;emsp;&amp;emsp;如果没有使用直接路径,必须保证buffer参数的值足够大.&amp;emsp;&amp;emsp;有一些参数于direct=y不兼容,无法用直接路径导出可移动的tablespace,或者用query参数导出数据库子集.&amp;emsp;&amp;emsp;当导入导出的数据库运行在不同的os下时,必须保证recordlength参数的值一致.* 02.exp: 清空回收站```sqlSQL&gt; select count(*) from dba_recyclebin;SQL&gt; purge dba_recyclebin;</code></pre><ul><li><p>03.imp:避免磁盘排序</p><blockquote><p>涉及到sort_area_size参数,也就是我们的PGA要够大。</p></blockquote></li><li><p>05.imp:优化日志缓冲区</p><blockquote><p>比如将log_buffer容量扩大10倍(最大不要超过5M),也就是我们的SGA要够大。</p></blockquote></li><li><p>05.imp:避免日志切换等待</p><blockquote><p>增加重做日志组的数量,增大日志文件大小.</p></blockquote></li><li><p>06.imp:使用commit</p><blockquote><p>commit = y<br>注意:这个方式不能处理包含LOB和LONG类型的表,对于这样的table,如果使用commit = y,每插入一行,就会执行一次提交.</p></blockquote></li><li><p>07.imp:使用NOLOGGING方式减小重做日志大小</p><blockquote><p>在导入时指定参数indexes=n,只导入数据而忽略index,在导完数据后在通过脚本创建index,指定NOLOGGING选项</p></blockquote></li></ul><h2 id="9-exp-imp-常见问题及解决方法"><a href="#9-exp-imp-常见问题及解决方法" class="headerlink" title="9.exp / imp 常见问题及解决方法"></a>9.exp / imp 常见问题及解决方法</h2><h3 id="9-1-关于imp-exp版本的问题"><a href="#9-1-关于imp-exp版本的问题" class="headerlink" title="9.1 关于imp/exp版本的问题"></a>9.1 关于imp/exp版本的问题</h3><blockquote><p>一般来说，从低版本导入到高版本问题不大，麻烦的是将高版本的数据导入到低版本中。</p><ul><li>可以跨版本的使用EXP/IMP，但必须正确地使用EXP和IMP的版本（官方可查）：<pre class=" language-sql"><code class="language-sql"><span class="token number">1</span>、使用IMP的版本匹配数据库的版本，如：要导入到<span class="token number">11.2</span>中，使用<span class="token number">11.2</span>的IMP工具。<span class="token number">2</span>、使用EXP的版本匹配两个数据库中最低的版本，如：从<span class="token number">11.2</span>往<span class="token number">10.2</span>中导入，则使用<span class="token number">10.2</span>版本的EXP工具。<span class="token number">3</span>、高版本的Export导出来的转储文件，低版本的<span class="token keyword">Import</span>读不了；低版本的Export导出来的转储文件，高版本的<span class="token keyword">Import</span>可以进行读取。<span class="token number">4</span>、从Oracle低版本的Export数据可以<span class="token keyword">Import</span>到Oracle高版本中，但限于Oracle的相邻版本，两个不相邻版本间进行转换应借助中间版本。<span class="token number">5</span>、exp<span class="token operator">/</span>imp可以做到在不同版本Oracle、不同数据库上的迁移。</code></pre></li></ul></blockquote><h3 id="9-2-数据库对象已经存在"><a href="#9-2-数据库对象已经存在" class="headerlink" title="9.2 数据库对象已经存在"></a>9.2 数据库对象已经存在</h3><blockquote><p>&emsp;&emsp;一般情况, 导入数据前应该彻底删除目标数据下的表, 序列, 函数/过程,触发器等; 数据库对象已经存在, 按缺省的imp参数, 则会导入失败如果用了参数ignore=y, 会把exp文件内的数据内容导入如果表有唯一关键字的约束条件, 不合条件将不被导入如果表没有唯一关键字的约束条件, 将引起记录重复</p></blockquote><h3 id="9-3-数据库对象有主外键约束"><a href="#9-3-数据库对象有主外键约束" class="headerlink" title="9.3 数据库对象有主外键约束"></a>9.3 数据库对象有主外键约束</h3><blockquote><p>不符合主外键约束时, 数据会导入失败,<br>解决办法:<br>先导入主表, 再导入依存表<br>disable目标导入对象的主外键约束, 导入数据后, 再enable它们</p></blockquote><h3 id="9-4-权限不够"><a href="#9-4-权限不够" class="headerlink" title="9.4 权限不够"></a>9.4 权限不够</h3><blockquote><p>如果要把A用户的数据导入B用户下, A用户需要有imp_full_database权限</p></blockquote><h3 id="9-5-导入大表存储分配失败"><a href="#9-5-导入大表存储分配失败" class="headerlink" title="9.5 导入大表存储分配失败"></a>9.5 导入大表存储分配失败</h3><blockquote><p>&emsp;&emsp;默认的EXP时, compress = y, 也就是把所有的数据压缩在一个数据块上.<br>导入时, 如果不存在连续一个大数据块, 则会导入失败. 导出大表时, 记得compress= n, 则不会引起这种错误.</p></blockquote><h3 id="9-6-imp和exp使用的字符集不同"><a href="#9-6-imp和exp使用的字符集不同" class="headerlink" title="9.6 imp和exp使用的字符集不同"></a>9.6 imp和exp使用的字符集不同</h3><blockquote><p>&emsp;&emsp;如果字符集不同, 导入会失败, 可以改变unix环境变量或者NT注册表里NLS_LANG相关信息. 导入完成后再改回来.</p></blockquote><h3 id="9-7-imp和exp版本不能往上兼容"><a href="#9-7-imp和exp版本不能往上兼容" class="headerlink" title="9.7 imp和exp版本不能往上兼容"></a>9.7 imp和exp版本不能往上兼容</h3><blockquote><p>可以从低版本导入高版本，但不能从高版本导入到低版本。<br>如果遇到迁移因版本不同的问题，可以用低版本的export 导出，到导入到低版本。</p></blockquote><h3 id="9-8-导出统计信息的问题。"><a href="#9-8-导出统计信息的问题。" class="headerlink" title="9.8 导出统计信息的问题。"></a>9.8 导出统计信息的问题。</h3><blockquote><p>&emsp;&emsp;如果导出统计信息,在只导出部分数据,或不导出数据时,导出统计信息会报错.另如果未导出统计信息,但导入时,需导入统计信息<br>,那此时,导入后,统计信息会被锁住,而无法更新统计信息.<br>&emsp;&emsp;此时,我们可使用包dbms_stats.unlock_schema_stats来解锁.最好的办法是,在exp,imp时,加入参数statistics=none,不exp,imp统计信息,在导入完成后,在重新收集统计信息.</p></blockquote><pre class=" language-sql"><code class="language-sql"><span class="token keyword">BEGIN</span>    DBMS_STATS<span class="token punctuation">.</span>gather_database_stats<span class="token punctuation">;</span><span class="token keyword">END</span><span class="token punctuation">;</span><span class="token operator">/</span><span class="token keyword">BEGIN</span>    DBMS_STATS<span class="token punctuation">.</span>gather_schema_stats <span class="token punctuation">(</span><span class="token string">'ITPUX02'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">END</span><span class="token punctuation">;</span><span class="token operator">/</span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Oracle数据库逻辑备份恢复迁移之exp与imp&quot;&gt;&lt;a href=&quot;#Oracle数据库逻辑备份恢复迁移之exp与imp&quot; class=&quot;headerlink&quot; title=&quot;Oracle数据库逻辑备份恢复迁移之exp与imp&quot;&gt;&lt;/a&gt;Oracle数据库逻辑
      
    
    </summary>
    
      <category term="Oracle" scheme="https://kyle.github.io/categories/Oracle/"/>
    
    
      <category term="Oracle" scheme="https://kyle.github.io/tags/Oracle/"/>
    
      <category term="备份容灾" scheme="https://kyle.github.io/tags/%E5%A4%87%E4%BB%BD%E5%AE%B9%E7%81%BE/"/>
    
      <category term="Exp" scheme="https://kyle.github.io/tags/Exp/"/>
    
      <category term="Imp" scheme="https://kyle.github.io/tags/Imp/"/>
    
  </entry>
  
  <entry>
    <title>Oracle数据库逻辑备份恢复迁移之expdp与impdp</title>
    <link href="https://kyle.github.io/2018/10/02/oracle/oracle-shu-ju-ku-luo-ji-bei-fen-hui-fu-qian-yi-zhi-expdp-yu-impdp/"/>
    <id>https://kyle.github.io/2018/10/02/oracle/oracle-shu-ju-ku-luo-ji-bei-fen-hui-fu-qian-yi-zhi-expdp-yu-impdp/</id>
    <published>2018-10-02T06:25:00.000Z</published>
    <updated>2019-05-03T15:54:40.531Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Oracle数据库逻辑备份恢复迁移之expdp与impdp"><a href="#Oracle数据库逻辑备份恢复迁移之expdp与impdp" class="headerlink" title="Oracle数据库逻辑备份恢复迁移之expdp与impdp"></a>Oracle数据库逻辑备份恢复迁移之expdp与impdp</h1><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>[Oracle 11G R2 官方文档][1]</p><h2 id="1-Oracle数据泵expdp-impdp概念"><a href="#1-Oracle数据泵expdp-impdp概念" class="headerlink" title="1.Oracle数据泵expdp/impdp概念"></a>1.Oracle数据泵expdp/impdp概念</h2><ul><li>Oracle Database 10g引入了最新的数据泵(Data Dump)技术，数据泵导出导入(EXPDP和IMPDP)的作用<blockquote><p>1）实现逻辑备份和逻辑恢复.<br>2）在数据库用户之间移动对象.<br>3）在数据库之间移动对象<br>4）实现表空间搬移.</p></blockquote></li><li><p>数据泵导出导入与传统导出导入的区别</p><blockquote><p>&emsp;&emsp;在10g之前,传统的导出和导入分别使用exp工具和imp工具,从10g开始,不仅保留了原有的exp和imp工具,还提供了数据泵导出导入工具expdp和impdp.使用expdp和impdp时应该注意的事项：<br>1）exp和imp是客户端工具程序,它们既可以在可以客户端使用,也可以在服务端使用。<br>2）expdp和impdp是服务端的工具程序,他们只能在oracle服务端使用,不能在客户端使用。<br>3）imp只适用于exp导出文件,不适用于expdp导出文件;impdp只适用于expdp导出文件,而不适用于exp导出文件。</p></blockquote></li><li><p>数据泵导出包括导出表,导出方案,导出表空间,导出数据库4种方式.</p></li><li><p>oracle数据泵的工作流程如下</p><blockquote><p>1、在命令行执行命令<br>2、expdp/impdp命令调用dbms_datapump pl/sql包。 这个api提供高速的导出导入功能。<br>3、 当data 移动的时候， data pump 会自动选择direct path 或者external table mechanism 或者 两种结合的方式。<br>&emsp;&emsp;当metadata（对象定义） 移动的时候，data pump会使用dbms_metadata pl/sql包。 metadata api 将metadata（对象定义）存储在xml里。所有的进程都能load 和unload 这些metadata. 因为data pump 调用的是服务端的api, 所以当一个任务被调度或执行，客户端就可以退出连接，任务job 会在server 端继续执行，随后通过客户端实用程序从任何地方检查任务的状态和进行修改。</p></blockquote></li></ul><h2 id="2-expdp-impdp-命令参数详解"><a href="#2-expdp-impdp-命令参数详解" class="headerlink" title="2.expdp/impdp 命令参数详解"></a>2.expdp/impdp 命令参数详解</h2><h3 id="2-1关于expdp"><a href="#2-1关于expdp" class="headerlink" title="2.1关于expdp"></a>2.1关于expdp</h3><pre class=" language-shell"><code class="language-shell">[oracle@db01:/home/oracle]$expdp -helpExport: Release 11.2.0.3.0 - Production on Mon Aug 22 00:16:30 2016Copyright (c) 1982, 2011, Oracle and/or its affiliates. All rights reserved.The Data Pump export utility provides a mechanism for transferring data objectsbetween Oracle databases. The utility is invoked with the following command:Example: expdp scott/tiger DIRECTORY=dmpdir DUMPFILE=scott.dmpYou can control how Export runs by entering the 'expdp' command followedby various parameters. To specify parameters, you use keywords:Format: expdp KEYWORD=value or KEYWORD=(value1,value2,...,valueN)Example: expdp scott/tiger DUMPFILE=scott.dmp DIRECTORY=dmpdir SCHEMAS=scottor TABLES=(T1:P1,T1:P2), if T1 is partitioned tableUSERID must be the first parameter on the command line.The available keywords and their descriptions follow. Default values are listed within square brackets.ATTACHAttach to an existing job.For example, ATTACH=job_name.该选项用于在客户会话与已存在导出作用之间建立关联.语法如下attach=[schema_name.]job_nameschema_name用于指定方案名,job_name用于指定导出作业名.注意,如果使用attach选项,在命令行除了连接字符串和attach选项外,不能指定任何其他选项,示例如下:expdp scott/tiger attach=scott.export_jobCLUSTERUtilize cluster resources and distribute workers across the Oracle RAC.Valid keyword values are: [Y] and N.而在11GR2后EXPDP和IMDP的WORKER进程会在多个INSTANCE启动，所以DIRECTORY必须在共享磁盘上，如果没有设置共享磁盘还是指定cluster=no来防止报错COMPRESSIONReduce the size of a dump file.Valid keyword values are: ALL, DATA_ONLY, [METADATA_ONLY] and NONE.这个压缩比例可以和操作系统“gzip -9”相媲美，某些特例下有可能比gzip还要高效：1/7。10g中的COMPRESSION参数只提供METADATA_ONLY和NONE两个选项，基本上没有提供压缩功能。11g中的COMPRESSION参数提供四个选项，分别是ALL、DATA_ONLY、METADATA_ONLY和NONE，非常的丰富，稍后我们将使用ALL参数进行操作。Oracle 11g的EXPDP工具提供了真正意义上的“备份压缩”，这个技术在备份空间不足的情况下非常实用。all 压缩元数据和对象数据 data_only 只压缩对象数据 metadata_only 只压缩元数据 none 不压缩任何数据。CONTENTSpecifies data to unload.Valid keyword values are: [ALL], DATA_ONLY and METADATA_ONLY.该选项用于指定要导出的内容.默认值为allcontent={all | data_only | metadata_only}当设置content为all 时,将导出对象定义及其所有数据.为data_only时,只导出对象数据,为metadata_only时,只导出对象定义。expdp scott/tiger directory=dump dumpfile=a.dump content=metadata_onlyDATA_OPTIONSData layer option flags.Valid keyword values are: XML_CLOBS.用于为某些类型的数据提供选项DIRECTORYDirectory object to be used for dump and log files.指定转储文件和日志文件所在的目录，directory=directory_objectdirectory_object用于指定目录对象名称.需要注意,目录对象是使用create directory语句建立的对象,而不是os 目录。expdp scott/tiger directory=dump dumpfile=a.dump先在对应的位置创建物理文件夹，如d:/backup建立目录:create or replace directory backup as '/opt/oracle/utl_file'sql>create directory backup as ‘d:/backup’;sql>grant read,write on directory backup to system;查询创建了那些子目录:select * from dba_directories;DUMPFILESpecify list of destination dump file names [expdat.dmp].For example, DUMPFILE=scott1.dmp, scott2.dmp, dmpdir:scott3.dmp.用于指定转储文件的名称,默认名称为expdat.dmpdumpfile=[directory_object:]file_name [,….]directory_object用于指定目录对象名,file_name用于指定转储文件名.需要注意,如果不指定directory_object,导出工具会自动使用directory选项指定的目录对象：expdp scott/tiger directory=dump1 dumpfile=dump2:a.dmpENCRYPTIONEncrypt part or all of a dump file.Valid keyword values are: ALL, DATA_ONLY, ENCRYPTED_COLUMNS_ONLY, METADATA_ONLY and NONE.是否加密导出数据 默认noneencryption={all | data_only |metadata_only | encrypted_columns_only | none}all 对象和元数据 data_only 对象加密 metadata_only 元数据加密 encryption_columns_only 只加密加密列 none 不加密ENCRYPTION_ALGORITHMSpecify how encryption should be done.Valid keyword values are: [AES128], AES192 and AES256.加密算法 默认aes128encryption_algorithm= {aes128 | aes 192 | aes 256}ENCRYPTION_MODEMethod of generating encryption key.Valid keyword values are: DUAL, PASSWORD and [TRANSPARENT].加密和解密所使用的安全类型encryption_mode={dual | password |transparent }dual 表示用 oracle wallet 或指定口令建立导出文件password 指定口令建立导出文件 transparent oracle wallet建立导出文件ENCRYPTION_PASSWORDPassword key for creating encrypted data within a dump file.指定加密和解密口令 encryption_password=passwordESTIMATECalculate job estimates.Valid keyword values are: [BLOCKS] and STATISTICS.指定估算被导出表所占用磁盘空间分方法.默认值是blocks。extimate={blocks | statistics}设置为blocks时,oracle会按照目标对象所占用的数据块个数乘以数据块尺寸估算对象占用的空间,设置为statistics时,根据最近统计值估算对象占用空间: expdp scott/tiger tables=emp estimate=statistics directory=dump dumpfile=a.dumpESTIMATE_ONLYCalculate job estimates without performing the export.指定是否只估算导出作业所占用的磁盘空间,默认值为nextimate_only={y | n}设置为y时,导出作用只估算对象所占用的磁盘空间,而不会执行导出作业,为n时,不仅估算对象所占用的磁盘空间,还会执行导出操作.expdp scott/tiger estimate_only=y nologfile=yEXCLUDEExclude specific object types.For example, EXCLUDE=SCHEMA:"='HR'".该选项用于指定执行操作时释放要排除对象类型或相关对象 ITPUXexclude=object_type[:name_clause] [,….]object_type用于指定要排除的对象类型,name_clause用于指定要排除的具体对象.exclude和include不能同时使用。expdp scott/tiger directory=dump dumpfile=a.dup exclude=viewFILESIZESpecify the size of each dump file in units of bytes.指定导出文件的最大尺寸,默认为0,(表示文件尺寸没有限制)FLASHBACK_SCNSCN used to reset session snapshot.指定导出特定scn时刻的表数据。flashback_scn=scn_valuescn_value用于标识scn值.flashback_scn和flashback_time不能同时使用： expdpscott/tiger directory=dump dumpfile=a.dmp flashback_scn=358523FLASHBACK_TIMETime used to find the closest corresponding SCN value.指定导出特定时间点的表数据flashback_time=”to_timestamp(time_value)”expdp scott/tiger directory=dump dumpfile=a.dmp flashback_time= “to_timestamp(’25-08-2004 14:35:00’,’dd-mm-yyyy hh24:mi:ss’)”FULLExport entire database [N].指定数据库模式导出,默认为n。 full={y | n} 。为y时,标识执行数据库导出.HELPDisplay Help messages [N].指定是否显示expdp命令行选项的帮助信息,默认为n。当设置为y时,会显示导出选项的帮助信息. expdp help=yINCLUDEInclude specific object types.For example, INCLUDE=TABLE_DATA.指定导出时要包含的对象类型及相关对象。include = object_type[:name_clause] [,… ]JOB_NAMEName of export job to create.指定要导出作用的名称,默认为sys_xxx 。job_name=jobname_stringLOGFILESpecify log file name [export.log].指定导出日志文件文件的名称,默认名称为export.loglogfile=[directory_object:]file_namedirectory_object用于指定目录对象名称,file_name用于指定导出日志文件名.如果不指定directory_object.导出作用会自动使用directory的相应选项值.expdp scott/tiger directory=dump dumpfile=a.dmp logfile=a.logNETWORK_LINKName of remote database link to the source system.指定数据库链接名,如果要将远程数据库对象导出到本地例程的转储文件中,必须设置该选项.NOLOGFILEDo not write log file [N].该选项用于指定禁止生成导出日志文件,默认值为n.PARALLELChange the number of active workers for current job.指定执行导出操作的并行进程个数,默认值为1一般是cpu的2倍，可以被文件个数整除PARFILESpecify parameter file name.指定导出参数文件的名称。parfile=[directory_path] file_nameQUERYPredicate clause used to export a subset of a table.For example, QUERY=employees:"WHERE department_id > 10".用于指定过滤导出数据的where条件query=[schema.] [table_name:] query_clauseschema用于指定方案名,table_name用于指定表名,query_clause用于指定条件限制子句.query选项不能与connect=metadata_only,extimate_only,transport_tablespaces等选项同时使用.expdp scott/tiger directory=dump dumpfiel=a.dmp tables=emp query=’where deptno=20’REMAP_DATASpecify a data conversion function.For example, REMAP_DATA=EMP.EMPNO:REMAPPKG.EMPNO.用于转换列的数据函数， 并将转换值导出到文件中remap_data=[schema1.]tablename.column_name:[schema2.]pkg.funcREUSE_DUMPFILESOverwrite destination dump file if it exists [N].覆盖已处在的导出文件，默认NSAMPLEPercentage of data to be exported.用于指定被采样数据块的百分比sample=[[schema_name.]table_name:]sample_percent (采用比率)SCHEMASList of schemas to export [login schema].该方案用于指定执行方案模式导出,默认为当前用户方案.SERVICE_NAMEName of an active Service and associated resource group to constrain Oracle RAC resources.SOURCE_EDITIONEdition to be used for extracting metadata.用于提取源数据的版本STATUSFrequency (secs) job status is to be monitored wherethe default [0] will show new status when available.指定显示导出作用进程的详细状态,默认值为0TABLESIdentifies a list of tables to export.For example, TABLES=HR.EMPLOYEES,SH.SALES:SALES_1995.指定表模式导出tables=[schema_name.]table_name[:partition_name][,…]schema_name用于指定方案名,table_name用于指定导出的表名,partition_name用于指定要导出的分区名.TABLESPACESIdentifies a list of tablespaces to export.指定要导出表空间列表TRANSPORTABLESpecify whether transportable method can be used.Valid keyword values are: ALWAYS and [NEVER].指定是否可以使用可传输方法TRANSPORT_FULL_CHECKVerify storage segments of all tables [N].    该选项用于指定被搬移表空间和未搬移表空间关联关系的检查方式,默认为n. 当设置为y时,导出作用会检查表空间直接的完整关联关系,如果表空间所在表空间或其索引所在的表空间只有一个表空间被搬移,将显示错误信息.当设置为n时,导出作用只检查单端依赖,如果搬移索引所在表空间,但未搬移表所在表空间,将显示出错信息,如果搬移表所在表空间,未搬移索引所在表空间,则不会显示错误信息.TRANSPORT_TABLESPACESList of tablespaces from which metadata will be unloaded.指定执行表空间模式导出 ，用于指定搬移的的表空间VERSIONVersion of objects to export.Valid keyword values are: [COMPATIBLE], LATEST or any valid database version.用于指定被导出对象的数据库版本 默认 compatibleversion={compatable | latest |version_string}compatible 根据compatible参数生成对象 latest 根据数据库的实际版本 version_string 指定数据库版本（>9.2）------------------------------------------------------------------------------The following commands are valid while in interactive mode.Note: abbreviations are allowed.ADD_FILEAdd dumpfile to dumpfile set. 向转储文件集中添加转储文件CONTINUE_CLIENTReturn to logging mode. Job will be restarted if idle.返回到记录模式。如果处于空闲状态, 将重新启动作业。EXIT_CLIENTQuit client session and leave job running.退出客户机会话并使作业处于运行状态FILESIZEDefault filesize (bytes) for subsequent ADD_FILE commands.后续 ADD_FILE 命令的默认文件大小 (字节)。HELPSummarize interactive commands.总结交互命令。KILL_JOBDetach and delete job.分离和删除作业PARALLELChange the number of active workers for current job.更改当前作业的活动 worker 的数目。REUSE_DUMPFILESOverwrite destination dump file if it exists [N].是否覆盖dumpfilesSTART_JOBStart or resume current job.Valid keyword values are: SKIP_CURRENT.启动/恢复当前作业。STATUSFrequency (secs) job status is to be monitored wherethe default [0] will show new status when available.在默认值 (0) 将显示可用时的新状态的情况下,要监视的频率 (以秒计) 作业状态。STATUS[=interval]STOP_JOBOrderly shutdown of job execution and exits the client.Valid keyword values are: IMMEDIATE.顺序关闭执行的作业并退出客户机。STOP_JOB=IMMEDIATE 将立即关闭数据泵作业。</code></pre><h2 id="2-2-关于impdp"><a href="#2-2-关于impdp" class="headerlink" title="2.2 关于impdp"></a>2.2 关于impdp</h2><pre class=" language-shell"><code class="language-shell">[oracle@db01:/home/oracle]$impdp -helpImport: Release 11.2.0.3.0 - Production on Mon Aug 22 00:16:43 2016Copyright (c) 1982, 2011, Oracle and/or its affiliates. All rights reserved.The Data Pump Import utility provides a mechanism for transferring data objectsbetween Oracle databases. The utility is invoked with the following command:Example: impdp scott/tiger DIRECTORY=dmpdir DUMPFILE=scott.dmpYou can control how Import runs by entering the 'impdp' command followedby various parameters. To specify parameters, you use keywords:Format: impdp KEYWORD=value or KEYWORD=(value1,value2,...,valueN)Example: impdp scott/tiger DIRECTORY=dmpdir DUMPFILE=scott.dmpUSERID must be the first parameter on the command line.------------------------------------------------------------------------------The available keywords and their descriptions follow. Default values are listed within square brackets.ATTACHAttach to an existing job.For example, ATTACH=job_name.CLUSTERUtilize cluster resources and distribute workers across the Oracle RAC.Valid keyword values are: [Y] and N.CONTENTSpecifies data to load.Valid keywords are: [ALL], DATA_ONLY and METADATA_ONLY.DATA_OPTIONSData layer option flags.Valid keywords are: SKIP_CONSTRAINT_ERRORS.DIRECTORYDirectory object to be used for dump, log and SQL files.DUMPFILEList of dump files to import from [expdat.dmp].For example, DUMPFILE=scott1.dmp, scott2.dmp, dmpdir:scott3.dmp.ENCRYPTION_PASSWORDPassword key for accessing encrypted data within a dump file.Not valid for network import jobs.ESTIMATECalculate job estimates.Valid keywords are: [BLOCKS] and STATISTICS.EXCLUDEExclude specific object types.For example, EXCLUDE=SCHEMA:"='HR'".FLASHBACK_SCNSCN used to reset session snapshot.FLASHBACK_TIMETime used to find the closest corresponding SCN value.FULLImport everything from source [Y].HELPDisplay help messages [N].INCLUDEInclude specific object types.For example, INCLUDE=TABLE_DATA.JOB_NAMEName of import job to create.LOGFILELog file name [import.log].NETWORK_LINKName of remote database link to the source system.NOLOGFILEDo not write log file [N].PARALLELChange the number of active workers for current job.PARFILESpecify parameter file.PARTITION_OPTIONSSpecify how partitions should be transformed.Valid keywords are: DEPARTITION, MERGE and [NONE].QUERYPredicate clause used to import a subset of a table.For example, QUERY=employees:"WHERE department_id > 10".REMAP_DATASpecify a data conversion function.For example, REMAP_DATA=EMP.EMPNO:REMAPPKG.EMPNO.REMAP_DATAFILERedefine data file references in all DDL statements.REMAP_SCHEMAObjects from one schema are loaded into another schema.REMAP_TABLETable names are remapped to another table.For example, REMAP_TABLE=HR.EMPLOYEES:EMPS.REMAP_TABLESPACETablespace objects are remapped to another tablespace.REUSE_DATAFILESTablespace will be initialized if it already exists [N].SCHEMASList of schemas to import.SERVICE_NAMEName of an active Service and associated resource group to constrain Oracle RAC resources.SKIP_UNUSABLE_INDEXESSkip indexes that were set to the Index Unusable state.SOURCE_EDITIONEdition to be used for extracting metadata.SQLFILEWrite all the SQL DDL to a specified file.STATUSFrequency (secs) job status is to be monitored wherethe default [0] will show new status when available.STREAMS_CONFIGURATIONEnable the loading of Streams metadataTABLE_EXISTS_ACTIONAction to take if imported object already exists.Valid keywords are: APPEND, REPLACE, [SKIP] and TRUNCATE.TABLESIdentifies a list of tables to import.For example, TABLES=HR.EMPLOYEES,SH.SALES:SALES_1995.TABLESPACESIdentifies a list of tablespaces to import.TARGET_EDITIONEdition to be used for loading metadata.TRANSFORMMetadata transform to apply to applicable objects.Valid keywords are: OID, PCTSPACE, SEGMENT_ATTRIBUTES and STORAGE.TRANSPORTABLEOptions for choosing transportable data movement.Valid keywords are: ALWAYS and [NEVER].Only valid in NETWORK_LINK mode import operations.TRANSPORT_DATAFILESList of data files to be imported by transportable mode.TRANSPORT_FULL_CHECKVerify storage segments of all tables [N].TRANSPORT_TABLESPACESList of tablespaces from which metadata will be loaded.Only valid in NETWORK_LINK mode import operations.VERSIONVersion of objects to import.Valid keywords are: [COMPATIBLE], LATEST or any valid database version.Only valid for NETWORK_LINK and SQLFILE.------------------------------------------------------------------------------The following commands are valid while in interactive mode.Note: abbreviations are allowed.CONTINUE_CLIENTReturn to logging mode. Job will be restarted if idle.EXIT_CLIENTQuit client session and leave job running.HELPSummarize interactive commands.KILL_JOBDetach and delete job.PARALLELChange the number of active workers for current job.START_JOBStart or resume current job.Valid keywords are: SKIP_CURRENT.STATUSFrequency (secs) job status is to be monitored wherethe default [0] will show new status when available.STOP_JOBOrderly shutdown of job execution and exits the client.Valid keywords are: IMMEDIATE.其实IMPDP命令行选项与EXPDP有很多相同的,下面我们只介绍不同的部分：（1）REMAP_DATAFILE该选项用于将源数据文件名转变为目标数据文件名,在不同平台之间搬移表空间时可能需要该选项.REMAP_DATAFIEL=source_datafie:target_datafile（2）REMAP_SCHEMA该选项用于将源方案的所有对象装载到目标方案中.REMAP_SCHEMA=source_schema:target_schema（3）REMAP_TABLESPACE将源表空间的所有对象导入到目标表空间中REMAP_TABLESPACE=source_tablespace:target_tablespace（4）REUSE_DATAFILES该选项指定建立表空间时是否覆盖已存在的数据文件.默认为N。REUSE_DATAFIELS={Y | N}（5）SKIP_UNUSABLE_INDEXES指定导入是是否跳过不可使用的索引,默认为N（6）SQLFILE指定将导入要指定的索引DDL操作写入到SQL脚本中。SQLFILE=[directory_object:]file_nameImpdp scott/tiger DIRECTORY=dump DUMPFILE=tab.dmp SQLFILE=a.sql（7）STREAMS_CONFIGURATION指定是否导入流元数据(Stream Matadata),默认值为Y.（8）TABLE_EXISTS_ACTION该选项用于指定当表已经存在时导入作业要执行的操作,默认为SKIPTABBLE_EXISTS_ACTION={SKIP | APPEND | TRUNCATE | FRPLACE }当设置该选项为SKIP时,导入作业会跳过已存在表处理下一个对象;当设置为APPEND时,会追加数据,为TRUNCATE时,导入作业会截断表,然后为其追加新数据;当设置为REPLACE时,导入作业会删除已存在表,重建表病追加数据,注意,TRUNCATE选项不适用与簇表和NETWORK_LINK选项（9）TRANSFORM该选项用于指定是否修改建立对象的DDL语句TRANSFORM=transform_name:value[:object_type]Transform_name用于指定转换名,其中SEGMENT_ATTRIBUTES用于标识段属性(物理属性,存储属性,表空间,日志等信息),STORAGE用于标识段存储属性,VALUE用于指定是否包含段属性或段存储属性,object_type用于指定对象类型.Impdp scott/tiger directory=dump dumpfile=tab.dmp Transform=segment_attributes:n:table（10）TRANSPORT_DATAFILES该选项用于指定搬移空间时要被导入到目标数据库的数据文件。TRANSPORT_DATAFILE=datafile_nameDatafile_name用于指定被复制到目标数据库的数据文件Impdp system/manager DIRECTORY=dump DUMPFILE=tts.dmp TRANSPORT_DATAFILES=’/user01/data/tbs1.f’</code></pre><h2 id="3-expdp-impdp-使用方法详解"><a href="#3-expdp-impdp-使用方法详解" class="headerlink" title="3.expdp/impdp 使用方法详解"></a>3.expdp/impdp 使用方法详解</h2><h3 id="3-1-oracle-expdp-使用方法介绍"><a href="#3-1-oracle-expdp-使用方法介绍" class="headerlink" title="3.1 oracle expdp 使用方法介绍"></a>3.1 oracle expdp 使用方法介绍</h3><pre class=" language-shell"><code class="language-shell">使用expdp工具时,其转储文件只能被存放在directory对象对应的os目录中,而不能直接指定转储文件所在的os目录.因此,使用expdp工具时,必须首先建立directory对象.并且需要为数据库用户授予使用directory对象权限.--创建directory:create directory itpuxbak_dir as '/backup';grant read,write on directory itpuxbak_dir to system;grant read,write on directory itpuxbak_dir to itpux01;--01)导出整个数据库expdp system/oracle directory=itpuxbak_dir dumpfile=expdp_full_db01.dmp logfile=expdp_full_db01.log full=yexpdp system/oracle directory=itpuxbak_dir dumpfile=expdp_full_db01_%U.dmp logfile=expdp_full_db01.log full=y parallel=4--02)导出方案-schema-用户expdp system/oracle directory=itpuxbak_dir dumpfile=expdp_u_itpux01.dmp logfile=expdp_u_itpux01.log schemas=itpux01,itpux02--03)导出表空间expdp system/oracle directory=itpuxbak_dir dumpfile=expdp_ts_itpux01.dmp logfile=expdp_ts_itpux01.log tablespaces=itpux01,itpux02--04)导出表expdp system/oracle directory=itpuxbak_dir dumpfile=expdp_tb_itpux01.dmp logfile=expdp_tb_itpux01.log tables=itpux01,itpux02expdp itpux01/itpux01 directory=itpuxbak_dir dumpfile=expdp_tb_itpux01.dmp logfile=expdp_tb_itpux01.log tables=itpux01--05)按表查询条件导出expdp system/oracle directory=itpuxbak_dir dumpfile=expdp_q_itpux01.dmp logfile=expdp_q_itpux01.log tables=itpux01 query='where id=5'expdp system/oracle directory=itpuxbak_dir dumpfile=expdp_q_itpux01.dmp logfile=expdp_q_itpux01.log QUERY=employees:"WHERE department_id > 10"</code></pre><h3 id="3-2-oracle-impdp-使用方法介绍"><a href="#3-2-oracle-impdp-使用方法介绍" class="headerlink" title="3.2 oracle impdp 使用方法介绍"></a>3.2 oracle impdp 使用方法介绍</h3><blockquote><p>使用impdp工具时,如果数据库中不存在相应的directory，必须首先建立directory对象.并且需要为数据库用户授予使用directory对象权限.<br><code>`</code>sql<br>–创建directory:<br>create directory itpuxbak_dir as ‘/backup’;<br>grant read,write on directory itpuxbak_dir to system;<br>grant read,write on directory itpuxbak_dir to itpux01;</p></blockquote><p>–01)导入整个数据库<br>impdp system/oracle directory=itpuxbak_dir dumpfile=expdp_full_db01.dmp logfile=impdp_full_db01.log full=y<br>impdp system/oracle directory=itpuxbak_dir dumpfile=expdp_full_db01_%U.dmp logfile=impdp_full_db01.log full=y parallel=4</p><p>–02)导入方案-schema-用户<br>impdp system/oracle directory=itpuxbak_dir dumpfile=expdp_u_itpux01.dmp logfile=impdp_u_itpux01.log schemas=itpux01,itpux02<br>impdp system/oracle directory=itpuxbak_dir dumpfile=expdp_u_itpux01.dmp logfile=impdp_u_itpux01.log schemas=itpux01,itpux02 remap_schema=itpux02:itpux002</p><p>–03)导入表空间<br>impdp system/oracle directory=itpuxbak_dir dumpfile=expdp_ts_itpux01.dmp logfile=impdp_ts_itpux01.log tablespaces=itpux01,itpux02</p><p>–04)导入表<br>impdp system/oracle directory=itpuxbak_dir dumpfile=expdp_tb_itpux01.dmp logfile=impdp_tb_itpux01.log tables=itpux01,itpux02<br>impdp system/oracle directory=itpuxbak_dir dumpfile=expdp_tb_itpux01.dmp logfile=impdp_tb_itpux01.log tables=itpux01,itpux02 remap_schema=system:itpux<br>impdp itpux01/itpux01 directory=itpuxbak_dir dumpfile=expdp_tb_itpux01.dmp logfile=impdp_tb_itpux01.log tables=itpux01<br>impdp system/oracle directory=itpuxbak_dir dumpfile=expdp_tb_itpux01.dmp logfile=impdp_tb_itpux01.log TABLES=HR.EMPLOYEES,SH.SALES:SALES_1995</p><p>–05)按表查询条件导入<br>impdp system/oracle directory=itpuxbak_dir dumpfile=expdp_tb_itpux01.dmp logfile=impdp_tb_itpux01.log tables=itpux01,itpux02 query=’where id=5’<br>impdp system/oracle directory=itpuxbak_dir dumpfile=expdp_tb_itpux01.dmp logfile=impdp_tb_itpux01.log tables=itpux01,itpux02 remap_schema=system:itpux query=’where id=5’</p><p>impdp itpux01/itpux01 directory=itpuxbak_dir dumpfile=expdp_tb_itpux01.dmp logfile=impdp_tb_itpux01.log tables=itpux01 query=’where id=5’<br>impdp system/oracle directory=itpuxbak_dir dumpfile=expdp_tb_itpux01.dmp logfile=impdp_tb_itpux01.log TABLES=HR.EMPLOYEES,SH.SALES:SALES_1995 QUERY=HR.EMPLOYEES:”WHERE department_id &gt; 10”</p><pre><code>### 3.3 oracle expdp/impdp补充```shell--01)directorycreate directory itpuxbak_dir as &#39;/backup&#39;;--drop directory itpuxbak_dirselect * from dba_directoriesgrant read,write on directory itpuxbak_dir to system; --system:itpux01:other usersgrant create any directory to system;select * from dba_sys_privs where grantee=&#39;SYSTEM&#39;;--02) sysdba full=yexpdp &quot;&#39;/as sysdba&#39;&quot; directory=itpuxbak_dir dumpfile=expdp_full_db01.dmp logfile=expdp_full_db01.log full=y --sys--03)查询datapump jobsselect * from dba_datapump_jobs;expdp &quot;&#39;/as sysdba&#39;&quot; directory=itpuxbak_dir dumpfile=expdp_full_db01.dmp logfile=expdp_full_db01.log full=y job_name=itpuxexpjob;</code></pre><h2 id="4-配置生产环境的逻辑自动备份策略"><a href="#4-配置生产环境的逻辑自动备份策略" class="headerlink" title="4.配置生产环境的逻辑自动备份策略"></a>4.配置生产环境的逻辑自动备份策略</h2><blockquote><p>每天做逻辑备份，数据量大小500G，保留2天，空间准备2TB<br>我的库不开归档的，不能在线做RMAN。<br><code>`</code>shell<br>create directory itpuxbak_dir as ‘/backup’;<br>grant read,write on directory itpuxbak_dir to system;<br>grant create any directory to system;</p></blockquote><p>#vi expdpfull_db01.sh<br>export BAKDATE=<code>date +%Y%m%d</code><br>expdp system/oracle directory=itpuxbak_dir dumpfile=expdp_full_db01.$BAKDATE.%U.dmp logfile=expdp_full_db01.$BAKDATE.log full=y parallel=4<br>find /backup -name expdp_full_db01.*.dmp -atime +2 -exec rm -rf {} \;</p><p>#–cluster=N</p><p>#chown -R oracle:dba /backup</p><p>#chmod -R 775 /backup</p><p>#crontab -e<br>0 20 <em> </em> * su - oracle -c /backup/scripts/expdpfull_db01.sh</p><pre><code>* --报错的处理：```shellORA-39181: Only partial table data may be exported due to fine grain access control on &quot;OE&quot;.&quot;PURCHASEORDER&quot;select count(*) from &quot;OE&quot;.&quot;PURCHASEORDER&quot;grant EXEMPT ACCESS POLICY to system;expdp system/oracle directory=itpuxbak_dir dumpfile=test-b.dmp logfile=test-b.log tables=OE.PURCHASEORDER</code></pre><h2 id="5-expdp-impdp生产环境数据迁移流程"><a href="#5-expdp-impdp生产环境数据迁移流程" class="headerlink" title="5.expdp/impdp生产环境数据迁移流程"></a>5.expdp/impdp生产环境数据迁移流程</h2><ul><li><p>5.1、做数据迁移流程的目的</p><blockquote><p>使用expdp/impdp进行数据迁移的前置条件、操作步骤，降低对对应用造成的影响及避免故障</p></blockquote></li><li><p>5.2、数据迁移的适用范围</p><blockquote><p>所有线上库&gt;10.2</p></blockquote></li><li><p>5.3、 数据迁移的风险评估</p><blockquote><p>01.有些os对文件大小有限制，expdp数据时需要使用filesize参数来分割导出文件<br>02.expdp导出数据时没有正确估计dmp文件所需空间，导致主机磁盘满。<br>03.跨字符集的数据迁移，由于字符集不兼容导致数据迁移失败。<br>04.导入表空间不存在或者空间不足，导致表创建失败或者数据导入失败，导致其他应用报错</p></blockquote></li><li><p>5.4、数据迁移的准备工作</p><blockquote><p>01.检查源数据库和目标库的版本、字符集，如果目标库版本低于源库，使用目标库的软件做导出。如果字符集不一致，不建议使用expdp/impdp迁移数据。<br>02.user_segments里查出导出表所占的空间大小，检查os对文件大小的限制。<br>03.表比较多的情况下，建议用parfile。各个参数在parfile里写好。<br>04.提前准备备份脚本（parfile参数）：<br><code>`</code>shell<br>cat expdp_itpux.par<br>userid=system/oracle<br>directory=itpuxbak_dir<br>dumpfile=expdp_full_db01.$BAKDATE.%U.dmp<br>logfile=expdp_full_db01.$BAKDATE.log<br>tables=user.tab1,user.tab2,user.tab3<br>parallel=4</p></blockquote></li></ul><p>vi expdp.sh</p><p>export BAKDATE=<code>date +%Y%m%d</code><br>expdp parfile=expdp_itpux.par<br>nohup ./expdp.sh &amp;</p><pre><code>* 5.5、数据迁移的执行过程* 5.6、数据迁移后的验证方案&gt;对比expdp、impdp的日志，确认导出导入数据量是否一致。并在数据库上检查数据量。编译无效对象## 6.expdp/impdp生产环境数据迁移案例&gt;迁移过程详细请看视频演示，此处只做参考### 6.1 迁移目的&gt;将linux系统oracle服务器上schema（itpux01,itpux02）全部通过ExpDP全库迁移到另一台oracle服务器，并能正常查询到相关数据。&gt;IMPDP虽然加上parallel参数，在做table数据导入时确实速度提高了不少，但是在create index和statistics时，依旧采用单线程的方式，故此一般在迁移过程中这两步操作选择生产DDL脚本增加parallel参数后手工执行，以最大化缩减迁移时间。### 6.2 迁移流程```sql1.linux系统oracle服务器上创建测试数据。2.linux本地用Expdp做导出;3.远程主机创建相关对象；4.远程主机用expdp做导入(导入);5.验证远程本地数据合法性;</code></pre><h3 id="6-3-演示过程"><a href="#6-3-演示过程" class="headerlink" title="6.3 演示过程"></a>6.3 演示过程</h3><ul><li>01.准备数据<br><code>`</code>sql<br>/<em> Formatted on 2018/1/30 21:28:32 (QP5 v5.313) </em>/<br>CREATE TABLESPACE itpux11<br>  DATAFILE ‘/oracle/oradata/db01/itpux01.dbf’<pre><code>           SIZE 100 M           AUTOEXTEND OFF</code></pre>  EXTENT MANAGEMENT LOCAL AUTOALLOCATE<br>  SEGMENT SPACE MANAGEMENT AUTO;<br>CREATE TABLESPACE itpux12<br>  DATAFILE ‘/oracle/oradata/db01/itpux02.dbf’<pre><code>           SIZE 100 M           AUTOEXTEND OFF</code></pre>  EXTENT MANAGEMENT LOCAL AUTOALLOCATE<br>  SEGMENT SPACE MANAGEMENT AUTO;<br>–创建用户并授权<br>CREATE USER itpux01 IDENTIFIED BY itpux01<br>  DEFAULT TABLESPACE itpux01;<br>CREATE USER itpux02 IDENTIFIED BY itpux02<br>  DEFAULT TABLESPACE itpux02;<br>GRANT DBA TO itpux01;<br>GRANT DBA TO itpux02;</li></ul><p>ALTER USER itpux01<br>    QUOTA UNLIMITED ON itpux01;</p><p>ALTER USER itpux02<br>    QUOTA UNLIMITED ON itpux02;</p><p>–用户登录并创建测试表<br>CONN itpux01 / itpux01</p><p>CREATE TABLE itpux01<br>(<br>    id    NUMBER (30) PRIMARY KEY NOT NULL,<br>    name DATE<br>);</p><p>CONN itpux02 / itpux02</p><p>CREATE TABLE itpux02<br>(<br>    id    NUMBER (30) PRIMARY KEY NOT NULL,<br>    name DATE<br>);</p><p>–要建两个索引</p><p>CREATE INDEX itpux02<br>    ON itpux02_table_test (id);</p><p>–创建2个存储过程并执行。<br>CONN itpux01 / itpux01</p><p>CREATE OR REPLACE PROCEDURE p_itpux01<br>IS<br>BEGIN<br>    EXECUTE IMMEDIATE ‘select count(*) from itpux01’;</p><pre><code>FOR i IN 1 .. 1000LOOP    INSERT INTO itpux01 (id, name)         VALUES (i, SYSDATE);    COMMIT;END LOOP;EXECUTE IMMEDIATE &#39;select count(*) from itpux01&#39;;</code></pre><p>END p_itpux01;<br>/</p><p>BEGIN<br>    p_itpux01;<br>END;<br>/</p><p>SELECT COUNT (*) FROM itpux01;</p><p>SELECT *<br>  FROM itpux01<br> WHERE id &gt; 990;</p><p>CONN itpux02 / itpux02</p><p>CREATE OR REPLACE PROCEDURE p_itpux02<br>IS<br>BEGIN<br>    EXECUTE IMMEDIATE ‘select count(*) from itpux02’;</p><pre><code>FOR i IN 1 .. 2000LOOP    INSERT INTO itpux02 (id, name)         VALUES (i, SYSDATE);    COMMIT;END LOOP;EXECUTE IMMEDIATE &#39;select count(*) from itpux02&#39;;</code></pre><p>END p_itpux02;<br>/</p><p>BEGIN<br>    p_itpux02;<br>END;<br>/</p><pre><code>* 查询验证数据```sql/* Formatted on 2018/1/30 21:31:51 (QP5 v5.313) */CONN itpux01 / itpux01SELECT COUNT (*) FROM itpux01;SELECT *  FROM itpux01 WHERE id &gt; 990;CONN itpux02 / itpux02SELECT COUNT (*) FROM itpux02;SELECT *  FROM itpux02 WHERE id &gt; 1990;--02.获取DDL--在源主机获取：SPOOL itpux_tbs_create_ddl.sqlSET LONG 200000 PAGESIZE 0 HEAD OFF VERIFY OFF FEEDBACK OFF LINESIZE 200SELECT DBMS_METADATA.get_ddl (&#39;TABLESPACE&#39;, &#39;ITPUX01&#39;) FROM DUAL;SELECT DBMS_METADATA.get_ddl (&#39;TABLESPACE&#39;, &#39;ITPUX02&#39;) FROM DUAL;SPOOL OFF;--在另一台主机执行：CREATE TABLESPACE &quot;ITPUX01&quot;    DATAFILE &#39;/oracle/oradata/db01/itpux01.dbf&#39;                 SIZE 50 M    LOGGING    ONLINE    PERMANENT    BLOCKSIZE 8192    EXTENT MANAGEMENT LOCAL AUTOALLOCATE    DEFAULT    NOCOMPRESS    SEGMENT SPACE MANAGEMENT AUTO;CREATE TABLESPACE &quot;ITPUX02&quot;    DATAFILE &#39;/oracle/oradata/db01/itpux02.dbf&#39;                 SIZE 50 M    LOGGING    ONLINE    PERMANENT    BLOCKSIZE 8192    EXTENT MANAGEMENT LOCAL AUTOALLOCATE    DEFAULT    NOCOMPRESS    SEGMENT SPACE MANAGEMENT AUTO;--03、源库导出建立目录（建立directory）SQL&gt; CREATE OR REPLACE DIRECTORY oradmp AS &#39;/oracle/backup&#39;;SQL&gt; GRANT READ,WRITE ON DIRECTORY oradmp TO SYSTEM;expdp SYSTEM/oracle DIRECTORY=oradmp FULL=y dumpfile=expdpfull_db01_%U.dmp LOGFILE=expdpfull_db01.LOG PARALLEL=2;--04、目标库导入禁止自动维护任务（禁用数据库自动维护任务，oracle11g中存在）SQL&gt; EXECUTE DBMS_AUTO_TASK_ADMIN.DISABLE;建立目录（建立directory）SQL&gt; CREATE OR REPLACE DIRECTORY oradmp AS &#39;/oracle/backup&#39;;SQL&gt; GRANT READ,WRITE ON DIRECTORY oradmp TO SYSTEM;生成index、CONSTRAINT的ddl语句impdp SYSTEM/SYSTEM DIRECTORY=oradmp dumpfile=itpux_01.dmp,itpux_02.dmp LOGFILE=impitpux.LOG PARALLEL=2 SQLFILE=indconddl.SQL INCLUDE=INDEX,CONSTRAINT SCHEMAS=itpux编辑ddl语句脚本sed &#39;s/NOLOGGING/ /g;s/LOGGING/ /g&#39; indconddl.SQL&gt;indconddl.sql.nologinsed &#39;/TABLESPACE/ s/TS_itpux/TS_itpux_INDEX/g;/TABLESPACE/ s/1/32 NOLOGGING/g&#39; indconddl.sql.nologin&gt;indconddl.sql.NEW设置parallel 4;执行导入语句impdp SYSTEM/SYSTEM DIRECTORY=oradmp FULL=y dumpfile=expdpfull_db01_%U.dmp LOGFILE=impdpfull_db01.LOG PARALLEL=2EXCLUDE=INDEX,CONSTRAINT,STATISTICS SCHEMAS=ITPUX;检查job，延后迁移时间内发起的job任务SELECT JOB,       LOG_USER,       SCHEMA_USER,       what,       LAST_DATE,       LAST_SEC,       NEXT_DATE,       NEXT_SEC,       FAILURES,       BROKEN  FROM DBA_JOBS;执行ddl语句脚本，建立索引、约束，手工发起统计分析建立索引、约束chmod +x indconddl.sql.NEW more createindcon.shSQLPLUS -s /nolog &lt;&lt;EOSCONNECT itpux / itpuxSPOOL /tmp/indconcreate.log@ /oracle/backup/indconddl.sql.new;SPOOL OFFEXITEOS执行createindcon.sh然后再改parallel 4;为NOPARALLEL--05、收集统计信息stats.SQL:BEGIN    DBMS_STATS.gather_database_stats;END;/nohup sqlplus &quot;/as sysdba&quot; @ stats.SQL &amp;--06、无效对象的编译自动生成编译无效对象SQL及编译过程1) 统计当前用户无效对象数量:  SELECT OWNER,         object_type,         status,         COUNT (*)    FROM dba_objects   WHERE status &lt;&gt; &#39;VALID&#39;GROUP BY OWNER, object_type, statusORDER BY OWNER, object_type;2) 生成编译无效对象SQLSELECT    &#39;ALTER &#39;       || OBJECT_TYPE       || &#39; &#39;       || OWNER       || &#39;.&#39;       || OBJECT_NAME       || &#39; COMPILE;&#39;  FROM dba_objects WHERE     status &lt;&gt; &#39;VALID&#39;       AND object_type IN (&#39;PACKAGE&#39;,                           &#39;PACKAGE BODY&#39;,                           &#39;FUNCTION&#39;,                           &#39;PROCEDURE&#39;,                           &#39;TRIGGER&#39;,                           &#39;VIEW&#39;);通过复制以上SQL语句,直接手动执行编译执行.也可以采用如下方式在oracle用户下进行手工编译# su - oracle$ sqlplus / as sysdbaSQL&gt; @$ORACLE_HOME/rdbms/ADMIN/utlrp.SQL--07、验证数据对比expdp、impdp的日志，确认导出导入数据量是否一致。并在数据库上检查数据量。比如上面的数据迁移，检查数据量跟日志显示是否一致。SELECT COUNT (*) FROM itpux.itpux01;SQL&gt;SELECT OWNER,OBJECT_TYPE,COUNT(*) FROM dba_objects WHERE wner=&#39;&amp;owner&#39; GROUP BY OWNER,OBJECT_TYPE ORDER BY OBJECT_TYPE;跨schema或者数据库迁移数据时，除检查日志外，还需要检查源和目标的对象数据量、是否有失效对象。检查对象状态SQL&gt;SELECT OWNER,OBJECT_NAME,SUBOBJECT_NAME,STATUS,OBJECT_TYPE FROM dba_objects WHERE wner=&#39;&amp;owner&#39; ORDER BY OBJECT_TYPE, OBJECT_NAME, SUBOBJECT_NAME;  SELECT object_type s_object_type, COUNT (*)    FROM dba_objects   WHERE owner = &#39;ITPUX01&#39;GROUP BY object_type;  SELECT object_type t_object_type, COUNT (*)    FROM dba_objects   WHERE owner = &#39;ITPUX01&#39;GROUP BY object_type;SELECT *  FROM dba_objects WHERE status &lt;&gt; &#39;VALID&#39; AND owner = &#39;ITPUX01&#39;;--08、收尾启用数据库自动维护任务SQL&gt; EXECUTE DBMS_AUTO_TASK_ADMIN.ENABLE;检查并更正job运行时间SELECT JOB,       LOG_USER,       SCHEMA_USER,       what,       LAST_DATE,       LAST_SEC,       NEXT_DATE,       NEXT_SEC,       FAILURES,       BROKEN  FROM DBA_JOBS;--09、对外应用测试</code></pre><h2 id="7-expdp-impdp迁移过程字符集的处理"><a href="#7-expdp-impdp迁移过程字符集的处理" class="headerlink" title="7.expdp/impdp迁移过程字符集的处理"></a>7.expdp/impdp迁移过程字符集的处理</h2><blockquote><p>进行数据的导入导出时，我们要注意关于字符集的问题。在EXPDP/IMPDP过程中我们需要注意四个字符集的参数：</p><pre class=" language-sql"><code class="language-sql"><span class="token number">01</span><span class="token punctuation">.</span>导出端的客户端字符集。<span class="token number">02</span><span class="token punctuation">.</span>导出端数据库字符集。<span class="token number">03</span><span class="token punctuation">.</span>导入端的客户端字符集。<span class="token number">05</span><span class="token punctuation">.</span>导入端数据库字符集。</code></pre><ul><li>查看数据库的字符集的信息<pre class=" language-sql"><code class="language-sql">SQL<span class="token operator">></span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> nls_database_parameters<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//SQL> select * from props$;</span>NLS_LANGUAGE AMERICANNLS_TERRITORY AMERICANLS_CURRENCY $NLS_ISO_CURRENCY AMERICANLS_NUMERIC_CHARACTERS <span class="token punctuation">.</span><span class="token punctuation">,</span>NLS_CHARACTERSET ZHS16GBKNLS_CALENDAR GREGORIANNLS_DATE_FORMAT DD<span class="token operator">-</span>MON<span class="token operator">-</span>RRNLS_DATE_LANGUAGE AMERICANNLS_SORT <span class="token keyword">BINARY</span>NLS_TIME_FORMAT HH<span class="token punctuation">.</span>MI<span class="token punctuation">.</span>SSXFF AMNLS_TIMESTAMP_FORMAT DD<span class="token operator">-</span>MON<span class="token operator">-</span>RR HH<span class="token punctuation">.</span>MI<span class="token punctuation">.</span>SSXFF AMNLS_TIME_TZ_FORMAT HH<span class="token punctuation">.</span>MI<span class="token punctuation">.</span>SSXFF AM TZRNLS_TIMESTAMP_TZ_FORMAT DD<span class="token operator">-</span>MON<span class="token operator">-</span>RR HH<span class="token punctuation">.</span>MI<span class="token punctuation">.</span>SSXFF AM TZRNLS_DUAL_CURRENCY $NLS_COMP <span class="token keyword">BINARY</span>NLS_LENGTH_SEMANTICS BYTENLS_NCHAR_CONV_EXCP <span class="token boolean">FALSE</span>NLS_NCHAR_CHARACTERSET AL16UTF16NLS_RDBMS_VERSION <span class="token number">11.2</span><span class="token punctuation">.</span><span class="token number">0.3</span><span class="token punctuation">.</span><span class="token number">0</span></code></pre></li></ul></blockquote><ul><li>我们再来查看客户端的字符集信息<pre class=" language-shell"><code class="language-shell">客户端字符集的参数NLS_LANG=_< territory >.language：指定oracle消息使用的语言，日期中日和月的显示。Territory：指定货币和数字的格式，地区和计算星期及日期的习惯。Characterset：控制客户端应用程序使用的字符集。通常设置或等于客户端的代码页。ZHS16GBK、UTF8。如数据库语言环境os是windows,使用命令set NLS_LANG=AMERICAN_AMERICA.ZHS16GBKos是linux or unix,使用命令export NLS_LANG=AMERICAN_AMERICA.ZHS16GBK在unix中：$ env|grep NLS_LANGNLS_LANG=AMERICAN_AMERICA.ZHS16GBK当前修改可用：$ export NLS_LANG=AMERICAN_AMERICA.ZHS16GBK永久修改可用：vi bash_profile通常在导出时最好把客户端字符集设置得和数据库端相同。当进行数据导入时，主要有以下两种情况：</code></pre><blockquote><p>(1) 源数据库和目标数据库具有相同的字符集设置。<br>这时，只需设置导出和导入端的客户端NLS_LANG等于数据库字符集即可。<br>(2) 源数据库和目标数据库字符集不同。<br>先将导出端客户端的NLS_LANG设置成和导出端的数据库字符集一致，导出数据，然后将导入端客户端的NLS_LANG设置成和导出端一致，导入数据，这样转换只发生在数据库端，而且只发生一次。<br>这种情况下，只有当导入端数据库字符集为导出端数据库字符集的严格超集时，数据才能完全导成功，否则，可能会有数据不一致或乱码出现。</p></blockquote></li></ul><h2 id="8-expdp与impdp-版本兼容性与各版本的区别"><a href="#8-expdp与impdp-版本兼容性与各版本的区别" class="headerlink" title="8.expdp与impdp 版本兼容性与各版本的区别"></a>8.expdp与impdp 版本兼容性与各版本的区别</h2><p>参考资料：<br><a href="http://www.itpux.com/thread-288-1-1.html" target="_blank" rel="noopener">http://www.itpux.com/thread-288-1-1.html</a></p><h2 id="9-如何停止expdp与impdp备份任务的后台进程"><a href="#9-如何停止expdp与impdp备份任务的后台进程" class="headerlink" title="9.如何停止expdp与impdp备份任务的后台进程"></a>9.如何停止expdp与impdp备份任务的后台进程</h2><p>参考资料：<br><a href="http://www.itpux.com/thread-286-1-1.html" target="_blank" rel="noopener">http://www.itpux.com/thread-286-1-1.html</a></p><h2 id="10-如何清理不需要的数据泵job"><a href="#10-如何清理不需要的数据泵job" class="headerlink" title="10.如何清理不需要的数据泵job"></a>10.如何清理不需要的数据泵job</h2><p>参考资料：<br><a href="http://www.itpux.com/thread-287-1-1.html" target="_blank" rel="noopener">http://www.itpux.com/thread-287-1-1.html</a></p><h2 id="11-如何对expdp-impdp进行trace跟踪分析问题"><a href="#11-如何对expdp-impdp进行trace跟踪分析问题" class="headerlink" title="11.如何对expdp/impdp进行trace跟踪分析问题"></a>11.如何对expdp/impdp进行trace跟踪分析问题</h2><h3 id="11-1-使用Trace-480300"><a href="#11-1-使用Trace-480300" class="headerlink" title="11.1 使用Trace 480300"></a>11.1 使用Trace 480300</h3><blockquote><p>&emsp;&emsp;Data Pump工作原理有两个特点：作业调度，多进程配合协作。对Data Pump的诊断本质上就是对各种Process行为的跟踪。Oracle提供了一个Trace的隐含参数，来帮助我们实现这个目标。<br>&emsp;&emsp;Trace并不像其他跟踪过程相同，使用y/n的参数，开启或者关闭。Data Pump的Trace参数是一个7位十六进制组成的数字串。不同的数字串表示不同的跟踪对象方法。7位十六进制数字分为两个部分，前三个数字表示特定的数据泵组件，后四位使用0300就可以。</p></blockquote><ul><li>各个组件分别使用不同的三位十六进制数字代表。如下片段所示<br><code>`</code>shell<br>– Summary of Data Pump trace levels:<br>– ==================================<br>Trace DM DW ORA Lines<br>level trc trc trc in<br>(hex) file file file trace Purpose</li></ul><hr><p>10300 x x x SHDW: To trace the Shadow process (API) (expdp/impdp)<br>20300 x x x KUPV: To trace Fixed table<br>40300 x x x ‘div’ To trace Process services<br>80300 x KUPM: To trace Master Control Process (MCP) (DM)<br>100300 x x KUPF: To trace File Manager<br>200300 x x x KUPC: To trace Queue services<br>400300 x KUPW: To trace Worker process(es) (DW)<br>800300 x KUPD: To trace Data Package<br>1000300 x META. To trace Metadata Package<br>— +<br>1FF0300 x x x ‘all’ To trace all components (full tracing)</p><pre><code>&gt;如果需要同时跟踪多个组件，需要将目标组件的hex值进行累加，后面四位的300相同。&gt;400300+80300=480300&gt;&amp;emsp;&amp;emsp;对于跟踪的Trace取值，Oracle建议使用480300就可以应对大部分的情况。480300会跟踪Oracle Dump作业的Master Control Process（MCP）和Work Process。作为初始化跟踪的过程，480300基本就够用了。&gt;我们先从数据导出Expdp看Trace，导出一个案例。首先清理一下Trace File目录```sqlexpdp \&quot;/ as sysdba\&quot; directory=dumpdir schemas=itpux dumpfile=itpux_dump.dmp parallel=2 trace=480300</code></pre><blockquote><p>&emsp;&emsp;然后检查trc目录，Dm和dw标注的就是MCP和Work Process生成的Trace文件。同时Parallel设置使得dw有00和01两个。<br>2个trace 文件在BACKGROUND_DUMP_DEST目录下：</p><pre class=" language-sql"><code class="language-sql">Master Process trace <span class="token keyword">file</span>: <span class="token operator">&lt;</span>SID<span class="token operator">></span>_dm<span class="token operator">&lt;</span>number<span class="token operator">></span>_<span class="token operator">&lt;</span>process_id<span class="token operator">></span><span class="token punctuation">.</span>trcWorker Process trace <span class="token keyword">file</span>: <span class="token operator">&lt;</span>SID<span class="token operator">></span>_dw<span class="token operator">&lt;</span>number<span class="token operator">></span>_<span class="token operator">&lt;</span>process_id<span class="token operator">></span><span class="token punctuation">.</span>trc</code></pre><p>在导出过程中，我们可以看到两个worker的会话信息。<br><code>`</code>sql<br>SQL&gt; select * from dba_datapump_sessions;<br>OWNER_NAME JOB_NAME INST_ID SADDR SESSION_TYPE</p></blockquote><hr><p>SYS SYS_EXPORT_SCHEMA_01 1 35EB0580 DBMS_DATAPUMP<br>SYS SYS_EXPORT_SCHEMA_01 1 35E95280 MASTER<br>SYS SYS_EXPORT_SCHEMA_01 1 35E8A480 WORKER<br>SYS SYS_EXPORT_SCHEMA_01 1 35E84D80 WORKER</p><pre><code>&gt;&amp;emsp;&amp;emsp;此时我们可以从Trace文件中，看到一些Data Pump工作的细节信息。例如：在MCP的Trace文件中，我们看到一系列调用动作过程，如下片段：--初始化导出动作，整理文件系统；-日志写入在Worker Process中，如下片段看出在导出数据。### 11.2 使用Trace 480301&gt;&amp;emsp;&amp;emsp;在Trace过程中，我们也可以如10046跟踪过程一样，添加SQL跟踪。Data Pump本质上工作还是一系列的SQL语句，很多时候的性能问题根源都是从SQL着手的。&gt;切换到SQL跟踪模式也比较简单，一般是在Trace数值后面添加1。```sqlimpdp \&quot;/ as sysdba\&quot; directory=dumpdir dumpfile=itpux_dump.dmp remap_schema=itpux:test trace=480301 parallel=2</code></pre><blockquote><p>&emsp;&emsp;在Trace过程中，我们也可以如10046跟踪过程一样，添加SQL跟踪。Data Pump本质上工作还是一系列的SQL语句，很多时候的性能问题根源都是从SQL着手的。<br>切换到SQL跟踪模式也比较简单，一般是在Trace数值后面添加1。我们使用导入过程进行实验。<br>&emsp;&emsp;目录生成的Trace文件，都是10046格式的Raw文件。截取片段如下：<br>10046 生成的trace 文件可读性并不好，所有我们可以使用tkprof工具进行格式化，方便阅读。</p><pre class=" language-sql"><code class="language-sql">$ tkprof itpux_dm00_17292<span class="token punctuation">.</span>trc tkprof_itpux_dm00_17292<span class="token punctuation">.</span><span class="token keyword">out</span> waits<span class="token operator">=</span>y sort<span class="token operator">=</span>exeela$ tkprof itpux_dw01_17294<span class="token punctuation">.</span>trc tkprof_itpux__dw01_17294<span class="token punctuation">.</span><span class="token keyword">out</span> waits<span class="token operator">=</span>y sort<span class="token operator">=</span>exeela</code></pre></blockquote><h3 id="11-3-使用10046事件"><a href="#11-3-使用10046事件" class="headerlink" title="11.3.使用10046事件"></a>11.3.使用10046事件</h3><ul><li>10046 事件有如下级别<pre class=" language-shell"><code class="language-shell">event 10046, level 1 = enable standardSQL_TRACE functionalityevent 10046, level 4 = as level 1, plus trace the BIND valuesevent 10046, level 8 = as level 1, plus trace the WAITsevent 10046, level 12 = as level 1, plus trace the BIND values and the WAITs</code></pre></li><li>不同级别的使用情况如下<pre class=" language-shell"><code class="language-shell">level 1: lowest level tracing - not alwayssufficient to determine cause of errors;level 4: useful when an error in DataPump's worker or master process occurs;level 12: useful when there is an issuewith Data Pump performance.</code></pre></li><li>注意：<blockquote><p>&emsp;&emsp; 当我们设置10046的级别高于8或者12的时候，需要将TIMED_STATISTICS设置为TRUE. 临时的将这个参数设置为true，可以将trace数据性能的影响降到最低，在11gR2里，该参数默认为true。<br>一般只有遇到性能问题时，才会使用8或者12的level。</p></blockquote></li></ul><h3 id="11-4-日常使用"><a href="#11-4-日常使用" class="headerlink" title="11.4 日常使用"></a>11.4 日常使用</h3><ul><li>01、对当前正在运行的进程进行trace<br><code>`</code>sql</li></ul><p>–查看数据泵进程的信息：<br>SET LINES 150 PAGES 100 NUMWIDTH 7<br>COL username FOR a10<br>COL spid FOR a7<br>COL program FOR a25</p><p>SELECT TO_CHAR (SYSDATE, ‘YYYY-MM-DDHH24:MI:SS’) “DATE”,<br>       s.program,<br>       s.sid,<br>       s.status,<br>       s.username,<br>       d.job_name,<br>       p.spid,<br>       s.serial#,<br>       p.pid<br>  FROM v$session s, v$process p, dba_datapump_sessions d<br> WHERE p.addr = s.paddr<br> ands.saddr=d.saddr;</p><pre><code>&gt;使用sys.dbms_system.set_ev设置10046&gt;在上节的查询结果里：Data Pump Master process (DM00)的SID 是58，serial#是85.Data Pump Worker process (DW01)的SID 是23，serial#是311.&gt;使用10046 跟踪活动session的语法如下```sqlSyntax: DBMS_SYSTEM.SET_EV([SID],[SERIAL#],[EVENT],[LEVEL],&#39;&#39;)--在level 4跟踪Worker process进程(Bind values)：execute sys.dbms_system.set_ev(23,311,10046,4,&#39;&#39;);-- stop tracing:execute sys.dbms_system.set_ev(23,311,10046,0,&#39;&#39;);--在level 8 跟踪Master进程（Waits）：execute sys.dbms_system.set_ev(143,50,10046,8,&#39;&#39;);-- stop tracing:execute sys.dbms_system.set_ev(143,50,10046,0,&#39;&#39;);</code></pre><ul><li>02、使用oradebug<blockquote><p>可以在oradebug中设置SPID，来进行trace<br><code>`</code>sql<br>–在level 4跟踪Worker process进程(Bind values)：<br>oradebug setospid 8173<br>oradebug unlimit<br>oradebug event 10046 trace name context forever, level 4<br>oradebug tracefile_name</p></blockquote></li></ul><p>–在level 8 跟踪Master进程（Waits）：<br>oradebug setospid 8171<br>oradebug unlimit<br>oradebug event 10046 trace name context forever, level 8<br>oradebug tracefile_name</p><p>–stop tracing:<br>oradebug event 10046 trace name context off ITPUX</p><pre><code>* 03、使用tkprof 分析trace文件&gt;10046 生成的trace 文件可读性并不好，所有我们可以使用tkprof工具进行格式化，方便阅读。```sql$ tkprof itpux_dm00_17292.trc tkprof_itpux_dm00_17292.out waits=y sort=exeela$ tkprof itpux_dw01_17294.trc tkprof_itpux_dw01_17294.out waits=y sort=exeela</code></pre><h2 id="12-expdp-impdp使用总结"><a href="#12-expdp-impdp使用总结" class="headerlink" title="12.expdp/impdp使用总结"></a>12.expdp/impdp使用总结</h2><ul><li>1.expdp/impdp 默认就是使用直接路径的，所以速度比较快，但是expdp/impdp 是服务端程序，影响它速度的只有磁盘io。</li><li>2.导出多表时，expdp/impdp用法是tables=’table1’,’table2’,’table3’。</li><li>3.dumpfile 参数 ，可以用%u 指定多个数据文件<pre class=" language-sql"><code class="language-sql">expdp xxx<span class="token operator">/</span>xxx schemas<span class="token operator">=</span>xxx directory<span class="token operator">=</span>dump1 <span class="token keyword">dumpfile</span><span class="token operator">=</span>xxx_<span class="token operator">%</span>u<span class="token punctuation">.</span>dmp filesize<span class="token operator">=</span>50g</code></pre><blockquote><p>这样每个文件50g ，xxx_01.dump,xxx_02.dump 这样。</p></blockquote></li><li>4.如果要把用户usera的对象导到用户userb，操作如下：<pre class=" language-shell"><code class="language-shell">impdp system/passwd directory=expdp dumpfile=expdp.dmp remap_schema='usera':'userb' logfile=/oracle/exp.log;</code></pre></li><li><p>5.如果导入需要更换表空间，impdp用remap_tablespace=’tabspace_old’:’tablespace_new’</p></li><li><p>6.关于数据导出时要导出哪些内容</p><blockquote><p>expdp content（all:对象＋导出数据行，data_only：只导出对象，metadata_only：只导出数据的记录）</p></blockquote></li><li>7、数据泵expdp/impdp 影响速度和性能最大的就是paralle。 所以使用数据泵，要想提高速度，就要设置并行参数。如：<blockquote><p>&emsp;&emsp; expdp full=y directory=dump dumpfile=test_%u.dmp parallel=4<br>那么expdp将为parallel 创建4个文件： test_01.dmp，test_02.dmp，test_03.dmp，test_04.dmp。 每个进程一个文件。 这样的话，每个文件的大小会因进程而不同。 可以某个文件很大，某个文件却很小。 要解决这个问题，就是设置filesize 参数。 来指定每个文件的最大值。 这样当一个文件达到最大值的之后，就会创建一个新的文件。</p></blockquote></li></ul><blockquote><p>&emsp;&emsp;如：expdp full=y directory=dump dumpfile=test_%u.dmp parallel=4 filesize=50m<br>导出的dump文件和paralle有关系，那么导入也有关系。 paralle要小于dump文件数。 如果paralle 大于dump文件的个数，就会因为超过的那个进程获取不到文件，就不能对性能提高。一般parall 参数值等于cpu 的个数。而且要小于dump文件的个数。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Oracle数据库逻辑备份恢复迁移之expdp与impdp&quot;&gt;&lt;a href=&quot;#Oracle数据库逻辑备份恢复迁移之expdp与impdp&quot; class=&quot;headerlink&quot; title=&quot;Oracle数据库逻辑备份恢复迁移之expdp与impdp&quot;&gt;&lt;/a
      
    
    </summary>
    
      <category term="Oracle" scheme="https://kyle.github.io/categories/Oracle/"/>
    
    
      <category term="Oracle" scheme="https://kyle.github.io/tags/Oracle/"/>
    
      <category term="备份容灾" scheme="https://kyle.github.io/tags/%E5%A4%87%E4%BB%BD%E5%AE%B9%E7%81%BE/"/>
    
      <category term="Expdp" scheme="https://kyle.github.io/tags/Expdp/"/>
    
      <category term="Impdp" scheme="https://kyle.github.io/tags/Impdp/"/>
    
  </entry>
  
  <entry>
    <title>Laravel简单的分组统计</title>
    <link href="https://kyle.github.io/2018/09/07/laravel/laravel-jian-dan-fen-zu-tong-ji/"/>
    <id>https://kyle.github.io/2018/09/07/laravel/laravel-jian-dan-fen-zu-tong-ji/</id>
    <published>2018-09-07T01:25:00.000Z</published>
    <updated>2019-05-03T15:03:41.463Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><blockquote><p>最近在开发博客的时候需要对分类进行一个简单的数量统计，以此片文章来记录学习过程</p></blockquote><p><img src="http://oss.anonycurse.cn/article/images/20180926/YdmZ31Y85Y9WKqz7mhe8SLIh8hVxrDecB4hRPVzj.png" alt="博客分类"></p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><blockquote><p>laravel 的DB 支持各种查询，最开始不怎么会，最后各种百度还是搞定了</p></blockquote><h3 id="数据库表"><a href="#数据库表" class="headerlink" title="数据库表"></a>数据库表</h3><p><img src="http://oss.anonycurse.cn/article/images/20180926/l8LWYNe2oPrQb6HNUPDbuK971OM8jKApPDEDUfZm.png" alt="文章表"><br><img src="http://oss.anonycurse.cn/article/images/20180926/RxBuEJN65Yy63SijYlkgoez0wrZUjyf8gsbBobO1.png" alt="分类表"></p><h3 id="查询语句"><a href="#查询语句" class="headerlink" title="查询语句"></a>查询语句</h3><pre class=" language-PHP"><code class="language-PHP">$article_groups = DB::table('article_group')    ->select([        'article_group.name as name',        DB::raw('count(`blog_article`.`id`) as count'),    ])    ->leftJoin('article','article_group.id','=','article.g_id')    ->groupBy('article_group.id')    ->get();dump($article_groups);</code></pre><h3 id="查询结果"><a href="#查询结果" class="headerlink" title="查询结果"></a>查询结果</h3><p><img src="http://oss.anonycurse.cn/article/images/20180926/qb06QCqFjjYOiBwOyjhWNDFSoroU71UyPVNcAOTi.png" alt="查询结果"></p><h3 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h3><pre class=" language-SQL"><code class="language-SQL">SELECT     blog_article_group.id as id,    blog_article_group.name as name,    count(blog_article.id) AS countFROM blog_article_groupLEFT JOIN blog_article ON blog_article_group.id = blog_article.g_idGROUP BY blog_article_group.id</code></pre><h2 id="总结讨论"><a href="#总结讨论" class="headerlink" title="总结讨论"></a>总结讨论</h2><p>每种语言都会遇到类似的情况，在学习Golang的时候也会遇到类似的情况</p><h2 id="相关资源"><a href="#相关资源" class="headerlink" title="相关资源"></a>相关资源</h2><p><a href="https://laravel-china.org/articles/4692/laravel-a-sql-how-to-count-multiple-fields-laravel-a-sql-query-the-number-of-each-category" target="_blank" rel="noopener">Laravel 一条 SQL 如何 count 多个字段，Laravel 一条 sql 查询每个分类的数量</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;最近在开发博客的时候需要对分类进行一个简单的数量统计，以此片文章来记录学习过程&lt;/p&gt;
&lt;/blo
      
    
    </summary>
    
      <category term="Laravel" scheme="https://kyle.github.io/categories/Laravel/"/>
    
    
      <category term="PHP" scheme="https://kyle.github.io/tags/PHP/"/>
    
      <category term="Laravel" scheme="https://kyle.github.io/tags/Laravel/"/>
    
      <category term="MySQL" scheme="https://kyle.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Oracle Goldengate数据库复制与容灾实施</title>
    <link href="https://kyle.github.io/2018/09/07/oracle/oracle-goldengate-fu-zhi-yu-rong-zai-shi-shi-shou-ce/"/>
    <id>https://kyle.github.io/2018/09/07/oracle/oracle-goldengate-fu-zhi-yu-rong-zai-shi-shi-shou-ce/</id>
    <published>2018-09-07T01:25:00.000Z</published>
    <updated>2019-05-03T15:43:45.067Z</updated>
    
    <content type="html"><![CDATA[<h1 id="OracleGoldengate数据库复制与容灾实施"><a href="#OracleGoldengate数据库复制与容灾实施" class="headerlink" title="OracleGoldengate数据库复制与容灾实施"></a>OracleGoldengate数据库复制与容灾实施</h1><p><a href="https://docs.oracle.com/cd/E11882_01/index.htm" target="_blank" rel="noopener">Oracle 11G R2 官方文档</a></p><h2 id="1-GoldenGate-文件系统-文件系统"><a href="#1-GoldenGate-文件系统-文件系统" class="headerlink" title="1.GoldenGate 文件系统-文件系统"></a>1.GoldenGate 文件系统-文件系统</h2><h3 id="1-1-安装OGG软件-源端-目标端"><a href="#1-1-安装OGG软件-源端-目标端" class="headerlink" title="1.1 安装OGG软件(源端-目标端)"></a>1.1 安装OGG软件(源端-目标端)</h3><pre class=" language-sql"><code class="language-sql"></code></pre><h3 id="1-2-创建OGG用户-源端-目标端"><a href="#1-2-创建OGG用户-源端-目标端" class="headerlink" title="1.2 创建OGG用户(源端-目标端)"></a>1.2 创建OGG用户(源端-目标端)</h3><ul><li>源端</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLESPACE</span> ogg_tbs    DATAFILE <span class="token string">'/u01/oradata/orcl/ogg_tbs.dbf'</span>        SIZE <span class="token number">100</span> M        AUTOEXTEND <span class="token keyword">ON</span> <span class="token keyword">NEXT</span> <span class="token number">10</span> M MAXSIZE <span class="token number">500</span> M    LOGGING    EXTENT MANAGEMENT <span class="token keyword">LOCAL</span>    SEGMENT SPACE MANAGEMENT AUTO<span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">USER</span> goldengate IDENTIFIED <span class="token keyword">BY</span> goldengate <span class="token keyword">DEFAULT</span> <span class="token keyword">TABLESPACE</span> ogg_tbs <span class="token keyword">TEMPORARY</span> <span class="token keyword">TABLESPACE</span> <span class="token keyword">temp</span> QUOTA UNLIMITED <span class="token keyword">ON</span> users<span class="token punctuation">;</span><span class="token keyword">GRANT</span> <span class="token keyword">CONNECT</span><span class="token punctuation">,</span>RESOURCE <span class="token keyword">TO</span> GOLDENGATE<span class="token punctuation">;</span><span class="token keyword">GRANT</span> <span class="token keyword">CREATE</span> <span class="token keyword">SESSION</span> <span class="token keyword">TO</span> GOLDENGATE<span class="token punctuation">;</span><span class="token keyword">GRANT</span> <span class="token keyword">ALTER</span> <span class="token keyword">SESSION</span> <span class="token keyword">TO</span> GOLDENGATE<span class="token punctuation">;</span><span class="token keyword">GRANT</span> <span class="token keyword">ALTER</span> <span class="token keyword">ANY</span> <span class="token keyword">TABLE</span> <span class="token keyword">TO</span> GOLDENGATE<span class="token punctuation">;</span><span class="token keyword">GRANT</span> <span class="token keyword">ALTER</span> SYSTEM <span class="token keyword">TO</span> GOLDENGATE<span class="token punctuation">;</span><span class="token keyword">GRANT</span> <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">TO</span> GOLDENGATE<span class="token punctuation">;</span><span class="token keyword">GRANT</span> <span class="token keyword">INSERT</span> <span class="token keyword">ANY</span> <span class="token keyword">TABLE</span><span class="token punctuation">,</span><span class="token keyword">UPDATE</span> <span class="token keyword">ANY</span> <span class="token keyword">TABLE</span><span class="token punctuation">,</span><span class="token keyword">DELETE</span> <span class="token keyword">ANY</span> <span class="token keyword">TABLE</span><span class="token punctuation">,</span><span class="token keyword">LOCK</span> <span class="token keyword">ANY</span> <span class="token keyword">TABLE</span> <span class="token keyword">TO</span> GOLDENGATE<span class="token punctuation">;</span><span class="token keyword">GRANT</span> <span class="token keyword">SELECT</span> <span class="token keyword">ANY</span> <span class="token keyword">TRANSACTION</span> <span class="token keyword">TO</span> GOLDENGATE<span class="token punctuation">;</span><span class="token keyword">GRANT</span> <span class="token keyword">SELECT</span> <span class="token keyword">ANY</span> DICTIONARY <span class="token keyword">TO</span> GOLDENGATE<span class="token punctuation">;</span><span class="token keyword">GRANT</span> FLASHBACK <span class="token keyword">ANY</span> <span class="token keyword">TABLE</span> <span class="token keyword">TO</span> GOLDENGATE<span class="token punctuation">;</span><span class="token keyword">GRANT</span> UNLIMITED <span class="token keyword">TABLESPACE</span> <span class="token keyword">TO</span> GOLDENGATE<span class="token punctuation">;</span><span class="token keyword">GRANT</span> <span class="token keyword">EXECUTE</span> <span class="token keyword">on</span> DBMS_FLASHBACK <span class="token keyword">TO</span> GOLDENGATE<span class="token punctuation">;</span><span class="token keyword">GRANT</span> <span class="token keyword">EXECUTE</span> <span class="token keyword">on</span> DBMS_GOLDENGATE_AUTH <span class="token keyword">TO</span> GOLDENGATE<span class="token punctuation">;</span><span class="token keyword">GRANT</span> DBA <span class="token keyword">TO</span> GOLDENGATE<span class="token punctuation">;</span><span class="token keyword">EXEC</span> dbms_goldengate_auth<span class="token punctuation">.</span>grant_admin_privilege<span class="token punctuation">(</span><span class="token string">'GOLDENGATE'</span><span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">,</span><span class="token boolean">TRUE</span><span class="token punctuation">)</span></code></pre><ul><li>目标端</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLESPACE</span> ogg_tbs        DATAFILE <span class="token string">'/u01/oradata/itpux/ogg_tbs.dbf'</span>        SIZE <span class="token number">100</span> M    AUTOEXTEND <span class="token keyword">ON</span> <span class="token keyword">NEXT</span> <span class="token number">10</span> M MAXSIZE <span class="token number">500</span> M    LOGGING    EXTENT MANAGEMENT <span class="token keyword">LOCAL</span>    SEGMENT SPACE MANAGEMENT AUTO<span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">USER</span> goldengate IDENTIFIED <span class="token keyword">BY</span> goldengate <span class="token keyword">DEFAULT</span> <span class="token keyword">TABLESPACE</span> ogg_tbs <span class="token keyword">TEMPORARY</span> <span class="token keyword">TABLESPACE</span> <span class="token keyword">temp</span> QUOTA UNLIMITED <span class="token keyword">ON</span> users<span class="token punctuation">;</span><span class="token keyword">GRANT</span> <span class="token keyword">CONNECT</span><span class="token punctuation">,</span>RESOURCE <span class="token keyword">TO</span> GOLDENGATE<span class="token punctuation">;</span><span class="token keyword">GRANT</span> <span class="token keyword">CREATE</span> <span class="token keyword">SESSION</span> <span class="token keyword">TO</span> GOLDENGATE<span class="token punctuation">;</span><span class="token keyword">GRANT</span> <span class="token keyword">ALTER</span> <span class="token keyword">SESSION</span> <span class="token keyword">TO</span> GOLDENGATE<span class="token punctuation">;</span><span class="token keyword">GRANT</span> <span class="token keyword">ALTER</span> <span class="token keyword">ANY</span> <span class="token keyword">TABLE</span> <span class="token keyword">TO</span> GOLDENGATE<span class="token punctuation">;</span><span class="token keyword">GRANT</span> <span class="token keyword">ALTER</span> SYSTEM <span class="token keyword">TO</span> GOLDENGATE<span class="token punctuation">;</span><span class="token keyword">GRANT</span> <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">TO</span> GOLDENGATE<span class="token punctuation">;</span><span class="token keyword">GRANT</span> <span class="token keyword">INSERT</span> <span class="token keyword">ANY</span> <span class="token keyword">TABLE</span><span class="token punctuation">,</span><span class="token keyword">UPDATE</span> <span class="token keyword">ANY</span> <span class="token keyword">TABLE</span><span class="token punctuation">,</span><span class="token keyword">DELETE</span> <span class="token keyword">ANY</span> <span class="token keyword">TABLE</span><span class="token punctuation">,</span><span class="token keyword">LOCK</span> <span class="token keyword">ANY</span> <span class="token keyword">TABLE</span> <span class="token keyword">TO</span> GOLDENGATE<span class="token punctuation">;</span><span class="token keyword">GRANT</span> <span class="token keyword">SELECT</span> <span class="token keyword">ANY</span> <span class="token keyword">TRANSACTION</span> <span class="token keyword">TO</span> GOLDENGATE<span class="token punctuation">;</span><span class="token keyword">GRANT</span> <span class="token keyword">SELECT</span> <span class="token keyword">ANY</span> DICTIONARY <span class="token keyword">TO</span> GOLDENGATE<span class="token punctuation">;</span><span class="token keyword">GRANT</span> FLASHBACK <span class="token keyword">ANY</span> <span class="token keyword">TABLE</span> <span class="token keyword">TO</span> GOLDENGATE<span class="token punctuation">;</span><span class="token keyword">GRANT</span> UNLIMITED <span class="token keyword">TABLESPACE</span> <span class="token keyword">TO</span> GOLDENGATE<span class="token punctuation">;</span><span class="token keyword">GRANT</span> <span class="token keyword">EXECUTE</span> <span class="token keyword">on</span> DBMS_FLASHBACK <span class="token keyword">TO</span> GOLDENGATE<span class="token punctuation">;</span><span class="token keyword">GRANT</span> <span class="token keyword">EXECUTE</span> <span class="token keyword">on</span> DBMS_GOLDENGATE_AUTH <span class="token keyword">TO</span> GOLDENGATE<span class="token punctuation">;</span><span class="token keyword">GRANT</span> DBA <span class="token keyword">TO</span> GOLDENGATE<span class="token punctuation">;</span><span class="token keyword">EXEC</span> dbms_goldengate_auth<span class="token punctuation">.</span>grant_admin_privilege<span class="token punctuation">(</span><span class="token string">'GOLDENGATE'</span><span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">,</span><span class="token boolean">TRUE</span><span class="token punctuation">)</span></code></pre><h3 id="1-3-创建测试用户-源端-目标端"><a href="#1-3-创建测试用户-源端-目标端" class="headerlink" title="1.3 创建测试用户(源端-目标端)"></a>1.3 创建测试用户(源端-目标端)</h3><ul><li>源端</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span>  <span class="token keyword">TABLESPACE</span> <span class="token string">"KYLE"</span>    DATAFILE <span class="token string">'/u01/app/oracle/oradata/orcl/kyle01.dbf'</span>        SIZE <span class="token number">100</span> M        AUTOEXTEND <span class="token keyword">ON</span> <span class="token keyword">NEXT</span> <span class="token number">10</span> M MAXSIZE <span class="token number">500</span> M    LOGGING    EXTENT MANAGEMENT <span class="token keyword">LOCAL</span>    SEGMENT SPACE MANAGEMENT AUTO<span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">USER</span> <span class="token string">"KYLE"</span>    PROFILE <span class="token string">"DEFAULT"</span>     IDENTIFIED <span class="token keyword">BY</span> <span class="token string">"kyle"</span>     <span class="token keyword">DEFAULT</span> <span class="token keyword">TABLESPACE</span> <span class="token string">"KYLE"</span>     <span class="token keyword">TEMPORARY</span> <span class="token keyword">TABLESPACE</span> <span class="token string">"TEMP"</span>     ACCOUNT UNLOCK<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--测试数据</span><span class="token keyword">SELECT</span> table_name <span class="token keyword">FROM</span> user_tables<span class="token punctuation">;</span><span class="token keyword">CREATE</span> SEQUENCE seq_kyle <span class="token keyword">START</span> <span class="token keyword">WITH</span> <span class="token number">1</span> INCREMENT <span class="token keyword">BY</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> kyle01 <span class="token punctuation">(</span>id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span> rand <span class="token keyword">INT</span> <span class="token punctuation">,</span> name VARCHAR2<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> kyle02 <span class="token punctuation">(</span>id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span> rand <span class="token keyword">INT</span> <span class="token punctuation">,</span> name VARCHAR2<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> kyle03 <span class="token punctuation">(</span>id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span> rand <span class="token keyword">INT</span> <span class="token punctuation">,</span> name VARCHAR2<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> kyle01 <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'Kyle01'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> kyle01 <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'Kyle02'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> kyle01 <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">'Kyle03'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> kyle01 <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">'Kyle04'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">DECLARE</span>  rnd number<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">BEGIN</span>   <span class="token keyword">for</span> i <span class="token operator">in</span> <span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token number">20000</span> loop     <span class="token keyword">IF</span> MOD<span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">0</span> <span class="token keyword">THEN</span>         <span class="token keyword">commit</span><span class="token punctuation">;</span>     <span class="token keyword">ELSE</span>         <span class="token keyword">insert</span> <span class="token keyword">into</span> kyle03 <span class="token keyword">values</span><span class="token punctuation">(</span>seq_kyle<span class="token punctuation">.</span>nextval<span class="token punctuation">,</span>i<span class="token operator">*</span>dbms_random<span class="token punctuation">.</span><span class="token keyword">value</span><span class="token punctuation">,</span><span class="token string">'Kyle Is Testing'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span>   <span class="token keyword">END</span> LOOP<span class="token punctuation">;</span><span class="token keyword">END</span><span class="token punctuation">;</span><span class="token operator">/</span><span class="token keyword">BEGIN</span>   LOOP    <span class="token keyword">delete</span> <span class="token keyword">from</span> kyle03 <span class="token keyword">where</span> rownum<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>     <span class="token keyword">commit</span><span class="token punctuation">;</span>     <span class="token keyword">insert</span> <span class="token keyword">into</span> kyle03 <span class="token keyword">values</span><span class="token punctuation">(</span>seq_kyle<span class="token punctuation">.</span>nextval<span class="token punctuation">,</span><span class="token number">200000</span><span class="token operator">*</span>dbms_random<span class="token punctuation">.</span><span class="token keyword">value</span><span class="token punctuation">,</span><span class="token string">'MACLEAN IS UPDATING'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">commit</span><span class="token punctuation">;</span>     <span class="token keyword">insert</span> <span class="token keyword">into</span> kyle03 <span class="token keyword">values</span><span class="token punctuation">(</span>seq_kyle<span class="token punctuation">.</span>nextval<span class="token punctuation">,</span><span class="token number">300000</span><span class="token operator">*</span>dbms_random<span class="token punctuation">.</span><span class="token keyword">value</span><span class="token punctuation">,</span><span class="token string">'MACLEAN IS UPDATING'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">commit</span><span class="token punctuation">;</span>    <span class="token keyword">update</span> kyle03 <span class="token keyword">set</span> rand<span class="token operator">=</span>rand<span class="token operator">+</span><span class="token number">10</span> <span class="token keyword">where</span> rownum<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">commit</span><span class="token punctuation">;</span>     dbms_lock<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">END</span> loop<span class="token punctuation">;</span><span class="token keyword">END</span><span class="token punctuation">;</span><span class="token operator">/</span></code></pre><ul><li>目标端</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span>  <span class="token keyword">TABLESPACE</span> <span class="token string">"KYLE"</span>    DATAFILE <span class="token string">'/u01/oradata/itpux/kyle01.dbf'</span>        SIZE <span class="token number">100</span> M        AUTOEXTEND <span class="token keyword">ON</span> <span class="token keyword">NEXT</span> <span class="token number">10</span> M MAXSIZE <span class="token number">500</span> M    LOGGING    EXTENT MANAGEMENT <span class="token keyword">LOCAL</span>    SEGMENT SPACE MANAGEMENT AUTO<span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">USER</span> <span class="token string">"KYLE"</span>    PROFILE <span class="token string">"DEFAULT"</span>     IDENTIFIED <span class="token keyword">BY</span> <span class="token string">"kyle"</span>     <span class="token keyword">DEFAULT</span> <span class="token keyword">TABLESPACE</span> <span class="token string">"KYLE"</span>     <span class="token keyword">TEMPORARY</span> <span class="token keyword">TABLESPACE</span> <span class="token string">"TEMP"</span>     ACCOUNT UNLOCK<span class="token punctuation">;</span></code></pre><h3 id="1-4-数据导入导出"><a href="#1-4-数据导入导出" class="headerlink" title="1.4 数据导入导出"></a>1.4 数据导入导出</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> directory bakdir <span class="token keyword">as</span> <span class="token string">'/home/oracle'</span><span class="token punctuation">;</span><span class="token keyword">grant</span> <span class="token keyword">read</span><span class="token punctuation">,</span><span class="token keyword">write</span> <span class="token keyword">on</span> directory bakdir <span class="token keyword">to</span> system<span class="token punctuation">;</span><span class="token keyword">grant</span> <span class="token keyword">create</span> <span class="token keyword">any</span> directory <span class="token keyword">to</span> system<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--导出结构</span><span class="token keyword">CREATE</span> DIRECTORY BAKDIR <span class="token keyword">AS</span> <span class="token string">'/home/oracle'</span><span class="token punctuation">;</span><span class="token keyword">GRANT</span> <span class="token keyword">READ</span><span class="token punctuation">,</span><span class="token keyword">WRITE</span> <span class="token keyword">ON</span> DIRECTORY BAKDIR <span class="token keyword">TO</span> SYSTEM<span class="token punctuation">;</span><span class="token keyword">GRANT</span> <span class="token keyword">CREATE</span> <span class="token keyword">ANY</span> DIRECTORY <span class="token keyword">TO</span> SYSTEM<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--导出某个或多个schema</span>expdp system<span class="token operator">/</span>jia  DIRECTORY<span class="token operator">=</span>bakdir <span class="token keyword">DUMPFILE</span><span class="token operator">=</span>expdp_schema_kyle<span class="token punctuation">.</span>dmp LOGFILE<span class="token operator">=</span>expdp_schema_kyle<span class="token punctuation">.</span>log SCHEMAS<span class="token operator">=</span>kyleimpdp system<span class="token operator">/</span>jia  DIRECTORY<span class="token operator">=</span>bakdir <span class="token keyword">DUMPFILE</span><span class="token operator">=</span>expdp_schema_kyle<span class="token punctuation">.</span>dmp LOGFILE<span class="token operator">=</span>expdp_schema_kyle<span class="token punctuation">.</span>log TABLE_EXISTS_ACTION<span class="token operator">=</span><span class="token keyword">truncate</span> SCHEMAS<span class="token operator">=</span>kylescp <span class="token operator">/</span>home<span class="token operator">/</span>oracle<span class="token operator">/</span>expdp_schema_kyle<span class="token punctuation">.</span>dmp orcl<span class="token number">-122</span>:<span class="token operator">/</span>home<span class="token operator">/</span>oracle<span class="token operator">/</span></code></pre><h3 id="1-5-配置环境变量"><a href="#1-5-配置环境变量" class="headerlink" title="1.5 配置环境变量"></a>1.5 配置环境变量</h3><pre class=" language-sql"><code class="language-sql">alias sqlplus<span class="token operator">=</span><span class="token string">"rlwrap sqlplus"</span>alias ggsci<span class="token operator">=</span><span class="token string">"rlwrap ggsci"</span>alias rman<span class="token operator">=</span><span class="token string">"rlwrap rman"</span>alias asmcmd<span class="token operator">=</span><span class="token string">"rlwrap asmcmd"</span>LD_LIBRARY_PATH<span class="token operator">=</span>$ORACLE_HOME<span class="token operator">/</span>lib:<span class="token operator">/</span>lib:<span class="token operator">/</span>usr<span class="token operator">/</span>lib<span class="token punctuation">;</span> export LD_LIBRARY_PATHCLASSPATH<span class="token operator">=</span><span class="token operator">/</span>ggs:$ORACLE_HOME<span class="token operator">/</span>JRE:$ORACLE_HOME<span class="token operator">/</span>jlib:$ORACLE_HOME<span class="token operator">/</span>rdbms<span class="token operator">/</span>jlib<span class="token punctuation">;</span> export CLASSPATHOGG_PATH<span class="token operator">=</span><span class="token operator">/</span>u01<span class="token operator">/</span>ggs export OGG_PATHPATH<span class="token operator">=</span><span class="token punctuation">.</span>:$PATH:$OGG_PATH:$HOME<span class="token operator">/</span>bin:$ORACLE_BASE<span class="token operator">/</span>product<span class="token operator">/</span><span class="token number">11.2</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">/</span>db_1<span class="token operator">/</span>bin:$ORACLE_HOME<span class="token operator">/</span>bin<span class="token punctuation">;</span> export PATH</code></pre><h3 id="1-6-修改系统参数开启归档"><a href="#1-6-修改系统参数开启归档" class="headerlink" title="1.6 修改系统参数开启归档"></a>1.6 修改系统参数开启归档</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">ALTER</span> SYSTEM <span class="token keyword">SET</span> ENABLE_GOLDENGATE_REPLICATION <span class="token operator">=</span> <span class="token boolean">TRUE</span> SCOPE<span class="token operator">=</span>BOTH<span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">database</span> <span class="token keyword">add</span> supplemental log <span class="token keyword">data</span><span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">database</span> <span class="token keyword">force</span> logging<span class="token punctuation">;</span></code></pre><h3 id="1-7-配置OGG-源端"><a href="#1-7-配置OGG-源端" class="headerlink" title="1.7 配置OGG(源端)"></a>1.7 配置OGG(源端)</h3><ul><li>1.创建目录</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> subdirs</code></pre><ul><li>2.配置MGR</li></ul><pre class=" language-sql"><code class="language-sql">GGSCI<span class="token operator">></span>EDIT PARAMS mgrPORT <span class="token number">7809</span>AUTOSTART ER <span class="token operator">*</span> AUTORESTART ER <span class="token operator">*</span><span class="token punctuation">,</span> RETRIES <span class="token number">3</span><span class="token punctuation">,</span> WAITMINUTES <span class="token number">3</span><span class="token punctuation">,</span> RESETMINUTES <span class="token number">15</span>PURGEOLDEXTRACTS <span class="token punctuation">.</span><span class="token operator">/</span>dirdat<span class="token comment" spellcheck="true">/*, USECHECKPOINTS, MINKEEPDAYS 2*/</span><span class="token comment" spellcheck="true">--端口 7809</span><span class="token comment" spellcheck="true">--自动启动 ER(EXTARCT REPLACT)</span></code></pre><ul><li>3.配置检查点</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--GLOBALS储存了运行的一些信息</span>GGSCI<span class="token operator">></span> EDIT PARAMS <span class="token punctuation">.</span><span class="token operator">/</span>GLOBALSCHECKPOINTTABLE goldengate<span class="token punctuation">.</span><span class="token keyword">checkpoint</span>GGSCI<span class="token operator">></span> dblogin userid goldengate<span class="token punctuation">,</span>password goldengateGGSCI<span class="token operator">></span> <span class="token keyword">ADD</span> CHECKPOINTTABLE goldengate<span class="token punctuation">.</span><span class="token keyword">checkpoint</span></code></pre><ul><li>4.添加补充日志</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--ADD TRANDATA itpux.*</span><span class="token keyword">ADD</span> SCHEMATRANDATA kyle<span class="token comment" spellcheck="true">--配置ddl 的时候，一定要用ADD SCHEMATRANDATA</span><span class="token comment" spellcheck="true">--如果不用ddl,可以用ADD TRANDATA</span>info SCHEMATRANDATA kyle</code></pre><ul><li>5.配置extract进程</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--建立EXTRACT目录</span>mkdir <span class="token operator">-</span>p <span class="token punctuation">.</span><span class="token operator">/</span>dirdat<span class="token operator">/</span>rkylemkdir <span class="token operator">-</span>p <span class="token punctuation">.</span><span class="token operator">/</span>dirrpt<span class="token operator">/</span>rkylemkdir <span class="token operator">-</span>p <span class="token punctuation">.</span><span class="token operator">/</span>dirdat<span class="token operator">/</span>ekylemkdir <span class="token operator">-</span>p <span class="token punctuation">.</span><span class="token operator">/</span>dirrpt<span class="token operator">/</span>ekyleGGSCI<span class="token operator">></span>EDIT PARAMS ekylesetenv<span class="token punctuation">(</span>NLS_LANG<span class="token operator">=</span><span class="token string">"AMERICAN_AMERICA.ZHS16GBK"</span><span class="token punctuation">)</span>setenv<span class="token punctuation">(</span>ORACLE_SID<span class="token operator">=</span><span class="token string">"itpux"</span><span class="token punctuation">)</span>EXTRACT ekyleDDL INCLUDE <span class="token keyword">ALL</span>DDLOPTIONS ADDTRANDATA<span class="token punctuation">,</span>REPORTUSERID goldengate<span class="token punctuation">,</span> PASSWORD goldengateEXTTRAIL <span class="token punctuation">.</span><span class="token operator">/</span>dirdat<span class="token operator">/</span>ekyle<span class="token operator">/</span>exTRANLOGOPTIONS excludeuser goldengateTRANLOGOPTIONS convertucs2clobsWARNLONGTRANS 12h<span class="token punctuation">,</span>CHECKINTERVAL 30mDISCARDFILE <span class="token punctuation">.</span><span class="token operator">/</span>dirrpt<span class="token operator">/</span>ekyle<span class="token operator">/</span>ekyle<span class="token punctuation">.</span>dsc<span class="token punctuation">,</span> APPEND<span class="token punctuation">,</span> MEGABYTES <span class="token number">200</span><span class="token keyword">TABLE</span> kyle<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--设置语言</span><span class="token comment" spellcheck="true">--设置SID</span><span class="token comment" spellcheck="true">--设置EXTRACT名称不能操作过8个字符</span><span class="token comment" spellcheck="true">--抽取所有的DDL操作</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">--定义OGG使用用户</span><span class="token comment" spellcheck="true">--设置抽取目录</span><span class="token comment" spellcheck="true">--排除用于管理抽取的OGG用户</span><span class="token comment" spellcheck="true">--某某参数，可以传输大字段</span><span class="token comment" spellcheck="true">--设置告警阈值</span><span class="token comment" spellcheck="true">--配置文件存放位置</span><span class="token comment" spellcheck="true">--抽取的表</span><span class="token comment" spellcheck="true">--添加一个抽取进程</span><span class="token comment" spellcheck="true">--THREADS 2表示源端有2个RAC节点</span><span class="token keyword">ADD</span> EXTRACT ekyle<span class="token punctuation">,</span> TRANLOG<span class="token punctuation">,</span> <span class="token keyword">BEGIN</span> NOW<span class="token keyword">ADD</span> EXTRACT ekyle<span class="token punctuation">,</span> TRANLOG<span class="token punctuation">,</span> <span class="token keyword">BEGIN</span> NOW<span class="token punctuation">,</span> THREADS <span class="token number">2</span><span class="token comment" spellcheck="true">--添加一个队列文件</span>GGSCI<span class="token operator">></span><span class="token keyword">ADD</span> EXTTRAIL <span class="token punctuation">.</span><span class="token operator">/</span>dirdat<span class="token operator">/</span>ekyle<span class="token operator">/</span>ex<span class="token punctuation">,</span> EXTRACT ekyle<span class="token punctuation">,</span> MEGABYTES <span class="token number">200</span><span class="token comment" spellcheck="true">--启动停止测试</span>GGSCI<span class="token operator">></span><span class="token keyword">START</span> ekyleSTOP ekyle<span class="token keyword">VIEW</span> REPORT ekyle</code></pre><ul><li>6.配置PUMP进程</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token number">cd</span> <span class="token operator">/</span>u01<span class="token operator">/</span>ggsmkdir <span class="token operator">-</span>p <span class="token punctuation">.</span><span class="token operator">/</span>dirdat<span class="token operator">/</span>ekylemkdir <span class="token operator">-</span>p <span class="token punctuation">.</span><span class="token operator">/</span>dirrpt<span class="token operator">/</span>ekyleGGSCI<span class="token operator">></span>EDIT PARAMS pkylesetenv<span class="token punctuation">(</span>NLS_LANG<span class="token operator">=</span><span class="token string">"AMERICAN_AMERICA.ZHS16GBK"</span><span class="token punctuation">)</span>setenv<span class="token punctuation">(</span>ORACLE_SID<span class="token operator">=</span><span class="token string">"orcl"</span><span class="token punctuation">)</span>EXTRACT pkyleUSERID goldengate<span class="token punctuation">,</span>PASSWORD goldengatePASSTHRU                        RMTHOST <span class="token number">172.17</span><span class="token punctuation">.</span><span class="token number">0.122</span><span class="token punctuation">,</span>MGRPORT <span class="token number">7809</span>RMTTRAIL <span class="token punctuation">.</span><span class="token operator">/</span>dirdat<span class="token operator">/</span>rkyle<span class="token operator">/</span>reDISCARDFILE <span class="token punctuation">.</span><span class="token operator">/</span>dirrpt<span class="token operator">/</span>rkyle<span class="token operator">/</span>rkyle<span class="token punctuation">.</span>dsc<span class="token punctuation">,</span> APPEND<span class="token punctuation">,</span> MEGABYTES <span class="token number">200</span><span class="token keyword">TABLE</span> ekyle<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- 禁止extract与数据库交互，适合于PUMP传输进程</span><span class="token comment" spellcheck="true">-- 远端的IP,端口</span><span class="token comment" spellcheck="true">-- 指定写入到远程目标端的哪个队列</span><span class="token comment" spellcheck="true">-- 指定报错输出文件</span><span class="token comment" spellcheck="true">-- 指定传输表</span><span class="token comment" spellcheck="true">--增加pump 进程(指定本地trail 文件)</span>GGSCI<span class="token operator">></span><span class="token keyword">ADD</span> EXTRACT pkyle<span class="token punctuation">,</span>EXTTRAILSOURCE <span class="token punctuation">.</span><span class="token operator">/</span>dirdat<span class="token operator">/</span>ekyle<span class="token operator">/</span>ex<span class="token comment" spellcheck="true">--增加rmttail 文件</span>GGSCI<span class="token operator">></span><span class="token keyword">ADD</span> RMTTRAIL <span class="token punctuation">.</span><span class="token operator">/</span>dirdat<span class="token operator">/</span>rkyle<span class="token operator">/</span>re<span class="token punctuation">,</span> EXTRACT pkyle<span class="token punctuation">,</span> MEGABYTES <span class="token number">200</span><span class="token comment" spellcheck="true">--检查:</span>GGSCI<span class="token operator">></span>INFO  pkyle</code></pre><h3 id="1-8-配置OGG-目标端"><a href="#1-8-配置OGG-目标端" class="headerlink" title="1.8 配置OGG(目标端)"></a>1.8 配置OGG(目标端)</h3><ul><li>1.配置mgr</li></ul><pre class=" language-sql"><code class="language-sql">GGSCI<span class="token operator">></span> EDIT PARAMS MGRPORT <span class="token number">7809</span>AUTOSTART ER <span class="token operator">*</span> AUTORESTART ER <span class="token operator">*</span><span class="token punctuation">,</span> RETRIES <span class="token number">3</span><span class="token punctuation">,</span> WAITMINUTES <span class="token number">3</span><span class="token punctuation">,</span> RESETMINUTES <span class="token number">15</span>PURGEOLDEXTRACTS <span class="token punctuation">.</span><span class="token operator">/</span>dirdat<span class="token comment" spellcheck="true">/*, USECHECKPOINTS, MINKEEPDAYS 2*/</span>GGSCI<span class="token operator">></span><span class="token keyword">START</span> MGRSTOP MGR</code></pre><ul><li>2.配置检查点</li></ul><pre class=" language-sql"><code class="language-sql">GGSCI<span class="token operator">></span> EDIT PARAMS <span class="token punctuation">.</span><span class="token operator">/</span>GLOBALSCHECKPOINTTABLE goldengate<span class="token punctuation">.</span><span class="token keyword">checkpoint</span>GGSCI<span class="token operator">></span> dblogin userid goldengate<span class="token punctuation">,</span>password goldengateGGSCI<span class="token operator">></span> <span class="token keyword">ADD</span> CHECKPOINTTABLE goldengate<span class="token punctuation">.</span><span class="token keyword">checkpoint</span></code></pre><ul><li>3.配置replicat进程<br><code>`</code>sql<br>cd /u01/ggs<br>mkdir -p ./dirdat/rkyle<br>mkdir -p ./dirrpt/rkyle</li></ul><p>ggsci&gt; edit params rkyle</p><p>setenv(NLS_LANG=”AMERICAN_AMERICA.ZHS16GBK”)<br>setenv(ORACLE_SID=”itpux”)<br>REPLICAT rkyle<br>USERID goldengate,PASSWORD goldengate<br>handlecollisions<br>assumetargetdefs<br>DISCARDFILE ./dirrpt/rkyle/rkyle.dsc, APPEND, MEGABYTES 200<br>MAP kyle.<em>, target kyle.</em>;</p><p>–添加replicat 进程<br>GGSCI&gt;<br>ADD REPLICAT rkyle EXTTRAIL ./dirdat/rkyle/re, CHECKPOINTTABLE goldengate.checkpoint<br>–启动相关进程(目标)<br>GGSCI&gt;<br>START rkyle<br>VIEW REPORT rkyle<br>INFO ALL<br>–启动相关进程(源端)<br>GGSCI&gt;<br>START rkyle<br>START pkyle<br>VIEW REPORT rkyle<br>VIEW REPORT pkyle<br>INFO ALL</p><pre><code>### 1.9 disable 目标库所有的trigger、cascading delete、check、job```sqlSET PAGESIZE 2000SET LINESIZE 100--Foreign key Constraints/Cascading DeletesSELECT    &#39;alter table &#39;       || owner       || &#39;.&#39;       || table_name       || &#39; DISABLE CONSTRAINT &#39;       || constraint_name       || &#39;;&#39;  FROM dba_constraints WHERE     constraint_type = &#39;R&#39;       AND delete_rule = &#39;CASCADE&#39;       AND owner IN (&#39;KYLE&#39;,                     &#39;KYLE01&#39;);--查找生成并disable 约束(Check)：SELECT    &#39;alter table &#39;       || owner       || &#39;.&#39;       || table_name       || &#39; DISABLE CONSTRAINT &#39;       || constraint_name       || &#39;;&#39;  FROM dba_constraints WHERE     constraint_type = &#39;C&#39;       AND owner IN (&#39;KYLE&#39;,                     &#39;KYLE01&#39;);--查找生成并disable trigger：SELECT &#39;alter trigger &#39; || owner || &#39;.&#39; || object_name || &#39; disable;&#39;  FROM dba_objects WHERE     object_type = &#39;TRIGGER&#39;       AND owner IN (&#39;KYLE&#39;,                     &#39;KYLE01&#39;);--查找并disable jobSELECT job,       next_date,       next_sec,       failures,       broken  FROM dba_jobs WHERE SCHEMA_USER IN (&#39;KYLE&#39;,                       &#39;KYLE01&#39;);BEGIN    sys.DBMS_JOB.broken (job =&gt; 21, broken =&gt; TRUE);    COMMIT;END;--生成结果如下，然后在目标数据库中执行：alter table ... DISABLE CONSTRAINT SYS_C0017353;alter table ... DISABLE CONSTRAINT SYS_C0017355;……alter trigger ... disable;alter trigger ... disable;alter trigger ... disable;--确认外键已经被禁用SELECT OWNER,       CONSTRAINT_NAME,       CONSTRAINT_TYPE,       STATUS  FROM dba_CONSTRAINTS WHERE     CONSTRAINT_TYPE = &#39;R&#39;       AND status = &#39;ENABLED&#39;       AND owner IN (&#39;KYLE&#39;,                     &#39;KYLE01&#39;);--确认目标端目标表的主键可用:SELECT T1.STATUS,       T1.VALIDATED,       T2.status,       T1.constraint_name,       T1.owner  FROM dba_constraints T1, dba_objects T2 WHERE     T2.OBJECT_NAME = T1.constraint_name       AND T1.OWNER IN (&#39;KYLE&#39;,                        &#39;KYLE01&#39;);--验证job 确实被禁用SELECT job,       LOG_USER,       PRIV_USER,       SCHEMA_USER,       broken  FROM dba_jobs WHERE schema_user IN (&#39;KYLE&#39;,                       &#39;KYLE01&#39;);SELECT OWNER, JOB_NAME, STATE  FROM DBA_SCHEDULER_JOBS WHERE OWNER IN (&#39;KYLE&#39;,                 &#39;KYLE01&#39;);--确认trigger 已经全部关闭SELECT DISTINCT status  FROM dba_triggers WHERE owner IN (&#39;KYLE&#39;,                 &#39;KYLE01&#39;);</code></pre><h2 id="2-添加DDL功能与加密"><a href="#2-添加DDL功能与加密" class="headerlink" title="2,.添加DDL功能与加密"></a>2,.添加DDL功能与加密</h2><h3 id="2-1-添加DDL功能"><a href="#2-1-添加DDL功能" class="headerlink" title="2.1 添加DDL功能"></a>2.1 添加DDL功能</h3><ul><li>1.关闭所有OGG进程</li></ul><pre class=" language-sql"><code class="language-sql">STOP ekyleSTOP pkyleSTOP rkyle</code></pre><ul><li>2.用户的默认表空间不能自动SYSTEM表空间</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">set</span> PAGRSIZE <span class="token number">200</span><span class="token keyword">set</span> LINESIZE <span class="token number">200</span>col USERNAME format A20col DEFAULT_TABLESPACE format A20 <span class="token keyword">SELECT</span> username<span class="token punctuation">,</span> default_tablespace <span class="token keyword">FROM</span> dba_users<span class="token punctuation">;</span></code></pre><ul><li>3.关闭回收站并清空回收站</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--11G可以启动回收站，10G必须关闭回收站</span><span class="token keyword">ALTER</span> SYSTEM <span class="token keyword">SET</span> recyclebin <span class="token operator">=</span> <span class="token keyword">off</span> SCOPE <span class="token operator">=</span> SPFILE<span class="token punctuation">;</span><span class="token keyword">PURGE</span> DBA_RECYCLEBIN<span class="token punctuation">;</span></code></pre><ul><li>4.指明支持DDL的对象放在那个SCHEMA下载</li></ul><pre class=" language-sql"><code class="language-sql">ggsci<span class="token operator">></span> edit params <span class="token punctuation">.</span><span class="token operator">/</span>GLOBALSGGSCHEMA goldengate</code></pre><ul><li>5.添加相关权限</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">GRANT</span> <span class="token keyword">EXECUTE</span> <span class="token keyword">ON</span> UTL_FILE <span class="token keyword">TO</span> goldengate<span class="token punctuation">;</span><span class="token keyword">GRANT</span> RESTRICTED <span class="token keyword">SESSION</span> <span class="token keyword">TO</span> goldengate<span class="token punctuation">;</span><span class="token keyword">GRANT</span> <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span><span class="token punctuation">,</span> <span class="token keyword">CREATE</span> SEQUENCE <span class="token keyword">TO</span> goldengate<span class="token punctuation">;</span><span class="token keyword">GRANT</span> GGS_GGSUSER_ROLE <span class="token keyword">TO</span> goldengate<span class="token punctuation">;</span></code></pre><ul><li>6.执行脚本（源目标）</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token number">cd</span> <span class="token operator">/</span>ggssqlplus <span class="token string">"/as sysdba"</span><span class="token variable">@marker_setup.sql</span><span class="token variable">@ddl_setup.sql</span><span class="token variable">@role_setup.sql</span><span class="token keyword">GRANT</span> GGS_GGSUSER_ROLE <span class="token keyword">TO</span> goldengate<span class="token punctuation">;</span><span class="token variable">@ddl_enable.sql</span><span class="token variable">@$ORACLE_HOME</span><span class="token operator">/</span>rdbms<span class="token operator">/</span>admin<span class="token operator">/</span>dbmspool<span class="token punctuation">.</span>sql<span class="token variable">@ddl_pin.sql</span> goldengate</code></pre><ul><li>7.修改参数，增加DDL复制参数</li></ul><pre class=" language-sql"><code class="language-sql">ggsci <span class="token operator">></span>edit params eitpux01<span class="token comment" spellcheck="true">--DDL INCLUDE OBJNAME "ITPUX01.*"</span>DDL INCLUDE <span class="token keyword">ALL</span>DDLOPTIONS ADDTRANDATA<span class="token punctuation">,</span>REPORTggsci <span class="token operator">></span>edit params ritpux01<span class="token comment" spellcheck="true">--DDL INCLUDE OBJNAME "ITPUX01.*"</span>DDL INCLUDE <span class="token keyword">ALL</span>DDLERROR <span class="token keyword">default</span> <span class="token keyword">ignore</span> retryop</code></pre><ul><li>8.启动进程</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">START</span> ekyle<span class="token keyword">START</span> pkyle<span class="token keyword">START</span> ryle</code></pre><ul><li>DDL其他功能</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--开启</span>ddl_enable<span class="token punctuation">.</span>sql<span class="token comment" spellcheck="true">--关闭</span>ddl_disable<span class="token punctuation">.</span>sql<span class="token comment" spellcheck="true">--清空DDL trace ggs_ddl_trace.log</span>ddl_cleartrace<span class="token punctuation">.</span>sql<span class="token comment" spellcheck="true">--ddl 参数：</span>optype alertobjtype <span class="token string">"table"</span>ojbname <span class="token string">"user.tab*"</span>include mapped object <span class="token string">"*"</span><span class="token punctuation">;</span>exclude mapped object <span class="token string">"itpux.itux*"</span>DDL 环境重配（删除就是<span class="token number">1</span><span class="token operator">-</span><span class="token number">5</span>，<span class="token number">12</span>，去掉参数中的DDL）:<span class="token number">1</span><span class="token punctuation">.</span>停止所有的OGG ex<span class="token operator">/</span>pump<span class="token operator">/</span>rp 进程<span class="token number">2</span><span class="token punctuation">.</span><span class="token variable">@ddl_disable.sql</span><span class="token number">3</span><span class="token punctuation">.</span><span class="token variable">@ddl_remove.sql</span><span class="token number">4</span><span class="token punctuation">.</span><span class="token variable">@marker_remove.sql</span><span class="token number">5</span><span class="token punctuation">.</span><span class="token variable">@marker_setup.sql</span><span class="token number">6</span><span class="token punctuation">.</span><span class="token variable">@ddl_setup.sql</span><span class="token number">7</span><span class="token punctuation">.</span><span class="token variable">@role_setup.sql</span><span class="token number">8</span><span class="token punctuation">.</span><span class="token keyword">GRANT</span> GGS_GGSUSER_ROLE <span class="token keyword">TO</span> goldengate<span class="token punctuation">;</span><span class="token number">9</span><span class="token punctuation">.</span><span class="token variable">@ddl_enable.sql</span><span class="token number">10</span><span class="token punctuation">.</span><span class="token variable">@$ORACLE_HOME</span><span class="token operator">/</span>rdbms<span class="token operator">/</span>admin<span class="token operator">/</span>dbmspool<span class="token punctuation">.</span>sql<span class="token number">11</span><span class="token punctuation">.</span><span class="token variable">@ddl_pin.sql</span> goldengate<span class="token number">12</span><span class="token punctuation">.</span>运行所有的OGG ex<span class="token operator">/</span>pump<span class="token operator">/</span>rp 进程</code></pre><h3 id="2-2-加密"><a href="#2-2-加密" class="headerlink" title="2.2 加密"></a>2.2 加密</h3><ul><li>1.生成加密的KEY </li></ul><pre class=" language-sql"><code class="language-sql"><span class="token punctuation">[</span>oracle<span class="token variable">@orcl</span>:<span class="token operator">/</span>u01<span class="token operator">/</span>ggs<span class="token punctuation">]</span>$keygen <span class="token number">256</span> <span class="token number">1</span>0x1673D6197E05DA1009B1451420A73134BDF868246D6AC878FBFC69193231C355</code></pre><ul><li>2.将KEY存到本地指定文件</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token punctuation">[</span>oracle<span class="token variable">@orcl</span>:<span class="token operator">/</span>u01<span class="token operator">/</span>ggs<span class="token punctuation">]</span>$cat ENCKEYS KYLE_KEY 0xE9E07156ACC2411F97E78D117B55C444E935E27A034CBD389CF2F432F8B5F417</code></pre><ul><li>3.设置登录用的的KEY</li></ul><pre class=" language-sql"><code class="language-sql">GGSCI <span class="token punctuation">(</span>orcl<span class="token punctuation">)</span> <span class="token number">109</span><span class="token operator">></span> ENCRYPT PASSWORD goldengate AES256 ENCRYPTKEY KYLE_KEYEncrypted password:  AADAAAAAAAAAAAKABIXBCASDGBHCGFNGMHJIFFMDXFGBRCLHTGJGVIECPCGEUAJEXDSEFBUCGATGKGUGBGCCVFKBBENDYBSAPDZBACQCQILIRHYH<span class="token keyword">Algorithm</span> used:  AES256</code></pre><ul><li>添加KEY到相应文件</li></ul><pre class=" language-sql"><code class="language-sql">extract eitpux01DDL INCLUDE <span class="token keyword">ALL</span>DDLOPTIONS ADDTRANDATA<span class="token punctuation">,</span>REPORTuserid goldengate<span class="token punctuation">,</span>password AADAAAAAAAAAAAKACAHHWIRDTBQDNBUJYFUCXCGEVBCDHBCEGFOIQFSEGFKCBGLDPGUGAIIHZDJATJSJYBPBSJSJUFSBJCUBYCXBFBPJPDSBVGBJ<span class="token punctuation">,</span>AES256<span class="token punctuation">,</span>ENCRYPTKEY KYLE_KEYexttrail <span class="token punctuation">.</span><span class="token operator">/</span>dirdat<span class="token operator">/</span>eitpux01<span class="token operator">/</span>extranlogoptions excludeuser goldengatetranlogoptions convertucs2clobswarnlongtrans 12h<span class="token punctuation">,</span>checkinterval 30mdiscardfile <span class="token punctuation">.</span><span class="token operator">/</span>dirrpt<span class="token operator">/</span>eitpux01<span class="token operator">/</span>eitpux01<span class="token punctuation">.</span>dsc<span class="token punctuation">,</span>append<span class="token punctuation">,</span>megabytes <span class="token number">200</span><span class="token keyword">TABLE</span> itpux<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--TABLE itpux01.*;</span><span class="token comment" spellcheck="true">--TABLE itpux02.*;</span><span class="token comment" spellcheck="true">--TABLE itpux03.*;</span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;OracleGoldengate数据库复制与容灾实施&quot;&gt;&lt;a href=&quot;#OracleGoldengate数据库复制与容灾实施&quot; class=&quot;headerlink&quot; title=&quot;OracleGoldengate数据库复制与容灾实施&quot;&gt;&lt;/a&gt;OracleGo
      
    
    </summary>
    
      <category term="Oracle" scheme="https://kyle.github.io/categories/Oracle/"/>
    
    
      <category term="Oracle" scheme="https://kyle.github.io/tags/Oracle/"/>
    
      <category term="GoldenGate" scheme="https://kyle.github.io/tags/GoldenGate/"/>
    
      <category term="备份容灾" scheme="https://kyle.github.io/tags/%E5%A4%87%E4%BB%BD%E5%AE%B9%E7%81%BE/"/>
    
  </entry>
  
  <entry>
    <title>怎么用Gin去构建一个RESTful API Golang Service【翻译】</title>
    <link href="https://kyle.github.io/2018/09/07/golang/zen-me-yong-gin-qu-gou-jian-yi-ge-restful-api-golang-service/"/>
    <id>https://kyle.github.io/2018/09/07/golang/zen-me-yong-gin-qu-gou-jian-yi-ge-restful-api-golang-service/</id>
    <published>2018-09-07T01:25:00.000Z</published>
    <updated>2019-05-03T15:07:22.024Z</updated>
    
    <content type="html"><![CDATA[<h1 id="怎么用Gin去构建一个RESTful-API-Golang-Service【翻译】"><a href="#怎么用Gin去构建一个RESTful-API-Golang-Service【翻译】" class="headerlink" title="怎么用Gin去构建一个RESTful API Golang Service【翻译】"></a>怎么用Gin去构建一个RESTful API Golang Service【翻译】</h1><p>##前言</p><p><a href="&quot;Cover&quot;"><img src="http://oss.anonycurse.cn/article/images/20181105/531wGkj4qxe98UALsFO6vy9kRhdLLqVQZY0jnNhE.png" alt="Cover" title="Cover"></a></p><p>Today I’m going to build a simple API for todo application with the golang programming language. I’m going to use golang simplest/fastest framework gin-gonic and a beautiful ORM gorm for our database work. To install these packages go to your workspace $GOPATH/src and run these command below:</p><pre class=" language-go"><code class="language-go">$ <span class="token keyword">go</span> get gopkg<span class="token punctuation">.</span>in<span class="token operator">/</span>gin<span class="token operator">-</span>gonic<span class="token operator">/</span>gin<span class="token punctuation">.</span>v1$ <span class="token keyword">go</span> get <span class="token operator">-</span>u github<span class="token punctuation">.</span>com<span class="token operator">/</span>jinzhu<span class="token operator">/</span>gorm$ <span class="token keyword">go</span> get github<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">go</span><span class="token operator">-</span>sql<span class="token operator">-</span>driver<span class="token operator">/</span>mysql</code></pre><h2 id="In-generic-crud-application-we-need-the-API’s-as-follows"><a href="#In-generic-crud-application-we-need-the-API’s-as-follows" class="headerlink" title="In generic crud application we need the API’s as follows:"></a>In generic crud application we need the API’s as follows:</h2><ul><li>POST todos/</li><li>GET todos/</li><li>GET todos/{id}</li><li>PUT todos/{id}</li><li>DELETE todos/{id}</li></ul><p>Let’s start coding, go to your $GOPATH/src and make a directory todo. Inside the todo directory create a file main.go. Import the “gin framework” to our project and create the routes like below inside main function. I like to add a prefix of the apis like “api/v1/”, that’s why we’ll use the router Group method</p><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span>       <span class="token string">"github.com/gin-gonic/gin"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>v1 <span class="token operator">:=</span> router<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"/api/v1/todos"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  v1<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> createTodo<span class="token punctuation">)</span>  v1<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> fetchAllTodo<span class="token punctuation">)</span>  v1<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/:id"</span><span class="token punctuation">,</span> fetchSingleTodo<span class="token punctuation">)</span>  v1<span class="token punctuation">.</span><span class="token function">PUT</span><span class="token punctuation">(</span><span class="token string">"/:id"</span><span class="token punctuation">,</span> updateTodo<span class="token punctuation">)</span>  v1<span class="token punctuation">.</span><span class="token function">DELETE</span><span class="token punctuation">(</span><span class="token string">"/:id"</span><span class="token punctuation">,</span> deleteTodo<span class="token punctuation">)</span> <span class="token punctuation">}</span> router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><p>We have created five routes and they handle some functions like <code>createTodo</code>, <code>fetchAllTodo</code> etc. We’ll discuss about them soon.</p><p>Now we need to setup a database connection. To use database pull the gorm package and mysql dialects in our code. Follow the code below:</p><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span>       <span class="token string">"github.com/gin-gonic/gin"</span>       <span class="token string">"github.com/jinzhu/gorm"</span>       <span class="token boolean">_</span> <span class="token string">"github.com/jinzhu/gorm/dialects/mysql"</span><span class="token punctuation">)</span><span class="token keyword">var</span> db <span class="token operator">*</span>gorm<span class="token punctuation">.</span>DB<span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//open a db connection</span> <span class="token keyword">var</span> err <span class="token builtin">error</span> db<span class="token punctuation">,</span> err <span class="token operator">=</span> gorm<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">"mysql"</span><span class="token punctuation">,</span> <span class="token string">"root:12345@/demo?charset=utf8&amp;parseTime=True&amp;loc=Local"</span><span class="token punctuation">)</span> <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>  <span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">"failed to connect database"</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token comment" spellcheck="true">//Migrate the schema</span> db<span class="token punctuation">.</span><span class="token function">AutoMigrate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>todoModel<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><p>In the above code “mysql” is our database driver, “root” is database username, “12345” password and “demo” is database name. Please change these information as your needs.</p><p>We’ll use the Database function to get the database connection. Lets make a todoModel and transformedTodo struct. The first struct will represent the original Todo and the second one will hold the transformed todo for response to the api. Here we transformed the todo response because we don’t expose some database fields (updated_at, created_at) to the consumer.</p><pre class=" language-go"><code class="language-go"><span class="token keyword">type</span> <span class="token punctuation">(</span> <span class="token comment" spellcheck="true">// todoModel describes a todoModel type</span> todoModel <span class="token keyword">struct</span> <span class="token punctuation">{</span>  gorm<span class="token punctuation">.</span>Model  Title     <span class="token builtin">string</span> <span class="token string">`json:"title"`</span>  Completed <span class="token builtin">int</span>    <span class="token string">`json:"completed"`</span> <span class="token punctuation">}</span><span class="token comment" spellcheck="true">// transformedTodo represents a formatted todo</span> transformedTodo <span class="token keyword">struct</span> <span class="token punctuation">{</span>  ID        <span class="token builtin">uint</span>   <span class="token string">`json:"id"`</span>  Title     <span class="token builtin">string</span> <span class="token string">`json:"title"`</span>  Completed <span class="token builtin">bool</span>   <span class="token string">`json:"completed"`</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>Todo struct has one field extra gorm.Model what does it mean? well, this field will embed a Model struct for us which contains four fields “ID, CreatedAt, UpdatedAt, DeletedAt”</p><p>Gorm has migration facilities, we already used it in init function. When we run the application first it’ll create a connection and then the migration.</p><pre class=" language-go"><code class="language-go"><span class="token comment" spellcheck="true">//Migrate the schema</span> db<span class="token punctuation">.</span><span class="token function">AutoMigrate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>todoModel<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p><img src="http://oss.anonycurse.cn/article/images/20181105/bhwTdjLFSN57B6kkl8CE8NVaZ7zeXGsYHhh7D0c0.png" alt="Migrate " title="Migrate "></p><p>Can you remember the five routes we wrote a minute earlier? Lets implement the five methods one by one.</p><p>When a user send a POST request to the path ‘api/v1/todos/’ with ‘title and completed’ field it’ll be handled by this route v1.POST(“/”, createTodo)</p><p>Lets Implement the createTodo function</p><pre class=" language-go"><code class="language-go"><span class="token comment" spellcheck="true">// createTodo add a new todo</span><span class="token keyword">func</span> <span class="token function">createTodo</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span> completed<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">PostForm</span><span class="token punctuation">(</span><span class="token string">"completed"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> todo <span class="token operator">:=</span> todoModel<span class="token punctuation">{</span>Title<span class="token punctuation">:</span> c<span class="token punctuation">.</span><span class="token function">PostForm</span><span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Completed<span class="token punctuation">:</span> completed<span class="token punctuation">}</span> db<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>todo<span class="token punctuation">)</span> c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusCreated<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"status"</span><span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusCreated<span class="token punctuation">,</span> <span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"Todo item created successfully!"</span><span class="token punctuation">,</span> <span class="token string">"resourceId"</span><span class="token punctuation">:</span> todo<span class="token punctuation">.</span>ID<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><p>In the above code we use gin Context to receive the posted data and gorm database connection to save the todo. After saving the resource we send the resource id with a good &amp; meaningful response to the user.</p><p>Lets implement the rest of the functions</p><pre class=" language-go"><code class="language-go"><span class="token comment" spellcheck="true">// fetchAllTodo fetch all todos</span><span class="token keyword">func</span> <span class="token function">fetchAllTodo</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">var</span> todos <span class="token punctuation">[</span><span class="token punctuation">]</span>todoModel <span class="token keyword">var</span> _todos <span class="token punctuation">[</span><span class="token punctuation">]</span>transformedTododb<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>todos<span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>todos<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token punctuation">{</span>  c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusNotFound<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"status"</span><span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusNotFound<span class="token punctuation">,</span> <span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"No todo found!"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> <span class="token punctuation">}</span><span class="token comment" spellcheck="true">//transforms the todos for building a good response</span> <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> item <span class="token operator">:=</span> <span class="token keyword">range</span> todos <span class="token punctuation">{</span>  completed <span class="token operator">:=</span> <span class="token boolean">false</span>  <span class="token keyword">if</span> item<span class="token punctuation">.</span>Completed <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span>   completed <span class="token operator">=</span> <span class="token boolean">true</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>   completed <span class="token operator">=</span> <span class="token boolean">false</span>  <span class="token punctuation">}</span>  _todos <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>_todos<span class="token punctuation">,</span> transformedTodo<span class="token punctuation">{</span>ID<span class="token punctuation">:</span> item<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> Title<span class="token punctuation">:</span> item<span class="token punctuation">.</span>Title<span class="token punctuation">,</span> Completed<span class="token punctuation">:</span> completed<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"status"</span><span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">"data"</span><span class="token punctuation">:</span> _todos<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// fetchSingleTodo fetch a single todo</span><span class="token keyword">func</span> <span class="token function">fetchSingleTodo</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">var</span> todo todoModel todoID <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Param</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span>db<span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>todo<span class="token punctuation">,</span> todoID<span class="token punctuation">)</span><span class="token keyword">if</span> todo<span class="token punctuation">.</span>ID <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>  c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusNotFound<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"status"</span><span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusNotFound<span class="token punctuation">,</span> <span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"No todo found!"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> <span class="token punctuation">}</span>completed <span class="token operator">:=</span> <span class="token boolean">false</span> <span class="token keyword">if</span> todo<span class="token punctuation">.</span>Completed <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span>  completed <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>  completed <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token punctuation">}</span>_todo <span class="token operator">:=</span> transformedTodo<span class="token punctuation">{</span>ID<span class="token punctuation">:</span> todo<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> Title<span class="token punctuation">:</span> todo<span class="token punctuation">.</span>Title<span class="token punctuation">,</span> Completed<span class="token punctuation">:</span> completed<span class="token punctuation">}</span> c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"status"</span><span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">"data"</span><span class="token punctuation">:</span> _todo<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// updateTodo update a todo</span><span class="token keyword">func</span> <span class="token function">updateTodo</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">var</span> todo todoModel todoID <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Param</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span>db<span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>todo<span class="token punctuation">,</span> todoID<span class="token punctuation">)</span><span class="token keyword">if</span> todo<span class="token punctuation">.</span>ID <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>  c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusNotFound<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"status"</span><span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusNotFound<span class="token punctuation">,</span> <span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"No todo found!"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> <span class="token punctuation">}</span>db<span class="token punctuation">.</span><span class="token function">Model</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>todo<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span><span class="token function">PostForm</span><span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> completed<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">PostForm</span><span class="token punctuation">(</span><span class="token string">"completed"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> db<span class="token punctuation">.</span><span class="token function">Model</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>todo<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span><span class="token string">"completed"</span><span class="token punctuation">,</span> completed<span class="token punctuation">)</span> c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"status"</span><span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"Todo updated successfully!"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// deleteTodo remove a todo</span><span class="token keyword">func</span> <span class="token function">deleteTodo</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">var</span> todo todoModel todoID <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Param</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span>db<span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>todo<span class="token punctuation">,</span> todoID<span class="token punctuation">)</span><span class="token keyword">if</span> todo<span class="token punctuation">.</span>ID <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>  c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusNotFound<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"status"</span><span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusNotFound<span class="token punctuation">,</span> <span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"No todo found!"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> <span class="token punctuation">}</span>db<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>todo<span class="token punctuation">)</span> c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"status"</span><span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"Todo deleted successfully!"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><p>In the fetchAllTodo function we fetched all the todos and and build a transformed response with id, title, completed . We removed the CreatedAt, UpdatedAt, DeletedAt fields and cast the integer value to bool.</p><p>Well, we write enough code, let try to build the app and test it, I’m going test it using chrome extension Postman (you can use any REST client like curl to test).</p><p>To build the app open your terminal and go the the project directory</p><pre class=" language-go"><code class="language-go">$ <span class="token keyword">go</span> build main<span class="token punctuation">.</span><span class="token keyword">go</span></code></pre><p>The command will build a binary file main and to run the file us this command $ ./main . Wow, our simple todo app is running on port: 8080. It’ll display the debug log, because by default gin run’s in debug mode and port 8080.</p><p>To test the api run postman and test the api sequentially</p><p><img src="http://oss.anonycurse.cn/article/images/20181105/wVld5PMtLBFEsVXjcE6pY9FhQSM5MuQB6hAJCtWe.png" alt="Create a todo" title="Create a todo"></p><p><img src="http://oss.anonycurse.cn/article/images/20181105/KVYw3KtSm1CqkS1R9jaTdxBXwue69Rv68F0eD4gL.png" alt="Fetch all todos" title="Fetch all todos"></p><p><img src="http://oss.anonycurse.cn/article/images/20181105/Iye2ekzbzEPkO8ScOwqnV0tLSun07itdPsXannpm.png" alt="Fetch a single todo" title="Fetch a single todo"></p><p><img src="http://oss.anonycurse.cn/article/images/20181105/Y5VFuzWRyiocmO6JERjrZw5hvn9B7OBiQbAi4U0S.png" alt="Update a todo" title="Update a todo"></p><p><img src="http://oss.anonycurse.cn/article/images/20181105/8b3CN4i3tfZbtsOvFglwi3DLtpHCPlmwfHuuBsWb.png" alt="Delete a todo" title="Delete a todo"></p><h2 id="Need-full-source-code"><a href="#Need-full-source-code" class="headerlink" title="Need full source code?"></a>Need full source code?</h2><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"net/http"</span>    <span class="token string">"strconv"</span>    <span class="token string">"github.com/gin-gonic/gin"</span>    <span class="token string">"github.com/jinzhu/gorm"</span>    <span class="token boolean">_</span> <span class="token string">"github.com/jinzhu/gorm/dialects/mysql"</span><span class="token punctuation">)</span><span class="token keyword">var</span> db <span class="token operator">*</span>gorm<span class="token punctuation">.</span>DB<span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//open a db connection</span>    <span class="token keyword">var</span> err <span class="token builtin">error</span>    db<span class="token punctuation">,</span> err <span class="token operator">=</span> gorm<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">"mysql"</span><span class="token punctuation">,</span> <span class="token string">"root:12345@/demo?charset=utf8&amp;parseTime=True&amp;loc=Local"</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        <span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">"failed to connect database"</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//Migrate the schema</span>    db<span class="token punctuation">.</span><span class="token function">AutoMigrate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>todoModel<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    v1 <span class="token operator">:=</span> router<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"/api/v1/todos"</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        v1<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> createTodo<span class="token punctuation">)</span>        v1<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> fetchAllTodo<span class="token punctuation">)</span>        v1<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/:id"</span><span class="token punctuation">,</span> fetchSingleTodo<span class="token punctuation">)</span>        v1<span class="token punctuation">.</span><span class="token function">PUT</span><span class="token punctuation">(</span><span class="token string">"/:id"</span><span class="token punctuation">,</span> updateTodo<span class="token punctuation">)</span>        v1<span class="token punctuation">.</span><span class="token function">DELETE</span><span class="token punctuation">(</span><span class="token string">"/:id"</span><span class="token punctuation">,</span> deleteTodo<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">type</span> <span class="token punctuation">(</span>    <span class="token comment" spellcheck="true">// todoModel describes a todoModel type</span>    todoModel <span class="token keyword">struct</span> <span class="token punctuation">{</span>        gorm<span class="token punctuation">.</span>Model        Title     <span class="token builtin">string</span> <span class="token string">`json:"title"`</span>        Completed <span class="token builtin">int</span>    <span class="token string">`json:"completed"`</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// transformedTodo represents a formatted todo</span>    transformedTodo <span class="token keyword">struct</span> <span class="token punctuation">{</span>        ID        <span class="token builtin">uint</span>   <span class="token string">`json:"id"`</span>        Title     <span class="token builtin">string</span> <span class="token string">`json:"title"`</span>        Completed <span class="token builtin">bool</span>   <span class="token string">`json:"completed"`</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// createTodo add a new todo</span><span class="token keyword">func</span> <span class="token function">createTodo</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    completed<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">PostForm</span><span class="token punctuation">(</span><span class="token string">"completed"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    todo <span class="token operator">:=</span> todoModel<span class="token punctuation">{</span>Title<span class="token punctuation">:</span> c<span class="token punctuation">.</span><span class="token function">PostForm</span><span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Completed<span class="token punctuation">:</span> completed<span class="token punctuation">}</span>    db<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>todo<span class="token punctuation">)</span>    c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusCreated<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"status"</span><span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusCreated<span class="token punctuation">,</span> <span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"Todo item created successfully!"</span><span class="token punctuation">,</span> <span class="token string">"resourceId"</span><span class="token punctuation">:</span> todo<span class="token punctuation">.</span>ID<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// fetchAllTodo fetch all todos</span><span class="token keyword">func</span> <span class="token function">fetchAllTodo</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> todos <span class="token punctuation">[</span><span class="token punctuation">]</span>todoModel    <span class="token keyword">var</span> _todos <span class="token punctuation">[</span><span class="token punctuation">]</span>transformedTodo    db<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>todos<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>todos<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token punctuation">{</span>        c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusNotFound<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"status"</span><span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusNotFound<span class="token punctuation">,</span> <span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"No todo found!"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//transforms the todos for building a good response</span>    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> item <span class="token operator">:=</span> <span class="token keyword">range</span> todos <span class="token punctuation">{</span>        completed <span class="token operator">:=</span> <span class="token boolean">false</span>        <span class="token keyword">if</span> item<span class="token punctuation">.</span>Completed <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span>            completed <span class="token operator">=</span> <span class="token boolean">true</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            completed <span class="token operator">=</span> <span class="token boolean">false</span>        <span class="token punctuation">}</span>        _todos <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>_todos<span class="token punctuation">,</span> transformedTodo<span class="token punctuation">{</span>ID<span class="token punctuation">:</span> item<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> Title<span class="token punctuation">:</span> item<span class="token punctuation">.</span>Title<span class="token punctuation">,</span> Completed<span class="token punctuation">:</span> completed<span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"status"</span><span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">"data"</span><span class="token punctuation">:</span> _todos<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// fetchSingleTodo fetch a single todo</span><span class="token keyword">func</span> <span class="token function">fetchSingleTodo</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> todo todoModel    todoID <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Param</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span>    db<span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>todo<span class="token punctuation">,</span> todoID<span class="token punctuation">)</span>    <span class="token keyword">if</span> todo<span class="token punctuation">.</span>ID <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>        c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusNotFound<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"status"</span><span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusNotFound<span class="token punctuation">,</span> <span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"No todo found!"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">}</span>    completed <span class="token operator">:=</span> <span class="token boolean">false</span>    <span class="token keyword">if</span> todo<span class="token punctuation">.</span>Completed <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span>        completed <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        completed <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token punctuation">}</span>    _todo <span class="token operator">:=</span> transformedTodo<span class="token punctuation">{</span>ID<span class="token punctuation">:</span> todo<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> Title<span class="token punctuation">:</span> todo<span class="token punctuation">.</span>Title<span class="token punctuation">,</span> Completed<span class="token punctuation">:</span> completed<span class="token punctuation">}</span>    c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"status"</span><span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">"data"</span><span class="token punctuation">:</span> _todo<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// updateTodo update a todo</span><span class="token keyword">func</span> <span class="token function">updateTodo</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> todo todoModel    todoID <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Param</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span>    db<span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>todo<span class="token punctuation">,</span> todoID<span class="token punctuation">)</span>    <span class="token keyword">if</span> todo<span class="token punctuation">.</span>ID <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>        c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusNotFound<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"status"</span><span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusNotFound<span class="token punctuation">,</span> <span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"No todo found!"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">}</span>    db<span class="token punctuation">.</span><span class="token function">Model</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>todo<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span><span class="token function">PostForm</span><span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    completed<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">PostForm</span><span class="token punctuation">(</span><span class="token string">"completed"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    db<span class="token punctuation">.</span><span class="token function">Model</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>todo<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span><span class="token string">"completed"</span><span class="token punctuation">,</span> completed<span class="token punctuation">)</span>    c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"status"</span><span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"Todo updated successfully!"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// deleteTodo remove a todo</span><span class="token keyword">func</span> <span class="token function">deleteTodo</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> todo todoModel    todoID <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Param</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span>    db<span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>todo<span class="token punctuation">,</span> todoID<span class="token punctuation">)</span>    <span class="token keyword">if</span> todo<span class="token punctuation">.</span>ID <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>        c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusNotFound<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"status"</span><span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusNotFound<span class="token punctuation">,</span> <span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"No todo found!"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">}</span>    db<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>todo<span class="token punctuation">)</span>    c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"status"</span><span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"Todo deleted successfully!"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><blockquote><p>Note: When you are using code production you must take care of the steps below:</p></blockquote><ul><li>Do not fetch all the data select * from todos , use pagination</li><li>Do not trust user input. You must validate the inputs, there are severals tools to validate input. Read the article for validation process</li><li>Check every possible error</li><li>You should use logging and authentication as your need</li><li>I am really sorry for my BAD English and Writing flow. If you notice any mistake in the article please feel free to write a comment.</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;怎么用Gin去构建一个RESTful-API-Golang-Service【翻译】&quot;&gt;&lt;a href=&quot;#怎么用Gin去构建一个RESTful-API-Golang-Service【翻译】&quot; class=&quot;headerlink&quot; title=&quot;怎么用Gin去构建一
      
    
    </summary>
    
      <category term="Golang" scheme="https://kyle.github.io/categories/Golang/"/>
    
    
      <category term="Golang" scheme="https://kyle.github.io/tags/Golang/"/>
    
      <category term="Gin" scheme="https://kyle.github.io/tags/Gin/"/>
    
  </entry>
  
</feed>
